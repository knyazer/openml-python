Search.setIndex({"docnames": ["api", "contributing", "examples/20_basic/index", "examples/20_basic/introduction_tutorial", "examples/20_basic/sg_execution_times", "examples/20_basic/simple_datasets_tutorial", "examples/20_basic/simple_flows_and_runs_tutorial", "examples/20_basic/simple_suites_tutorial", "examples/30_extended/configure_logging", "examples/30_extended/create_upload_tutorial", "examples/30_extended/custom_flow_", "examples/30_extended/datasets_tutorial", "examples/30_extended/fetch_evaluations_tutorial", "examples/30_extended/fetch_runtimes_tutorial", "examples/30_extended/flow_id_tutorial", "examples/30_extended/flows_and_runs_tutorial", "examples/30_extended/index", "examples/30_extended/plot_svm_hyperparameters_tutorial", "examples/30_extended/run_setup_tutorial", "examples/30_extended/sg_execution_times", "examples/30_extended/study_tutorial", "examples/30_extended/suites_tutorial", "examples/30_extended/task_manual_iteration_tutorial", "examples/30_extended/tasks_tutorial", "examples/40_paper/2015_neurips_feurer_example", "examples/40_paper/2018_ida_strang_example", "examples/40_paper/2018_kdd_rijn_example", "examples/40_paper/2018_neurips_perrone_example", "examples/40_paper/index", "examples/40_paper/sg_execution_times", "examples/index", "extensions", "generated/openml.datasets.OpenMLDataFeature", "generated/openml.datasets.OpenMLDataset", "generated/openml.datasets.attributes_arff_from_df", "generated/openml.datasets.check_datasets_active", "generated/openml.datasets.create_dataset", "generated/openml.datasets.delete_dataset", "generated/openml.datasets.edit_dataset", "generated/openml.datasets.fork_dataset", "generated/openml.datasets.get_dataset", "generated/openml.datasets.get_datasets", "generated/openml.datasets.list_datasets", "generated/openml.datasets.list_qualities", "generated/openml.datasets.status_update", "generated/openml.evaluations.OpenMLEvaluation", "generated/openml.evaluations.list_evaluation_measures", "generated/openml.evaluations.list_evaluations", "generated/openml.evaluations.list_evaluations_setups", "generated/openml.extensions.Extension", "generated/openml.extensions.get_extension_by_flow", "generated/openml.extensions.get_extension_by_model", "generated/openml.extensions.register_extension", "generated/openml.extensions.sklearn.SklearnExtension", "generated/openml.flows.OpenMLFlow", "generated/openml.flows.assert_flows_equal", "generated/openml.flows.delete_flow", "generated/openml.flows.flow_exists", "generated/openml.flows.get_flow", "generated/openml.flows.list_flows", "generated/openml.runs.OpenMLRun", "generated/openml.runs.delete_run", "generated/openml.runs.get_run", "generated/openml.runs.get_run_trace", "generated/openml.runs.get_runs", "generated/openml.runs.initialize_model_from_run", "generated/openml.runs.initialize_model_from_trace", "generated/openml.runs.list_runs", "generated/openml.runs.run_exists", "generated/openml.runs.run_flow_on_task", "generated/openml.runs.run_model_on_task", "generated/openml.setups.OpenMLParameter", "generated/openml.setups.OpenMLSetup", "generated/openml.setups.get_setup", "generated/openml.setups.initialize_model", "generated/openml.setups.list_setups", "generated/openml.setups.setup_exists", "generated/openml.study.OpenMLBenchmarkSuite", "generated/openml.study.OpenMLStudy", "generated/openml.study.attach_to_study", "generated/openml.study.attach_to_suite", "generated/openml.study.create_benchmark_suite", "generated/openml.study.create_study", "generated/openml.study.delete_study", "generated/openml.study.delete_suite", "generated/openml.study.detach_from_study", "generated/openml.study.detach_from_suite", "generated/openml.study.get_study", "generated/openml.study.get_suite", "generated/openml.study.list_studies", "generated/openml.study.list_suites", "generated/openml.study.update_study_status", "generated/openml.study.update_suite_status", "generated/openml.tasks.OpenMLClassificationTask", "generated/openml.tasks.OpenMLClusteringTask", "generated/openml.tasks.OpenMLLearningCurveTask", "generated/openml.tasks.OpenMLRegressionTask", "generated/openml.tasks.OpenMLSplit", "generated/openml.tasks.OpenMLSupervisedTask", "generated/openml.tasks.OpenMLTask", "generated/openml.tasks.TaskType", "generated/openml.tasks.create_task", "generated/openml.tasks.delete_task", "generated/openml.tasks.get_task", "generated/openml.tasks.get_tasks", "generated/openml.tasks.list_tasks", "index", "progress", "usage"], "filenames": ["api.rst", "contributing.rst", "examples/20_basic/index.rst", "examples/20_basic/introduction_tutorial.rst", "examples/20_basic/sg_execution_times.rst", "examples/20_basic/simple_datasets_tutorial.rst", "examples/20_basic/simple_flows_and_runs_tutorial.rst", "examples/20_basic/simple_suites_tutorial.rst", "examples/30_extended/configure_logging.rst", "examples/30_extended/create_upload_tutorial.rst", "examples/30_extended/custom_flow_.rst", "examples/30_extended/datasets_tutorial.rst", "examples/30_extended/fetch_evaluations_tutorial.rst", "examples/30_extended/fetch_runtimes_tutorial.rst", "examples/30_extended/flow_id_tutorial.rst", "examples/30_extended/flows_and_runs_tutorial.rst", "examples/30_extended/index.rst", "examples/30_extended/plot_svm_hyperparameters_tutorial.rst", "examples/30_extended/run_setup_tutorial.rst", "examples/30_extended/sg_execution_times.rst", "examples/30_extended/study_tutorial.rst", "examples/30_extended/suites_tutorial.rst", "examples/30_extended/task_manual_iteration_tutorial.rst", "examples/30_extended/tasks_tutorial.rst", "examples/40_paper/2015_neurips_feurer_example.rst", "examples/40_paper/2018_ida_strang_example.rst", "examples/40_paper/2018_kdd_rijn_example.rst", "examples/40_paper/2018_neurips_perrone_example.rst", "examples/40_paper/index.rst", "examples/40_paper/sg_execution_times.rst", "examples/index.rst", "extensions.rst", "generated/openml.datasets.OpenMLDataFeature.rst", "generated/openml.datasets.OpenMLDataset.rst", "generated/openml.datasets.attributes_arff_from_df.rst", "generated/openml.datasets.check_datasets_active.rst", "generated/openml.datasets.create_dataset.rst", "generated/openml.datasets.delete_dataset.rst", "generated/openml.datasets.edit_dataset.rst", "generated/openml.datasets.fork_dataset.rst", "generated/openml.datasets.get_dataset.rst", "generated/openml.datasets.get_datasets.rst", "generated/openml.datasets.list_datasets.rst", "generated/openml.datasets.list_qualities.rst", "generated/openml.datasets.status_update.rst", "generated/openml.evaluations.OpenMLEvaluation.rst", "generated/openml.evaluations.list_evaluation_measures.rst", "generated/openml.evaluations.list_evaluations.rst", "generated/openml.evaluations.list_evaluations_setups.rst", "generated/openml.extensions.Extension.rst", "generated/openml.extensions.get_extension_by_flow.rst", "generated/openml.extensions.get_extension_by_model.rst", "generated/openml.extensions.register_extension.rst", "generated/openml.extensions.sklearn.SklearnExtension.rst", "generated/openml.flows.OpenMLFlow.rst", "generated/openml.flows.assert_flows_equal.rst", "generated/openml.flows.delete_flow.rst", "generated/openml.flows.flow_exists.rst", "generated/openml.flows.get_flow.rst", "generated/openml.flows.list_flows.rst", "generated/openml.runs.OpenMLRun.rst", "generated/openml.runs.delete_run.rst", "generated/openml.runs.get_run.rst", "generated/openml.runs.get_run_trace.rst", "generated/openml.runs.get_runs.rst", "generated/openml.runs.initialize_model_from_run.rst", "generated/openml.runs.initialize_model_from_trace.rst", "generated/openml.runs.list_runs.rst", "generated/openml.runs.run_exists.rst", "generated/openml.runs.run_flow_on_task.rst", "generated/openml.runs.run_model_on_task.rst", "generated/openml.setups.OpenMLParameter.rst", "generated/openml.setups.OpenMLSetup.rst", "generated/openml.setups.get_setup.rst", "generated/openml.setups.initialize_model.rst", "generated/openml.setups.list_setups.rst", "generated/openml.setups.setup_exists.rst", "generated/openml.study.OpenMLBenchmarkSuite.rst", "generated/openml.study.OpenMLStudy.rst", "generated/openml.study.attach_to_study.rst", "generated/openml.study.attach_to_suite.rst", "generated/openml.study.create_benchmark_suite.rst", "generated/openml.study.create_study.rst", "generated/openml.study.delete_study.rst", "generated/openml.study.delete_suite.rst", "generated/openml.study.detach_from_study.rst", "generated/openml.study.detach_from_suite.rst", "generated/openml.study.get_study.rst", "generated/openml.study.get_suite.rst", "generated/openml.study.list_studies.rst", "generated/openml.study.list_suites.rst", "generated/openml.study.update_study_status.rst", "generated/openml.study.update_suite_status.rst", "generated/openml.tasks.OpenMLClassificationTask.rst", "generated/openml.tasks.OpenMLClusteringTask.rst", "generated/openml.tasks.OpenMLLearningCurveTask.rst", "generated/openml.tasks.OpenMLRegressionTask.rst", "generated/openml.tasks.OpenMLSplit.rst", "generated/openml.tasks.OpenMLSupervisedTask.rst", "generated/openml.tasks.OpenMLTask.rst", "generated/openml.tasks.TaskType.rst", "generated/openml.tasks.create_task.rst", "generated/openml.tasks.delete_task.rst", "generated/openml.tasks.get_task.rst", "generated/openml.tasks.get_tasks.rst", "generated/openml.tasks.list_tasks.rst", "index.rst", "progress.rst", "usage.rst"], "titles": ["API", "Contributing", "Introductory Examples", "Introduction tutorial &amp; Setup", "Computation times", "Datasets", "Flows and Runs", "Benchmark suites", "Logging", "Dataset upload tutorial", "Creating and Using a Custom Flow", "Datasets", "Fetching Evaluations", "Measuring runtimes for Scikit-learn models", "Obtaining Flow IDs", "Flows and Runs", "In-Depth Examples", "Plotting hyperparameter surfaces", "Run Setup", "Computation times", "Benchmark studies", "Benchmark suites", "Tasks: retrieving splits", "Tasks", "Feurer et al. (2015)", "Strang et al. (2018)", "van Rijn and Hutter (2018)", "Perrone et al. (2018)", "Usage in research papers", "Computation times", "Examples Gallery", "Extensions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.datasets</span></code>.OpenMLDataFeature", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.datasets</span></code>.OpenMLDataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.datasets</span></code>.attributes_arff_from_df", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.datasets</span></code>.check_datasets_active", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.datasets</span></code>.create_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.datasets</span></code>.delete_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.datasets</span></code>.edit_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.datasets</span></code>.fork_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.datasets</span></code>.get_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.datasets</span></code>.get_datasets", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.datasets</span></code>.list_datasets", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.datasets</span></code>.list_qualities", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.datasets</span></code>.status_update", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.evaluations</span></code>.OpenMLEvaluation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.evaluations</span></code>.list_evaluation_measures", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.evaluations</span></code>.list_evaluations", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.evaluations</span></code>.list_evaluations_setups", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.extensions</span></code>.Extension", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.extensions</span></code>.get_extension_by_flow", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.extensions</span></code>.get_extension_by_model", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.extensions</span></code>.register_extension", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.extensions.sklearn</span></code>.SklearnExtension", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.flows</span></code>.OpenMLFlow", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.flows</span></code>.assert_flows_equal", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.flows</span></code>.delete_flow", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.flows</span></code>.flow_exists", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.flows</span></code>.get_flow", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.flows</span></code>.list_flows", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.runs</span></code>.OpenMLRun", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.runs</span></code>.delete_run", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.runs</span></code>.get_run", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.runs</span></code>.get_run_trace", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.runs</span></code>.get_runs", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.runs</span></code>.initialize_model_from_run", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.runs</span></code>.initialize_model_from_trace", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.runs</span></code>.list_runs", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.runs</span></code>.run_exists", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.runs</span></code>.run_flow_on_task", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.runs</span></code>.run_model_on_task", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.setups</span></code>.OpenMLParameter", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.setups</span></code>.OpenMLSetup", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.setups</span></code>.get_setup", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.setups</span></code>.initialize_model", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.setups</span></code>.list_setups", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.setups</span></code>.setup_exists", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.study</span></code>.OpenMLBenchmarkSuite", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.study</span></code>.OpenMLStudy", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.study</span></code>.attach_to_study", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.study</span></code>.attach_to_suite", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.study</span></code>.create_benchmark_suite", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.study</span></code>.create_study", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.study</span></code>.delete_study", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.study</span></code>.delete_suite", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.study</span></code>.detach_from_study", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.study</span></code>.detach_from_suite", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.study</span></code>.get_study", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.study</span></code>.get_suite", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.study</span></code>.list_studies", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.study</span></code>.list_suites", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.study</span></code>.update_study_status", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.study</span></code>.update_suite_status", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.tasks</span></code>.OpenMLClassificationTask", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.tasks</span></code>.OpenMLClusteringTask", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.tasks</span></code>.OpenMLLearningCurveTask", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.tasks</span></code>.OpenMLRegressionTask", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.tasks</span></code>.OpenMLSplit", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.tasks</span></code>.OpenMLSupervisedTask", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.tasks</span></code>.OpenMLTask", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.tasks</span></code>.TaskType", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.tasks</span></code>.create_task", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.tasks</span></code>.delete_task", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.tasks</span></code>.get_task", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.tasks</span></code>.get_tasks", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">openml.tasks</span></code>.list_tasks", "OpenML", "Changelog", "User Guide"], "terms": {"openml": [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 30, 107], "packag": [1, 10, 13, 15, 18, 31, 49, 106, 107, 108], "i": [1, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 31, 33, 36, 38, 39, 40, 41, 42, 47, 48, 49, 53, 54, 57, 59, 60, 62, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 82, 87, 89, 90, 93, 94, 95, 96, 98, 99, 101, 103, 105, 106, 107, 108], "highli": [1, 7, 23, 106], "appreci": [1, 106], "all": [1, 5, 7, 8, 9, 10, 11, 13, 14, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 33, 38, 40, 42, 44, 45, 47, 48, 49, 50, 51, 53, 54, 55, 59, 64, 67, 69, 70, 75, 76, 82, 87, 88, 89, 90, 105, 106, 107, 108], "form": [1, 18], "In": [1, 5, 6, 7, 9, 10, 11, 12, 13, 15, 18, 20, 23, 24, 25, 26, 27, 38, 39, 53, 108], "particular": 1, "few": [1, 13, 20, 107, 108], "wai": [1, 3, 8, 10, 14, 23, 26, 38, 39, 103, 107, 108], "python": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 49, 53, 54, 60, 107], "ar": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 26, 27, 31, 33, 35, 37, 38, 39, 40, 41, 42, 43, 46, 49, 52, 53, 54, 55, 56, 58, 59, 60, 69, 70, 77, 78, 81, 82, 89, 90, 101, 105, 107, 108], "A": [1, 5, 6, 7, 9, 11, 13, 15, 18, 22, 23, 24, 25, 26, 27, 33, 35, 36, 40, 41, 42, 49, 53, 54, 57, 59, 69, 70, 81, 82, 104, 107, 108], "direct": [1, 107], "mean": [1, 10, 13, 17, 21, 25, 76], "improv": [1, 106, 107], "code": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 54, 107], "document": [1, 3, 18, 24, 31, 44, 106, 107, 108], "exampl": [1, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 31, 33, 67, 87, 107, 108], "To": [1, 11, 13, 14, 15, 20, 21, 23, 27, 31, 54, 108], "get": [1, 11, 15, 23, 24, 31, 50, 51, 62, 63, 64, 69, 70, 76, 93, 94, 95, 96, 98, 108], "start": [1, 9, 12, 13, 22, 23, 26, 31, 33, 36, 38, 42, 47, 48, 59, 67, 89, 90, 105], "see": [1, 5, 8, 11, 12, 13, 17, 23, 26, 33, 44, 49, 57, 93, 94, 95, 96, 98, 106, 108], "thi": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 36, 37, 38, 39, 40, 41, 45, 49, 53, 54, 60, 62, 69, 70, 71, 77, 78, 81, 82, 87, 93, 94, 95, 96, 98, 99, 104, 107, 108], "file": [1, 3, 4, 8, 9, 11, 19, 26, 29, 33, 36, 40, 41, 60, 66, 67, 107, 108], "detail": [1, 10, 12], "how": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 101, 107, 108], "set": [1, 3, 5, 7, 8, 10, 11, 13, 17, 18, 21, 23, 24, 26, 27, 31, 34, 40, 47, 48, 49, 53, 55, 60, 65, 66, 68, 69, 70, 71, 72, 74, 79, 80, 85, 86, 94, 106, 107], "up": [1, 3, 8, 10, 13, 31, 87, 106, 107], "your": [1, 3, 8, 9, 10, 15, 23, 33, 54, 60, 77, 78, 93, 94, 95, 96, 98, 99, 106, 108], "environ": [1, 6, 15, 107], "develop": [1, 31, 54, 106, 107, 108], "an": [1, 3, 5, 7, 9, 10, 12, 14, 17, 20, 21, 22, 23, 26, 31, 33, 35, 36, 38, 40, 43, 46, 49, 50, 51, 52, 53, 54, 60, 66, 67, 69, 70, 73, 77, 78, 81, 82, 87, 88, 100, 106, 107, 108], "extens": [1, 10, 13, 14, 15, 18, 22, 54, 106, 107, 108], "allow": [1, 3, 10, 11, 12, 13, 14, 18, 24, 25, 31, 33, 38, 53, 54, 106, 107, 108], "interfac": [1, 15, 21, 49, 107, 108], "machin": [1, 3, 7, 9, 10, 13, 20, 21, 24, 25, 26, 49, 54, 69, 106, 107], "learn": [1, 3, 7, 9, 10, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 49, 53, 54, 69, 70, 95, 106, 107], "scikit": [1, 3, 9, 15, 16, 18, 19, 26, 30, 31, 53, 69, 70, 106, 107, 108], "kera": [1, 31], "These": [1, 7, 8, 12, 24, 26, 28, 30], "host": 1, "separ": [1, 8, 9, 12, 23, 27, 33, 36, 38, 48, 105, 108], "repositori": [1, 31, 33], "mai": [1, 3, 6, 9, 11, 14, 15, 18, 20, 21, 23, 40, 41, 69, 70], "have": [1, 3, 7, 9, 10, 12, 14, 15, 18, 22, 23, 25, 26, 31, 33, 36, 38, 39, 53, 67, 69, 70, 76, 102, 105, 107], "own": [1, 11, 13, 31, 106], "guidelin": [1, 107], "For": [1, 3, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 26, 31, 33, 36, 38, 53, 71, 106, 108], "more": [1, 11, 13, 20, 21, 23, 24, 25, 26, 35, 81, 101, 106, 107, 108], "inform": [1, 3, 9, 10, 12, 13, 14, 20, 21, 23, 24, 26, 27, 31, 36, 40, 42, 45, 49, 53, 54, 57, 59, 60, 69, 77, 78, 87, 88, 89, 90, 101, 105, 107, 108], "below": [1, 3, 9, 11, 12, 13, 15, 23, 108], "bug": [1, 107], "report": [1, 13], "If": [1, 3, 13, 14, 21, 23, 27, 31, 33, 36, 38, 40, 41, 42, 47, 48, 49, 53, 54, 55, 59, 60, 62, 66, 67, 69, 70, 71, 75, 89, 90, 105, 106, 108], "someth": [1, 108], "doesn": [1, 23], "t": [1, 3, 6, 7, 10, 12, 15, 23, 25, 54, 68, 107, 108], "work": [1, 3, 5, 6, 9, 11, 14, 18, 20, 21, 23, 24, 25, 26, 31, 107], "you": [1, 3, 8, 9, 10, 11, 15, 18, 21, 23, 24, 31, 37, 38, 56, 61, 102, 106, 107, 108], "cumbersom": 1, "pleas": [1, 3, 5, 6, 11, 15, 21, 24, 26, 31, 44, 106, 108], "open": [1, 3, 23, 33, 54, 60, 77, 78, 93, 94, 95, 96, 98, 99], "new": [1, 10, 11, 23, 39, 79, 80, 85, 86, 106, 107], "issu": [1, 24, 107], "let": [1, 11, 12, 18, 23, 26], "u": [1, 7, 12, 20, 21, 25], "know": [1, 108], "about": [1, 20, 21, 23, 24, 31, 45, 108], "problem": [1, 9, 11, 13, 25, 33], "section": [1, 10, 27, 106, 107, 108], "cite": [1, 5, 9, 11, 21, 33, 36, 38], "us": [1, 3, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 36, 38, 39, 40, 49, 52, 53, 54, 60, 65, 66, 69, 70, 71, 74, 87, 99, 101, 103, 105, 106, 107, 108], "scientif": [1, 106], "public": [1, 28, 30, 31, 106], "visit": 1, "one": [1, 5, 8, 11, 15, 20, 21, 22, 23, 24, 26, 27, 35, 38, 108], "our": [1, 3, 10, 11, 13, 14, 15, 18, 21, 26, 106, 108], "hackathon": 1, "anoth": [1, 12, 33, 42, 78, 82], "project": 1, "main": [1, 3, 6, 7, 9, 10, 11, 14, 15, 18, 20, 21, 23, 31, 76, 78, 82, 107], "usag": [2, 9, 11, 13, 14, 16, 107], "connector": [2, 16, 30, 106, 107, 108], "benchmark": [2, 3, 4, 10, 12, 15, 16, 19, 22, 23, 25, 26, 30, 31, 78, 80, 81, 82, 88, 107, 108], "suit": [2, 4, 16, 19, 20, 26, 30, 77, 78, 80, 81, 82, 86, 87, 88, 90, 107, 108], "flow": [2, 3, 4, 13, 16, 17, 19, 20, 25, 26, 27, 30, 31, 33, 45, 47, 48, 49, 50, 51, 52, 53, 60, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 82, 93, 94, 95, 96, 98, 99, 107, 108], "run": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 33, 45, 47, 48, 52, 54, 56, 77, 78, 79, 82, 85, 87, 102, 106, 107], "introduct": [2, 4, 8, 30, 108], "tutori": [2, 4, 5, 6, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 69, 70, 108], "setup": [2, 4, 6, 7, 8, 12, 13, 15, 16, 17, 19, 26, 30, 31, 45, 47, 48, 60, 67, 68, 69, 70, 78, 82, 108], "dataset": [2, 3, 4, 6, 7, 8, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 45, 59, 60, 69, 70, 77, 78, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 103, 104, 105, 106, 107], "go": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 108], "end": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 53], "download": [3, 6, 8, 9, 10, 12, 13, 14, 15, 17, 22, 24, 25, 26, 27, 30, 31, 33, 40, 41, 49, 53, 54, 58, 62, 73, 76, 93, 94, 95, 96, 98, 99, 103, 104, 106, 107, 108], "full": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 53, 59, 107], "follow": [3, 9, 10, 12, 13, 14, 15, 23, 26, 27, 31, 38, 42, 49, 53, 59, 69, 70, 77, 78, 89, 90, 105, 106, 108], "onlin": [3, 21, 24, 106, 108], "collabor": [3, 106], "platform": [3, 26, 106], "which": [3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27, 33, 36, 38, 40, 42, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 67, 70, 71, 77, 78, 82, 87, 89, 90, 102, 107, 108], "find": [3, 8, 10, 11, 13, 17, 23, 106, 107, 108], "share": [3, 7, 15, 21, 39, 54, 106, 107, 108], "interest": [3, 17, 18, 26, 31], "well": [3, 9, 10, 13, 55, 60, 107, 108], "defin": [3, 13, 14, 22, 24, 26, 27, 31, 33, 49, 53, 69, 70, 106, 107, 108], "research": [3, 7, 31, 108], "model": [3, 9, 10, 14, 16, 18, 19, 20, 22, 23, 25, 30, 31, 33, 36, 38, 49, 51, 53, 54, 58, 60, 65, 66, 69, 70, 74, 106, 107, 108], "goal": [3, 31], "task": [3, 5, 7, 9, 10, 11, 14, 16, 17, 19, 20, 21, 24, 25, 26, 30, 31, 33, 37, 38, 39, 45, 47, 48, 60, 67, 68, 69, 70, 77, 78, 80, 81, 82, 86, 87, 106, 107], "explor": [3, 11, 108], "larg": [3, 7, 21, 25, 40, 41, 42, 47, 59, 67, 107, 108], "amount": [3, 42, 47, 59, 67], "algorithm": [3, 7, 12, 14, 15, 25, 26, 33, 54], "api": [3, 5, 6, 9, 10, 11, 14, 15, 18, 20, 21, 23, 39, 43, 44, 46, 54, 87, 106, 107, 108], "java": [3, 21], "r": [3, 5, 6, 10, 11, 13, 15, 21], "log": [3, 13, 16, 19, 25, 26, 30, 107], "reproduc": [3, 5, 24, 25, 26, 49, 53, 54, 107], "experi": [3, 7, 12, 22, 25, 26, 27, 106, 108], "result": [3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 20, 21, 23, 26, 31, 33, 42, 47, 49, 53, 54, 59, 60, 67, 69, 70, 82, 89, 90, 106, 107], "seamlessli": 3, "other": [3, 10, 11, 12, 20, 21, 23, 26, 31, 33, 36, 54, 101, 105, 107, 108], "librari": [3, 13, 18, 21, 22, 23, 26, 49, 53, 54, 107, 108], "scale": [3, 5, 10, 11, 12, 13, 17, 21, 25, 26, 107], "compar": [3, 5, 13, 15, 25, 55, 107, 108], "state": [3, 11, 15, 23, 53], "art": 3, "done": [3, 11, 14, 17, 20, 21, 26, 27, 37, 49, 53, 107], "via": [3, 7, 9, 11, 13, 15, 106, 107], "pip": [3, 26, 106, 107], "further": [3, 11, 13, 14, 15, 23, 108], "check": [3, 14, 21, 24, 26, 31, 33, 35, 40, 49, 50, 51, 53, 54, 55, 68, 76, 107], "out": [3, 21, 23, 25, 26, 27, 107, 108], "guid": [3, 106], "The": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 58, 59, 60, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 103, 105, 106, 107, 108], "server": [3, 6, 9, 10, 11, 14, 15, 17, 18, 20, 21, 23, 31, 33, 35, 37, 40, 49, 53, 54, 55, 56, 60, 61, 62, 64, 68, 69, 70, 76, 77, 78, 81, 82, 83, 84, 87, 88, 93, 94, 95, 96, 98, 99, 102, 107, 108], "can": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 49, 50, 51, 53, 54, 56, 60, 61, 77, 78, 81, 82, 101, 102, 103, 106, 107, 108], "onli": [3, 7, 9, 11, 12, 13, 14, 15, 18, 21, 22, 23, 24, 26, 31, 33, 37, 38, 39, 40, 41, 48, 49, 53, 56, 61, 70, 77, 78, 89, 90, 101, 102, 107, 108], "access": [3, 7, 11, 13, 15, 21, 23, 107, 108], "user": [3, 8, 9, 10, 11, 13, 18, 31, 33, 36, 38, 39, 45, 54, 60, 77, 78, 89, 90, 106, 107], "who": [3, 9, 33, 36, 38, 60], "sign": [3, 106], "don": [3, 10, 25, 107, 108], "account": [3, 23, 27, 69, 106], "yet": [3, 7, 13, 15, 18, 26, 68, 69, 70], "now": [3, 8, 10, 12, 13, 15, 22, 23, 25, 26, 27, 107], "receiv": [3, 77, 78], "kei": [3, 11, 13, 18, 21, 36, 42, 54, 55, 106, 107], "upload": [3, 6, 7, 10, 11, 12, 14, 16, 17, 18, 19, 23, 27, 30, 31, 33, 36, 38, 43, 45, 47, 48, 49, 53, 54, 55, 56, 59, 60, 61, 67, 69, 70, 77, 78, 81, 82, 89, 90, 93, 94, 95, 96, 98, 99, 101, 107], "creat": [3, 12, 13, 14, 15, 16, 17, 19, 20, 21, 30, 31, 33, 36, 38, 39, 40, 41, 49, 53, 54, 81, 82, 89, 90, 101, 102, 106, 107, 108], "free": [3, 54], "http": [3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 24, 25, 26, 27, 44, 57, 69, 70, 87, 108], "www": [3, 5, 7, 12, 13, 20, 21, 23, 57, 108], "org": [3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 26, 44, 57, 69, 70, 87, 106, 108], "after": [3, 11, 18, 21, 24, 107], "page": [3, 6, 9, 10, 15, 23, 33, 54, 60, 77, 78, 93, 94, 95, 96, 98, 99, 106, 107], "avatar": 3, "top": [3, 31, 107], "right": [3, 10, 26], "There": [3, 53, 107], "two": [3, 7, 14, 23, 25, 26, 27, 31, 39, 50, 51, 55], "perman": 3, "cli": 3, "tool": [3, 9, 107], "configur": [3, 8, 11, 13, 15, 18, 26, 27, 72, 73, 76, 107], "apikei": [3, 11, 108], "mykei": 3, "replac": [3, 21, 107], "plain": 3, "text": [3, 12, 17, 27, 54, 60, 107], "config": [3, 6, 8, 9, 10, 11, 14, 15, 18, 20, 21, 23, 27, 31, 107, 108], "line": [3, 8, 11, 12, 15, 26, 31, 107, 108], "must": [3, 9, 21, 23, 31, 38, 49, 53, 54], "directori": [3, 8, 15, 31, 60, 107, 108], "exist": [3, 5, 8, 15, 21, 22, 23, 33, 35, 36, 38, 40, 54, 57, 69, 70, 76, 107, 108], "prior": [3, 27], "import": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 31, 106, 107, 108], "modul": [3, 8, 13, 31, 101], "altern": [3, 15, 108], "yourkei": 3, "durat": [3, 11], "process": [3, 8, 15, 24, 26, 31, 69, 70], "licens": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 33, 36, 107], "bsd": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 107], "3": [3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27], "claus": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 107], "from": [3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 26, 31, 33, 37, 40, 42, 47, 48, 49, 53, 54, 56, 59, 60, 61, 62, 64, 67, 70, 71, 73, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 99, 101, 102, 105, 106, 107, 108], "sklearn": [3, 6, 9, 10, 12, 13, 14, 15, 17, 18, 20, 24, 26, 27, 31, 49, 60, 70, 71, 106, 107], "neighbor": [3, 6, 15], "data": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 53, 60, 77, 78, 82, 91, 92, 93, 94, 95, 96, 98, 99, 103, 104, 105, 107, 108], "reason": [3, 6, 7, 9, 10, 11, 14, 15, 18, 20, 21, 23, 31], "connect": [3, 6, 9, 10, 11, 14, 15, 18, 20, 21, 23, 49, 53, 69, 70, 107, 108], "test": [3, 6, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 31, 107, 108], "prevent": [3, 6, 9, 10, 11, 14, 15, 18, 20, 21, 23, 107], "crowd": [3, 6, 9, 10, 11, 14, 15, 18, 20, 21, 23], "so": [3, 5, 6, 9, 10, 11, 14, 15, 17, 18, 20, 21, 23, 40, 49, 53, 54, 87, 107, 108], "affect": [3, 6, 9, 10, 11, 14, 15, 18, 20, 21, 23], "behaviour": [3, 6, 9, 10, 11, 13, 14, 15, 18, 20, 21, 23, 69, 70], "perform": [3, 6, 9, 10, 11, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 31, 40, 43, 46, 53, 69, 70, 107, 108], "start_using_configuration_for_exampl": [3, 6, 9, 10, 11, 14, 15, 18, 20, 21, 23, 107], "home": [3, 6, 9, 11, 14, 15, 18, 20, 21, 23, 108], "runner": [3, 6, 9, 11, 14, 15, 18, 20, 21, 23], "py": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31], "184": [3, 6, 9, 11, 13, 14, 15, 18, 20, 21, 23, 24, 107], "userwarn": [3, 6, 9, 11, 14, 15, 18, 20, 21, 23], "switch": [3, 6, 9, 11, 14, 15, 18, 20, 21, 23, 107], "v1": [3, 5, 6, 9, 11, 14, 15, 18, 20, 21, 23], "xml": [3, 6, 9, 11, 14, 15, 18, 20, 21, 23, 41, 62, 107], "live": [3, 6, 9, 11, 14, 15, 18, 20, 21, 23], "reduc": [3, 6, 9, 11, 14, 15, 18, 20, 21, 23, 53, 107], "warn": [3, 6, 8, 9, 11, 13, 14, 15, 18, 20, 21, 23, 24, 107], "when": [3, 8, 9, 10, 11, 13, 14, 15, 23, 25, 26, 33, 36, 38, 39, 40, 53, 54, 55, 103, 105, 107, 108], "instead": [3, 11, 14, 21, 23, 40, 49, 53, 69, 70, 107, 108], "make": [3, 10, 23, 25, 26, 31, 40, 41, 107, 108], "sure": [3, 10], "uncom": 3, "never": 3, "thei": [3, 7, 10, 15, 18, 22, 23, 50, 51, 107, 108], "retriev": [3, 12, 13, 14, 16, 19, 20, 23, 27, 30, 40, 41, 43, 46, 57, 87, 88, 107], "them": [3, 8, 14, 15, 17, 18, 21, 24, 27, 87, 102, 107, 108], "without": [3, 9, 10, 11, 13, 15, 31, 33, 107], "call": [3, 9, 11, 13, 15, 17, 31, 39, 43, 46, 53, 54, 81, 82, 105, 107, 108], "later": [3, 11, 18, 40, 41, 60, 69, 70, 81, 82], "As": [3, 7, 10, 20, 21, 23, 31, 60], "either": [3, 8, 11, 13, 33, 44, 54, 55, 91, 92, 103], "specifi": [3, 8, 10, 13, 26, 27, 33, 36, 38, 40, 41, 42, 49, 53, 54, 60, 87, 108], "through": [3, 8, 10, 11, 13, 21, 38, 39, 40, 41, 107, 108], "add": [3, 8, 10, 15, 23, 25, 31, 60, 107], "cachedir": [3, 108], "mydir": 3, "path": [3, 33, 54, 60, 107], "By": [3, 8, 15, 18, 42, 89, 90], "default": [3, 8, 10, 11, 13, 15, 18, 20, 21, 23, 24, 33, 35, 36, 38, 40, 41, 42, 47, 48, 49, 50, 51, 53, 54, 58, 59, 60, 67, 69, 70, 71, 75, 77, 78, 89, 90, 93, 94, 95, 96, 98, 99, 103, 104, 105, 107, 108], "yourdir": 3, "o": [3, 11], "cache_directori": 3, "expandus": 3, "eeg": [3, 11, 15, 23], "ey": [3, 11, 15, 23], "get_task": [3, 6, 7, 10, 12, 13, 15, 18, 20, 22, 23, 24, 106, 107], "403": [3, 15], "get_dataset": [3, 5, 6, 8, 10, 11, 15, 24, 93, 94, 95, 96, 98, 99, 107], "dataset_id": [3, 10, 15, 23, 24, 33, 35, 37, 40, 41, 60, 101, 107], "clf": [3, 6, 12, 13, 14, 15, 17, 20, 27, 106], "kneighborsclassifi": [3, 6, 15], "n_neighbor": [3, 6, 15], "5": [3, 5, 6, 7, 9, 10, 11, 12, 15, 17, 18, 20, 21, 22, 23, 26, 27, 107, 108], "run_model_on_task": [3, 6, 10, 13, 15, 18, 20, 22, 106, 107], "avoid_duplicate_run": [3, 13, 15, 18, 69, 70, 108], "fals": [3, 5, 9, 11, 12, 13, 14, 15, 18, 21, 27, 33, 37, 40, 41, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 61, 62, 67, 69, 70, 76, 83, 84, 102, 107], "publish": [3, 9, 10, 14, 15, 18, 20, 21, 23, 24, 54, 69, 81, 82, 106, 107], "option": [3, 11, 23, 24, 27, 31, 33, 36, 38, 40, 41, 42, 47, 48, 49, 50, 51, 53, 54, 55, 59, 60, 67, 69, 70, 75, 77, 78, 81, 82, 87, 89, 90, 93, 94, 95, 96, 98, 101, 103, 104, 105, 106, 107], "requir": [3, 7, 10, 11, 12, 13, 14, 15, 18, 20, 23, 25, 26, 31, 34, 49, 53, 54, 58, 60, 69, 70, 87, 106, 107, 108], "myrun": [3, 6, 15], "print": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 26, 27, 106, 107], "f": [3, 5, 6, 9, 10, 11, 15, 23, 106], "knn": [3, 15], "name": [3, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 20, 21, 23, 26, 27, 31, 32, 33, 36, 38, 40, 41, 42, 45, 49, 53, 54, 55, 57, 59, 60, 71, 77, 78, 81, 82, 89, 90, 94, 97, 98, 101, 105, 107], "openml_url": [3, 6, 9, 15, 33, 54, 60, 77, 78, 93, 94, 95, 96, 98, 99, 106], "33445": 3, "stop_using_configuration_for_exampl": [3, 6, 9, 10, 11, 14, 15, 18, 20, 21, 23], "total": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "time": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 33, 45, 60, 107, 108], "script": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 31, 108], "0": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 108], "minut": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27], "14": [3, 4, 7, 9, 11, 12, 20, 21, 23, 24, 26, 27], "444": [3, 4], "second": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27], "sourc": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 107], "introduction_tutori": [3, 4], "jupyt": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30], "notebook": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 107], "ipynb": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 107], "galleri": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 106, 107], "gener": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 33, 53, 54, 60, 70, 71, 107], "sphinx": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 107], "01": [4, 9, 19, 20, 21, 29], "06": [4, 19, 20, 21], "621": 4, "execut": [4, 10, 13, 15, 19, 21, 27, 29, 60], "examples_20_bas": 4, "simple_suites_tutori": [4, 7], "00": [4, 19, 21, 29], "28": [4, 7, 11, 12, 19, 20, 21, 24, 26], "489": [4, 7], "mb": [4, 11, 19, 29, 107], "simple_datasets_tutori": [4, 5], "15": [4, 5, 7, 11, 12, 13, 20, 21, 23, 26, 27], "761": [4, 5, 13, 24], "simple_flows_and_runs_tutori": [4, 6], "07": [4, 19], "927": [4, 6], "basic": [5, 23, 25, 107], "we": [5, 6, 7, 9, 10, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27, 31, 87, 106, 108], "recommend": 5, "easili": [5, 10, 18, 21, 107, 108], "furthermor": [5, 23, 60, 108], "howev": [5, 8, 10, 13, 14, 18, 22, 23, 24, 26, 31], "purpos": [5, 13, 18, 28, 30], "directli": [5, 15, 18, 24, 108], "datasets_df": 5, "list_dataset": [5, 11, 25], "output_format": [5, 11, 12, 17, 20, 21, 23, 24, 25, 26, 27, 42, 47, 48, 59, 67, 75, 89, 90, 105], "datafram": [5, 11, 12, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27, 33, 34, 36, 38, 42, 47, 48, 59, 60, 67, 69, 70, 75, 89, 90, 93, 94, 95, 96, 98, 105, 107], "head": [5, 11, 12, 17, 20, 21, 23, 27], "n": [5, 11, 12, 13, 17, 18, 20, 21, 25, 26, 106], "10": [5, 6, 8, 11, 13, 15, 17, 18, 20, 21, 22, 23, 25, 26, 106], "did": [5, 11, 21, 23, 24, 26, 35, 107], "numberofnumericfeatur": [5, 11, 21, 23], "numberofsymbolicfeatur": [5, 11, 21, 23], "2": [5, 6, 7, 8, 9, 12, 15, 20, 21, 22, 23, 25, 26, 27, 31, 39, 108], "anneal": [5, 11], "6": [5, 7, 11, 12, 13, 15, 17, 18, 20, 21, 22, 23, 24, 26, 107], "33": [5, 11, 15, 19, 20, 23, 24], "kr": [5, 11], "v": [5, 11, 13, 20], "kp": [5, 11], "37": [5, 7, 11, 13, 21, 23, 27], "4": [5, 9, 10, 11, 12, 15, 17, 18, 20, 22, 23, 24, 25, 26, 27, 106], "labor": [5, 11], "8": [5, 6, 10, 11, 12, 13, 15, 17, 18, 20, 21, 22, 25, 26], "9": [5, 9, 10, 11, 12, 13, 17, 22, 23, 26, 27], "arrhythmia": [5, 11], "206": [5, 11], "74": [5, 11], "letter": [5, 9, 11, 33, 36, 38], "16": [5, 6, 7, 10, 11, 13, 15, 17, 18, 20, 21, 24, 26], "1": [5, 6, 7, 8, 9, 12, 15, 20, 21, 22, 23, 24, 25, 26, 27, 33, 36, 38, 39, 69, 70, 93, 98, 99, 106, 108], "7": [5, 6, 11, 12, 13, 17, 18, 20, 21, 22, 23, 26, 96], "audiologi": [5, 11], "70": [5, 9, 11], "liver": [5, 11], "disord": [5, 11], "auto": [5, 9, 10, 11, 15, 24, 33, 36], "11": [5, 7, 11, 17, 20, 21, 22, 23, 26], "lymph": [5, 11], "balanc": [5, 11, 107], "row": [5, 9, 10, 11, 12, 17, 20, 21, 23, 25, 26, 27, 33, 36, 38, 40, 42, 59, 90, 105], "x": [5, 6, 9, 11, 12, 15, 17, 20, 21, 22, 23, 26, 27, 33, 69, 70, 93, 94, 95, 96, 98, 107], "column": [5, 11, 12, 15, 17, 20, 21, 23, 25, 26, 27, 33, 36, 38, 42, 48, 59, 66, 105, 107, 108], "iri": [5, 8, 10, 23], "d": [5, 6, 9, 15, 26], "61": [5, 8, 11, 13], "summari": [5, 11, 12], "target": [5, 6, 7, 9, 11, 12, 13, 15, 22, 23, 24, 33, 36, 38, 94, 98, 101, 108], "featur": [5, 7, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 24, 25, 32, 33, 36, 69, 70, 94, 98, 101, 107], "default_target_attribut": [5, 6, 9, 11, 15, 24, 33, 36, 38, 39, 107], "url": [5, 6, 7, 9, 11, 12, 13, 15, 20, 21, 23, 33, 36, 38, 54, 60, 77, 78, 81, 82, 93, 94, 95, 96, 98, 99, 107], "descript": [5, 7, 9, 10, 11, 12, 13, 15, 20, 21, 23, 33, 36, 38, 40, 44, 54, 55, 60, 73, 77, 78, 81, 82, 97, 103, 104, 105, 107, 108], "500": [5, 7, 11, 12, 21, 23, 26], "class": [5, 7, 9, 10, 11, 12, 13, 15, 17, 18, 21, 23, 25, 26, 31, 32, 33, 36, 45, 49, 53, 54, 60, 71, 72, 77, 78, 93, 94, 95, 96, 97, 98, 99, 100, 107, 108], "arff": [5, 11, 32, 33, 34, 60, 107], "author": [5, 11, 21, 26, 106], "fisher": [5, 11], "uci": [5, 11], "archiv": [5, 11], "ic": [5, 11], "edu": [5, 9, 11], "ml": [5, 10, 11, 12, 21, 54], "1936": 5, "donat": 5, "michael": 5, "marshal": 5, "plant": [5, 11], "databas": [5, 12, 31, 71, 107], "perhap": 5, "best": [5, 12, 13, 15, 23, 31, 66, 108], "known": [5, 54], "found": [5, 6, 7, 8, 9, 13, 23, 24, 40, 60, 101, 107], "pattern": [5, 13], "recognit": 5, "literatur": 5, "": [5, 7, 8, 11, 12, 13, 18, 20, 21, 22, 23, 25, 26, 31, 33, 36, 38, 55, 107], "paper": [5, 7, 9, 24, 25, 26, 27, 33, 36, 38, 106, 107], "classic": 5, "field": [5, 9, 10, 11, 14, 17, 18, 31, 38, 39, 49, 53, 54, 55, 60, 107, 108], "referenc": [5, 107], "frequent": 5, "dai": 5, "duda": 5, "hart": 5, "contain": [5, 7, 9, 10, 12, 13, 15, 17, 20, 21, 23, 24, 25, 27, 33, 34, 36, 42, 45, 49, 53, 54, 59, 60, 66, 77, 78, 82, 89, 90, 105, 107, 108], "50": [5, 11, 13, 18, 21, 23, 27, 108], "instanc": [5, 9, 13, 14, 15, 23, 53, 58, 60, 108], "each": [5, 8, 9, 10, 12, 13, 21, 25, 31, 36, 42, 49, 53, 54, 59, 60, 77, 78, 107, 108], "where": [5, 8, 10, 13, 15, 25, 26, 27, 33, 36, 49, 53, 60, 68, 81, 82, 107, 108], "refer": [5, 21, 26, 33, 36, 38, 40, 45, 99, 105, 106, 107], "type": [5, 6, 7, 9, 11, 12, 13, 15, 20, 21, 23, 33, 36, 49, 52, 54, 60, 77, 78, 81, 87, 93, 94, 95, 96, 98, 99, 101, 105, 107], "One": [5, 18, 22, 27, 31], "arrai": [5, 6, 11, 15, 33, 36, 69, 70, 93, 94, 95, 96, 98, 107], "repres": [5, 7, 9, 12, 13, 25, 33, 35, 36, 38, 41, 42, 59, 60, 77, 78, 89, 90, 105], "correspond": [5, 12, 13, 18, 23, 32, 33, 54, 60, 62, 64, 77, 78, 93, 94, 95, 96, 98, 99, 107], "valu": [5, 9, 10, 12, 15, 17, 18, 20, 23, 25, 26, 27, 31, 32, 33, 36, 38, 45, 49, 53, 54, 55, 60, 71, 100, 107, 108], "y": [5, 6, 9, 10, 11, 12, 15, 17, 22, 25, 26, 27, 33, 69, 70, 93, 94, 95, 96, 98, 107], "categorical_ind": [5, 6, 11, 15, 33], "indic": [5, 9, 15, 25, 33, 36, 54, 107], "categor": [5, 9, 15, 23, 26, 27, 33, 107], "attribute_nam": [5, 6, 9, 11, 15, 33], "get_data": [5, 6, 11, 15, 33, 40, 41, 93, 94, 95, 96, 98, 107], "dataset_format": [5, 6, 11, 15, 22, 33, 69, 70, 93, 94, 95, 96, 98], "panda": [5, 11, 12, 14, 15, 21, 23, 24, 25, 26, 27, 33, 36, 42, 47, 48, 59, 67, 69, 70, 75, 89, 90, 105, 107, 108], "pd": [5, 9, 11, 12, 21, 23, 24, 25, 26, 27, 33], "seaborn": [5, 26], "sn": [5, 26], "matplotlib": [5, 12, 13, 25, 26, 27], "pyplot": [5, 12, 13, 17, 25, 26, 27], "plt": [5, 12, 13, 17, 25, 26, 27], "set_styl": 5, "darkgrid": 5, "def": [5, 12, 13, 25, 27], "hide_current_axi": 5, "arg": 5, "kwd": 5, "gca": 5, "set_vis": 5, "combin": [5, 18, 22, 26, 27, 45, 68, 69, 70, 71, 108], "map": [5, 27, 33, 42, 54, 59], "differ": [5, 9, 11, 12, 13, 14, 23, 25, 26, 54, 101, 107, 108], "color": [5, 12, 25, 107], "accord": [5, 34, 45, 66, 77, 78], "combined_data": 5, "concat": [5, 12, 14, 21, 23], "axi": [5, 9, 10, 12, 17, 25, 26], "iris_plot": 5, "pairplot": 5, "hue": 5, "map_upp": 5, "show": [5, 6, 8, 10, 11, 12, 13, 15, 25, 26, 31, 42, 47, 48, 67, 77, 78, 89, 90, 105, 107], "simpl": [6, 12, 20, 21, 22, 25, 27, 31, 107, 108], "ensembl": [6, 12, 13, 15, 18, 20, 27, 54], "note": [6, 10, 12, 13, 15, 18, 25, 26, 27, 31, 40, 57], "20": [6, 7, 11, 20, 21, 26, 107], "fit": [6, 13, 15, 27, 49, 53, 69, 70, 107, 108], "rerun": [6, 15], "cell": [6, 15], "html": [6, 9, 11, 15, 21, 31, 69, 70], "represent": [6, 15, 27, 40, 49, 53, 103, 107], "trust": [6, 15], "On": [6, 15, 31], "github": [6, 9, 10, 15, 20, 24, 26, 31, 107], "unabl": [6, 11, 15, 39], "render": [6, 15, 24, 107], "try": [6, 11, 12, 15, 23, 26, 107, 108], "load": [6, 9, 15, 24, 26, 40, 107, 108], "nbviewer": [6, 15], "kneighborsclassifierkneighborsclassifi": [6, 15], "119": [6, 10, 13, 14], "randomforestclassifi": [6, 12, 13, 15, 18, 20], "none": [6, 9, 10, 11, 12, 13, 15, 20, 21, 25, 26, 27, 33, 36, 38, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 66, 67, 69, 70, 75, 77, 78, 81, 82, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 105, 107, 108], "metric": [6, 13, 15, 23, 27, 45, 60, 108], "local": [6, 15, 18, 26, 33, 54, 60, 69, 70, 76, 81, 82, 107], "accuraci": [6, 12, 13, 15, 17, 23, 45], "std": [6, 15], "7866": 6, "0000": [6, 15], "runtim": [6, 7, 15, 16, 19, 30, 31, 107], "m": [6, 9, 10, 12, 13, 15, 17], "222": [6, 11, 13], "5433": 6, "id": [6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 107], "90757": 6, "_forest": [6, 15], "string": [6, 15, 32, 33, 41, 49, 53, 54, 57, 60, 77, 78, 81, 82, 107, 108], "python_3": [6, 15], "sklearn_1": [6, 15], "numpy_1": [6, 15], "23": [6, 7, 11, 15, 19, 21, 23, 24, 26, 27, 107], "scipy_1": [6, 15], "wa": [6, 8, 9, 10, 11, 13, 15, 18, 26, 31, 33, 36, 37, 38, 53, 54, 56, 60, 61, 68, 71, 77, 78, 83, 84, 93, 94, 95, 96, 98, 99, 102, 107], "33419": 6, "brief": [7, 21, 59, 77, 78, 81, 82], "showcas": [7, 24, 107], "were": [7, 12, 18, 31, 66, 107, 108], "introduc": [7, 14, 24, 107], "bischl": [7, 21], "et": [7, 28, 29, 30, 106, 107], "al": [7, 28, 29, 30, 106, 107], "2019": [7, 20, 21, 106, 107], "standard": [7, 21, 107], "split": [7, 13, 16, 19, 23, 24, 26, 27, 30, 31, 33, 87, 93, 94, 95, 96, 97, 98, 99, 103, 107, 108], "fulli": 7, "integr": [7, 107], "simplifi": [7, 14, 26, 31], "both": [7, 13, 15, 23, 24, 36, 38, 108], "look": [7, 12, 26], "72": [7, 9, 11, 21], "classif": [7, 12, 13, 21, 23, 93, 98, 108], "carefulli": [7, 21], "select": [7, 9, 11, 12, 13, 20, 21, 27, 53, 66, 71], "usabl": [7, 106], "mani": [7, 15, 18, 22, 31, 69, 70], "also": [7, 8, 9, 10, 12, 13, 14, 20, 21, 22, 23, 24, 26, 31, 33, 40, 41, 42, 54, 82, 89, 105, 107, 108], "commonli": 7, "mid": 7, "2018": [7, 28, 29, 30, 107], "satisfi": [7, 26], "clear": [7, 14, 107], "thorough": 7, "practic": [7, 9, 26, 31], "number": [7, 8, 10, 12, 13, 21, 22, 23, 26, 27, 42, 47, 48, 53, 54, 59, 67, 69, 70, 71, 89, 90, 105, 107, 108], "observ": [7, 13, 21, 27], "between": [7, 9, 18, 21, 25, 26, 54, 108], "100": [7, 11, 12, 13, 20, 23, 26, 27, 53, 107], "000": [7, 8, 10, 13, 19], "focu": [7, 108], "medium": [7, 10], "size": [7, 12, 21, 22, 23, 25, 26, 27, 42, 47, 48, 59, 67, 75, 79, 80, 85, 86, 89, 90, 105, 107], "doe": [7, 9, 10, 13, 15, 24, 25, 31, 35, 54, 69, 70, 107, 108], "exce": [7, 21, 53], "keep": [7, 27, 31, 108], "low": [7, 27], "attribut": [7, 9, 13, 23, 24, 32, 33, 34, 36, 38, 54, 60, 101, 107], "ha": [7, 8, 10, 11, 18, 22, 24, 26, 31, 33, 38, 39, 40, 49, 53, 55, 60, 69, 70, 106, 107], "least": [7, 9, 13, 21, 38, 40, 41], "less": [7, 21, 22, 23, 107], "than": [7, 9, 11, 13, 21, 22, 23, 31, 40, 107, 108], "ratio": [7, 13, 21], "minor": [7, 12, 21], "major": [7, 12, 21], "abov": [7, 8, 12, 13, 15, 107], "05": [7, 11, 12, 20, 21, 27], "elimin": 7, "imbalanc": 7, "special": [7, 9, 23], "treatment": 7, "evalu": [7, 10, 13, 16, 17, 19, 20, 23, 25, 26, 30, 31, 60, 69, 70, 101, 107, 108], "measur": [7, 9, 11, 16, 19, 23, 25, 26, 27, 30, 31, 46, 60, 69, 70, 101, 107], "doc": [7, 21, 24, 44, 107], "ll": [7, 12, 13, 15, 20, 21, 23], "studi": [7, 16, 19, 21, 25, 26, 30, 47, 67, 107], "get_suit": [7, 20, 21, 26], "99": [7, 12, 21], "curat": [7, 21, 23, 108], "statu": [7, 11, 20, 21, 23, 24, 31, 42, 44, 77, 78, 89, 90, 91, 92, 105, 107], "activ": [7, 11, 15, 20, 21, 23, 24, 35, 40, 41, 42, 44, 77, 78, 89, 90, 91, 92, 107], "entiti": [7, 20, 21, 33, 54, 60, 77, 78, 79, 80, 81, 82, 85, 86, 93, 94, 95, 96, 98, 99, 107], "creator": [7, 9, 11, 20, 21, 33, 36, 38, 77, 78, 89, 90], "02": [7, 19, 20, 21, 29], "21": [7, 11, 15, 20, 21, 23, 24, 26, 107], "18": [7, 17, 19, 21, 24, 26, 107], "47": [7, 21], "13": [7, 9, 11, 12, 13, 14, 19, 20, 21, 26, 95], "includ": [7, 8, 13, 23, 26, 27, 33, 42, 59, 105, 107], "itself": [7, 18, 39], "list": [7, 10, 11, 22, 24, 25, 26, 27, 32, 33, 35, 36, 38, 41, 42, 43, 45, 46, 47, 48, 49, 53, 54, 59, 60, 64, 67, 69, 70, 75, 77, 78, 79, 80, 81, 82, 85, 86, 89, 90, 93, 95, 104, 105, 107, 108], "constitut": 7, "12": [7, 11, 17, 20, 21, 22, 23, 24, 26], "22": [7, 11, 20, 21, 24, 26, 107], "29": [7, 12, 13, 15, 19, 21, 23, 26], "31": [7, 11, 12, 20, 21, 23, 24, 27], "32": [7, 10, 19, 20, 21, 24, 29, 106], "43": [7, 21], "45": [7, 20, 21, 26], "49": [7, 8, 11, 20, 21, 23, 27], "53": [7, 21, 23], "219": [7, 13, 21], "2074": [7, 21], "2079": [7, 21, 23], "3021": [7, 21], "3022": [7, 21, 23], "3481": [7, 21], "3549": [7, 21, 23], "3560": [7, 21, 23], "3573": [7, 21], "3902": [7, 21, 27], "3903": [7, 21, 27], "3904": [7, 21], "3913": [7, 21, 23, 27], "3917": [7, 21, 27], "3918": [7, 21, 27], "7592": [7, 21], "9910": [7, 21], "9946": [7, 21, 23, 27], "9952": [7, 21, 27], "9957": [7, 21], "9960": [7, 21], "9964": [7, 21], "9971": [7, 21, 23, 27], "9976": [7, 21, 27], "9977": [7, 21], "9978": [7, 21, 27], "9981": [7, 21], "9985": [7, 21], "10093": [7, 21, 27], "10101": [7, 21, 23, 27], "14952": [7, 21], "14954": [7, 21, 23], "14965": [7, 21], "14969": [7, 21], "14970": [7, 21], "125920": [7, 21], "125922": [7, 21], "146195": [7, 21], "146800": [7, 21], "146817": [7, 21], "146819": [7, 21, 23], "146820": [7, 21], "146821": [7, 21], "146822": [7, 21], "146824": [7, 21], "146825": [7, 21], "167119": [7, 13, 21], "167120": [7, 21], "167121": [7, 21], "167124": [7, 21], "167125": [7, 21], "167140": [7, 12, 21], "167141": [7, 21], "iter": [7, 13, 22, 23, 26, 31, 41, 50, 51, 66, 104, 107], "over": [7, 12, 13, 14, 22, 27, 49, 53], "speed": [7, 13, 107], "first": [7, 10, 11, 12, 13, 14, 18, 21, 22, 23, 24, 42, 47, 48, 59, 67, 69, 70, 89, 90, 105, 107], "three": [7, 25], "task_id": [7, 10, 12, 13, 15, 17, 20, 21, 22, 23, 24, 26, 27, 45, 60, 68, 80, 81, 86, 93, 94, 95, 96, 98, 99, 102, 103, 104, 107], "tt": [7, 12, 13, 23], "tasktyp": [7, 12, 13, 21, 23, 24, 93, 94, 95, 96, 98, 99, 101, 105, 107], "supervised_classif": [7, 12, 13, 23, 24], "estim": [7, 12, 13, 15, 18, 22, 23, 31, 49, 53, 69, 70, 99, 101, 106, 108], "procedur": [7, 10, 12, 13, 22, 23, 31, 66, 101], "crossvalid": [7, 12, 13, 23], "cost": [7, 12, 13, 23, 27], "matrix": [7, 11, 12, 13, 23, 33], "avail": [7, 10, 12, 13, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 43, 46, 69, 70, 107, 108], "26": [7, 11, 15, 20, 24], "strang": [7, 28, 29, 30, 107], "explain": [8, 108], "provid": [8, 9, 10, 12, 13, 22, 23, 24, 31, 33, 35, 36, 38, 49, 53, 69, 107, 108], "messag": [8, 15, 18, 107], "assign": [8, 18, 54, 107], "level": [8, 9, 13, 17, 107], "tabl": [8, 11, 25, 27, 108], "here": [8, 10, 11, 12, 13, 14, 22, 27, 31], "consol": [8, 107], "debug": [8, 107, 108], "info": [8, 9, 11, 77, 78, 81, 82, 108], "save": 8, "cach": [8, 15, 26, 33, 40, 62, 107, 108], "automat": [8, 10, 14, 15, 17, 18, 22, 26, 36, 107, 108], "delet": [8, 37, 56, 61, 83, 84, 102, 107], "need": [8, 9, 10, 11, 14, 15, 17, 20, 21, 24, 25, 26, 31, 33, 53, 87, 106, 108], "most": [8, 10, 13, 18, 26, 31, 53, 60, 107, 108], "2mb": 8, "space": [8, 53, 107], "It": [8, 9, 10, 13, 22, 23, 24, 26, 31, 77, 78, 107, 108], "possibl": [8, 10, 11, 13, 15, 23, 32, 93, 94, 95, 96, 98, 101, 106, 107, 108], "what": [8, 10, 26, 108], "send": 8, "written": [8, 21, 27, 107], "With": [8, 10, 26], "output": [8, 11, 12, 20, 21, 42, 47, 48, 59, 67, 75, 89, 90, 105, 107, 108], "should": [8, 9, 10, 13, 14, 26, 31, 33, 36, 38, 42, 54, 60, 66, 69, 70, 76, 89, 90, 107, 108], "openml_python": 8, "like": [8, 13, 26, 107, 108], "46": [8, 11, 17, 21, 24], "19": [8, 11, 20, 21, 23, 26, 29], "38": [8, 11, 20, 21, 24], "pickl": [8, 33, 40, 60, 107], "alreadi": [8, 10, 11, 13, 14, 23, 49, 53, 62, 68, 69, 70, 76, 107, 108], "date": [8, 9, 15, 31, 32, 33, 36, 38, 54, 55, 77, 78], "depend": [8, 10, 13, 15, 26, 31, 54, 107, 108], "whether": [8, 9, 10, 13, 14, 27, 31, 33, 49, 50, 51, 53, 55, 58, 62, 67, 68, 69, 70, 76, 77, 78, 108], "had": [8, 107], "befor": [8, 15, 18, 26, 27, 31, 107], "programmat": 8, "console_log": 8, "setlevel": 8, "file_log": 8, "previous": [8, 12, 40, 107], "shown": [8, 26], "longer": [8, 9, 31, 87, 107, 108], "desir": [8, 60], "verbos": [8, 26, 108], "file_verbos": 8, "e": [8, 9, 10, 11, 12, 13, 15, 18, 23, 26, 31, 33, 36, 38, 40, 45, 47, 48, 49, 53, 54, 65, 66, 74, 76, 77, 87, 107], "configure_log": [8, 19], "np": [9, 10, 12, 13, 17, 18, 21, 27], "scipi": [9, 11, 15, 33, 53, 107], "coo_matrix": [9, 36], "function": [9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 26, 27, 31, 36, 38, 40, 41, 43, 45, 46, 47, 48, 49, 53, 54, 60, 69, 70, 101, 104, 107, 108], "create_dataset": [9, 107], "cover": [9, 13, 108], "case": [9, 10, 11, 12, 14, 15, 18, 26, 31, 32, 33, 36, 38, 39, 45, 53, 60, 107, 108], "dens": [9, 21], "ordereddict": [9, 10, 54, 60], "diabet": [9, 15], "load_diabet": 9, "feature_nam": 9, "descr": 9, "distinguish": [9, 18, 21, 25, 107], "store": [9, 10, 11, 13, 15, 18, 23, 54, 60, 107, 108], "singl": [9, 21, 22, 23, 26, 27, 48, 107], "meta": [9, 10, 15, 21, 23, 31, 36, 39, 40, 45, 60, 77, 78, 81, 82, 103, 104, 107], "concaten": 9, "reshap": [9, 10], "real": [9, 33], "integ": [9, 27, 35, 41, 53, 60], "citat": [9, 11, 33, 36, 38, 106], "bradlei": 9, "efron": 9, "trevor": 9, "hasti": 9, "iain": 9, "johnston": 9, "robert": 9, "tibshirani": 9, "2004": 9, "angl": 9, "regress": [9, 10, 23, 33, 96, 107, 108], "annal": 9, "statist": 9, "discuss": [9, 14], "407": 9, "499": 9, "paper_url": [9, 11, 33, 36, 38], "web": [9, 33, 54, 60, 77, 78, 93, 94, 95, 96, 98, 99], "stanford": 9, "lar": 9, "leastangle_2002": 9, "pdf": [9, 24, 27, 87], "definit": [9, 13, 26, 69, 70], "xsd": [9, 14, 54, 107], "describ": [9, 10, 18, 21, 33, 34, 36, 38, 49, 53, 54, 108], "expect": [9, 10, 107], "format": [9, 10, 11, 12, 13, 21, 22, 24, 25, 26, 27, 33, 34, 40, 42, 47, 48, 54, 59, 67, 75, 89, 90, 105, 107, 108], "com": [9, 10, 20, 25, 26, 107], "blob": [9, 20, 26], "master": [9, 20, 107], "openml_o": 9, "view": [9, 13, 106], "api_new": 9, "diabetes_dataset": 9, "uniqu": [9, 10, 12, 14, 20, 21, 26, 33, 54, 57, 60, 77, 78, 81, 82, 93, 94, 95, 96, 98, 99], "128": [9, 11, 22, 23], "charact": [9, 53], "z": 9, "_": [9, 10, 11, 21, 26, 27], "textual": 9, "person": [9, 33, 36, 38, 60], "peopl": [9, 10, 33, 36, 38, 108], "contribut": [9, 26, 31, 33, 36, 38, 107], "current": [9, 14, 21, 26, 31, 33, 36, 38, 93, 94, 95, 96, 98, 106], "version": [9, 10, 11, 14, 15, 18, 21, 22, 23, 31, 33, 36, 38, 39, 40, 41, 49, 53, 54, 57, 58, 59, 71, 87, 107, 108], "contributor": [9, 11, 33, 36, 38], "origin": [9, 10, 33, 36, 38, 39], "collect": [9, 10, 12, 27, 33, 36, 38, 77, 78, 79, 80, 81, 82, 85, 86, 87, 108], "given": [9, 12, 24, 25, 26, 31, 33, 35, 36, 38, 47, 48, 49, 50, 51, 53, 54, 58, 60, 63, 67, 75, 77, 78, 87, 93, 94, 95, 96, 98, 99, 101, 103, 105, 107, 108], "collection_d": [9, 11, 33, 36, 38], "09": [9, 15, 21], "2012": 9, "languag": [9, 10, 11, 33, 36, 38, 54], "upper": [9, 33, 36, 38], "rest": [9, 13, 15, 20, 21, 23, 33, 36, 38], "lower": [9, 13, 33, 36, 38], "g": [9, 10, 15, 18, 21, 23, 26, 31, 33, 36, 38, 40, 45, 47, 48, 53, 54, 77, 107], "english": [9, 10, 11, 33, 36, 38], "under": [9, 12, 13, 27], "distribut": [9, 12, 13, 69, 70, 107], "licenc": [9, 33, 36], "multipl": [9, 11, 12, 13, 14, 22, 24, 33, 36, 38, 40, 107], "comma": [9, 33, 36, 38], "present": [9, 14, 15, 20, 26, 31, 33, 36, 38, 50, 51, 60, 68, 69, 70, 76], "row_id_attribut": [9, 11, 33, 36, 38, 39, 107], "exclud": [9, 33, 36, 38], "identifi": [9, 10, 23, 33, 36, 38, 54, 57], "index": [9, 10, 11, 22, 23, 25, 27, 32, 33, 36, 38], "feat1": 9, "feat2": 9, "ignore_attribut": [9, 11, 33, 36, 38, 39, 107], "label": [9, 13, 17, 25, 31, 33, 36], "version_label": [9, 33, 36], "original_data_url": [9, 11, 33, 36, 38], "www4": 9, "stat": [9, 21], "ncsu": 9, "boo": 9, "var": 9, "19351": 9, "weather": 9, "storm": 9, "ci": [9, 107], "fordham": 9, "gweiss": 9, "mine": [9, 25, 26], "sunni": 9, "85": [9, 11, 13], "80": [9, 13], "90": [9, 11, 13], "true": [9, 10, 12, 13, 14, 15, 17, 20, 21, 23, 27, 33, 35, 37, 40, 41, 48, 49, 53, 54, 55, 56, 58, 60, 61, 62, 69, 70, 83, 84, 102, 103, 104, 107, 108], "overcast": 9, "83": [9, 13], "86": [9, 11], "ye": 9, "raini": 9, "96": [9, 12, 15], "68": [9, 15, 23], "65": [9, 11, 23], "64": [9, 11, 20, 21, 22, 23], "95": [9, 12], "69": [9, 11, 23], "75": [9, 21, 107], "81": [9, 11], "71": [9, 21], "91": [9, 22, 23], "outlook": 9, "temperatur": 9, "humid": 9, "windi": 9, "plai": 9, "tini": 9, "repeatedli": 9, "illustr": [9, 13], "method": [9, 14, 21, 23, 26, 31, 40, 41, 60, 81, 82, 107, 108], "entir": [9, 10, 13, 43, 46], "fictiti": 9, "supposedli": 9, "concern": 9, "condit": 9, "suitabl": [9, 31], "some": [9, 10, 11, 13, 15, 18, 21, 24, 26, 31, 33, 36, 40, 41, 42, 89, 105, 107], "unspecifi": 9, "game": 9, "character": 9, "aspect": 9, "four": 9, "outcom": [9, 108], "h": 9, "witten": 9, "frank": [9, 21, 24, 25, 26, 106], "hall": 9, "itpro": 9, "techniqu": 9, "third": [9, 14], "edit": [9, 38, 39, 107], "burlington": 9, "mass": 9, "morgan": 9, "kaufmann": 9, "2011": 9, "weather_dataset": 9, "19352": 9, "might": [9, 14, 15, 18, 26, 31, 40, 41, 60, 108], "happen": [9, 13, 39], "made": [9, 10, 12, 13, 31, 107], "heterogen": 9, "usual": [9, 22, 54], "offer": [9, 13], "advantag": 9, "therefor": [9, 13, 18, 22, 31], "infer": [9, 31, 36], "explicitli": [9, 10, 13, 26, 77, 79, 80, 85, 86], "regard": [9, 21, 108], "pass": [9, 23, 26, 27, 36, 69, 70, 107], "paramet": [9, 10, 11, 12, 13, 20, 21, 23, 25, 26, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107, 108], "df": [9, 12, 17, 34], "col_nam": 9, "enforc": [9, 107], "dtype": [9, 11, 22, 23, 27], "astyp": [9, 13, 17], "categori": [9, 15, 107], "bool": [9, 33, 35, 37, 40, 41, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 67, 69, 70, 83, 84, 102, 103, 104, 107], "core": [9, 10, 11, 13, 69, 70, 77], "frame": [9, 11, 12, 14, 21, 23, 105], "rangeindex": [9, 11], "entri": [9, 11, 12, 13, 49, 53, 106, 107], "non": [9, 11, 12, 13, 20, 25, 27, 38, 107], "null": [9, 11, 17], "count": [9, 11, 12, 21], "int64": [9, 26, 27], "memori": [9, 10, 11], "650": 9, "byte": 9, "while": [9, 12, 14, 33, 103], "kept": 9, "boolean": [9, 27, 33], "numer": [9, 15, 26, 27, 32, 33, 53, 87, 88, 107], "Then": [9, 23], "fix": [9, 13, 107], "19353": 9, "sparse_data": 9, "column_nam": 9, "input1": 9, "input2": 9, "xor_dataset": 9, "xor": 9, "oper": [9, 13, 26, 40, 41, 42, 59, 67, 105], "19354": 9, "from_spmatrix": 9, "float64": [9, 11, 26, 27], "212": 9, "19355": 9, "973": [9, 19, 107], "create_upload_tutori": [9, 19], "conveni": [10, 107], "workflow": 10, "obtain": [10, 13, 15, 16, 19, 20, 21, 22, 24, 26, 27, 30, 31, 49, 53, 107, 108], "scenario": [10, 13, 15, 107], "framework": 10, "those": [10, 11, 15, 24, 108], "still": [10, 13, 26, 40, 41], "step": [10, 12, 14, 15, 18, 25, 27, 39, 53, 106], "automl": [10, 21, 24], "link": [10, 25, 33, 36, 38, 56, 79, 80, 81, 85, 86, 107], "numpi": [10, 11, 12, 13, 15, 17, 18, 21, 27, 33, 53, 69, 70, 107], "openmlclassificationtask": [10, 101], "format_predict": [10, 107], "hyperparamet": [10, 13, 14, 16, 18, 19, 25, 26, 27, 30, 31, 48, 49, 53, 76, 107, 108], "variabl": [10, 15, 21, 23, 27, 98, 107], "openmlflow": [10, 14, 49, 50, 53, 55, 58, 60, 69, 70, 108], "extern": [10, 14, 59, 107], "togeth": [10, 54, 69, 106], "system": [10, 24, 26, 27, 60, 107], "across": [10, 12, 13, 23, 26, 54], "rang": [10, 12, 13, 15, 22, 25, 27, 107], "preprocess": [10, 12, 15, 17, 18, 27, 53], "break": [10, 13], "down": [10, 108], "argument": [10, 13, 31, 38, 69, 70, 87, 101, 107], "sever": [10, 15, 26, 31, 107, 108], "group": 10, "leav": [10, 15, 18, 23], "enough": [10, 22], "determin": [10, 25, 26, 31, 33, 40, 69, 70, 101, 107, 108], "exactli": [10, 31], "tag": [10, 23, 33, 42, 47, 48, 54, 59, 60, 67, 69, 70, 75, 77, 78, 93, 94, 95, 96, 98, 99, 105, 107], "dict": [10, 11, 20, 21, 26, 33, 35, 36, 42, 47, 48, 49, 53, 54, 59, 60, 67, 72, 73, 75, 77, 78, 89, 90, 93, 94, 95, 96, 97, 98, 99, 101, 105], "automlbenchmark_autosklearn": 10, "automlbenchmark": 10, "releas": 10, "v0": 10, "external_vers": [10, 14, 49, 53, 54, 57], "amlb": 10, "study_218": 10, "next": [10, 17, 108], "parameters_meta_info": [10, 54], "even": [10, 26, 62, 107, 108], "though": [10, 26], "order": [10, 12, 14, 31, 47, 48, 107, 108], "flow_hyperparamet": 10, "240": [10, 13, 21], "data_typ": [10, 15, 32, 33, 54, 71], "int": [10, 13, 27, 32, 33, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107], "gigabyt": 10, "build": [10, 11, 15, 31, 33, 36, 38, 54, 72, 101, 107], "random": [10, 18, 20, 21, 27, 31, 53, 107], "forest": [10, 12, 27], "classifi": [10, 15, 25, 31, 106, 107], "could": [10, 15, 17, 21, 23, 24, 107], "construct": [10, 14, 27], "pipelin": [10, 12, 17, 18, 53, 54, 106], "subflow": [10, 54, 76, 107], "part": [10, 13, 14, 17, 60, 94], "9313": 10, "actual": [10, 11, 13, 14, 23, 26, 31, 33, 36, 39, 40, 107, 108], "matter": 10, "demonstr": [10, 13, 15, 21, 25, 27, 28, 30, 107], "autosklearn_flow": 10, "get_flow": [10, 15], "compon": [10, 18, 49, 53, 54, 55], "automl_tool": 10, "initi": [10, 53, 65, 66, 73, 74], "becaus": [10, 13, 18, 21, 24, 33, 54, 105], "do": [10, 12, 13, 15, 23, 24, 27, 31, 35, 69, 70, 107, 108], "object": [10, 11, 13, 15, 22, 23, 25, 26, 31, 32, 33, 36, 41, 47, 49, 53, 54, 60, 63, 71, 72, 73, 75, 76, 77, 78, 81, 82, 87, 88, 93, 94, 95, 96, 97, 98, 99, 101, 107, 108], "extract": [10, 13, 15, 17, 49, 53], "autosklearn_amlb_flow": 10, "autosklearn": 10, "flow_id": [10, 12, 14, 15, 17, 25, 26, 27, 45, 54, 56, 58, 59, 60, 71, 72], "take": [10, 12, 15, 21, 23, 24, 31, 54, 69], "care": [10, 54], "chang": [10, 11, 13, 18, 31, 87, 107], "reflect": 10, "fiction": 10, "oml": [10, 21, 49, 53], "120": [10, 11], "1965": 10, "last": 10, "bit": [10, 25, 26], "predict": [10, 13, 15, 18, 21, 23, 27, 31, 60, 67, 69, 70, 107, 108], "exact": [10, 23, 54, 65, 66, 74], "alwai": [10, 23, 31, 60, 107], "repeat": [10, 13, 22, 45, 66, 69, 108], "strategi": [10, 15, 18, 23, 27], "cross": [10, 13, 22, 23, 106, 108], "valid": [10, 13, 21, 22, 23, 33, 48, 106, 107, 108], "fold": [10, 13, 22, 23, 45, 60, 66, 106], "holdout": [10, 22, 23, 24], "backward": [10, 49, 53], "compat": [10, 31, 49, 53, 54, 107, 108], "p_1": 10, "p_c": 10, "probabl": [10, 12, 31], "sampl": [10, 11, 13, 22, 23, 27, 60], "belong": [10, 26, 49, 53], "element": 10, "class_label": [10, 93, 95, 107], "unfortun": [10, 24], "autom": [10, 14, 24, 26, 107, 108], "littl": 10, "addit": [10, 14, 23, 31, 38, 40, 53, 54, 70, 103, 104, 107], "effort": [10, 25], "place": [10, 26], "ignor": [10, 15, 18, 27, 33, 49, 53, 54, 55, 62, 107], "better": [10, 12, 23, 25, 26, 107], "understand": [10, 13, 31], "n_repeat": [10, 13, 22], "n_fold": [10, 13, 22], "get_split_dimens": [10, 13, 22], "all_test_indic": 10, "get_train_test_split_indic": [10, 22], "150": [10, 13, 15], "rand": 10, "sum": 10, "y_proba": 10, "y_pred": [10, 27, 60], "argmax": 10, "class_map": 10, "zip": [10, 24, 30], "y_true": [10, 60], "get_x_and_i": [10, 22, 93, 95, 96, 98], "util": [10, 12, 13, 14, 17, 21, 23, 107], "organ": 10, "relev": [10, 22, 25, 26, 27, 54, 69, 87, 88, 107], "yp": 10, "proba": 10, "truth": [10, 27, 60, 107], "c": [10, 11, 17, 26], "pb": 10, "append": [10, 13, 14, 15, 20, 21, 23, 24, 26], "final": [10, 13, 14, 22, 23], "openmlrun": [10, 15, 62, 64, 69, 70, 107, 108], "setup_str": [10, 60, 107], "benchmark_command": 10, "python3": [10, 13, 15, 18, 107], "runbenchmark": 10, "aw": 10, "my_run": 10, "parameter_set": [10, 60], "data_cont": [10, 18, 60], "description_text": [10, 60], "run_id": [10, 12, 17, 18, 20, 45, 60, 61, 62, 63, 64, 65, 66, 79, 82, 85], "custom_flow_": [10, 19], "edit_dataset": [11, 39, 107], "fork_dataset": [11, 38, 107], "give": [11, 12, 20, 21, 25, 59, 105, 107, 108], "openml_list": 11, "return": [11, 12, 13, 15, 17, 23, 25, 27, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 107], "nice": [11, 17], "properti": [11, 23, 31, 33, 54, 60, 77, 78, 93, 94, 95, 96, 98, 99, 107], "datalist": 11, "from_dict": [11, 23], "orient": [11, 23], "numberofinst": [11, 21, 23, 25], "numberoffeatur": [11, 21, 23, 25], "numberofclass": [11, 21, 23], "len": [11, 12, 15, 23, 24, 25, 26, 27], "same": [11, 13, 14, 23, 24, 25, 27, 31, 54, 65, 66, 74], "lesser": [11, 13], "openml_df": 11, "5012": 11, "majorityclasss": [11, 21, 23], "maxnominalattdistinctvalu": [11, 21, 23], "minorityclasss": [11, 21, 23], "numberofinstanceswithmissingvalu": [11, 21, 23], "numberofmissingvalu": [11, 21, 23], "684": [11, 107], "39": [11, 20], "898": 11, "22175": 11, "1669": 11, "1527": [11, 15], "3196": 11, "17": [11, 15, 17, 20, 21, 23, 26, 94], "57": [11, 13, 20, 21, 24], "56": 11, "326": [11, 13], "245": [11, 23], "280": 11, "452": 11, "384": 11, "408": [11, 13], "813": [11, 24], "734": [11, 24, 107], "20000": 11, "24": [11, 23, 24, 26, 107], "226": [11, 13, 21], "317": 11, "nan": [11, 12, 21, 23, 27, 107], "345": 11, "67": [11, 23], "205": [11, 13], "59": [11, 13, 23, 107], "148": 11, "288": [11, 13, 24], "625": 11, "10000": [11, 47], "eeg_eye_st": 11, "sort_valu": [11, 12], "queri": [11, 12, 21, 23, 24, 107], "1491": 11, "hundr": 11, "margin": 11, "1600": 11, "1492": [11, 13], "shape": [11, 22, 33, 34, 36], "1493": 11, "textur": 11, "1599": 11, "4552": 11, "bachchoralharmoni": 11, "5665": 11, "102": [11, 13], "41167": 11, "dioni": 11, "416188": 11, "355": [11, 13], "41169": 11, "helena": 11, "65196": 11, "41960": 11, "seattlecrime6": 11, "523590": 11, "144": 11, "41983": 11, "cifar": 11, "60000": 11, "3073": [11, 21], "42078": 11, "beer_review": 11, "1586614": 11, "104": 11, "42087": 11, "42088": 11, "42089": 11, "vancouver_employe": 11, "42123": 11, "article_influ": 11, "3615": 11, "3169": 11, "42223": 11, "autohorse_fix": 11, "201": [11, 19], "186": [11, 13], "42396": 11, "aloi": 11, "108000": 11, "129": [11, 27], "1000": [11, 23, 24, 27, 107], "43723": 11, "toronto": 11, "apart": 11, "rental": 11, "price": 11, "1124": 11, "188": [11, 13], "44282": 11, "meta_album_plk_mini": 11, "3440": 11, "44283": 11, "meta_album_flw_mini": 11, "4080": 11, "44284": 11, "meta_album_spt_mini": 11, "2920": 11, "73": 11, "44285": 11, "meta_album_brd_mini": 11, "12600": 11, "315": 11, "44288": 11, "meta_album_tex_mini": 11, "2560": 11, "44289": 11, "meta_album_crs_mini": 11, "7840": 11, "196": [11, 21, 27], "44292": 11, "meta_album_ins_2_mini": 11, "44298": 11, "meta_album_dog_mini": 11, "4800": 11, "44304": 11, "meta_album_tex_alot_mini": 11, "250": 11, "44306": 11, "meta_album_ins_mini": 11, "4160": 11, "44317": 11, "meta_album_plk_extend": 11, "473273": 11, "44318": 11, "meta_album_flw_extend": 11, "8189": 11, "44319": 11, "meta_album_spt_extend": 11, "10416": 11, "44320": 11, "meta_album_brd_extend": 11, "49054": 11, "44322": 11, "meta_album_tex_extend": 11, "8675": 11, "44323": 11, "meta_album_crs_extend": 11, "16185": 11, "44326": 11, "meta_album_ins_2_extend": 11, "75222": [11, 24], "44331": 11, "meta_album_dog_extend": 11, "20480": 11, "44337": 11, "meta_album_tex_alot_extend": 11, "25000": 11, "44340": 11, "meta_album_ins_extend": 11, "170506": 11, "117": [11, 13], "44533": 11, "dionis_seed_0_nrows_2000_nclasses_10_ncols_100": 11, "2000": 11, "44534": 11, "dionis_seed_1_nrows_2000_nclasses_10_ncols_100": 11, "44535": 11, "dionis_seed_2_nrows_2000_nclasses_10_ncols_100": 11, "44536": 11, "dionis_seed_3_nrows_2000_nclasses_10_ncols_100": 11, "44537": 11, "dionis_seed_4_nrows_2000_nclasses_10_ncols_100": 11, "44728": 11, "helena_seed_0_nrows_2000_nclasses_10_ncols_100": 11, "44729": 11, "helena_seed_1_nrows_2000_nclasses_10_ncols_100": 11, "44730": 11, "helena_seed_2_nrows_2000_nclasses_10_ncols_100": 11, "44731": 11, "helena_seed_3_nrows_2000_nclasses_10_ncols_100": 11, "44732": 11, "helena_seed_4_nrows_2000_nclasses_10_ncols_100": 11, "45049": 11, "md_mix_mini_copi": 11, "28240": 11, "706": 11, "45102": 11, "dailybik": 11, "731": 11, "606": 11, "45103": 11, "base": [11, 12, 13, 15, 20, 21, 22, 23, 25, 27, 31, 47, 48, 49, 53, 54, 60, 65, 66, 74, 101, 103, 107, 108], "1471": [11, 15, 23], "1587924": 11, "oliv": 11, "roesler": 11, "baden": 11, "wuerttemberg": 11, "cooper": 11, "univers": 11, "dhbw": 11, "stuttgart": 11, "germani": 11, "citation_polici": 11, "continu": [11, 15, 26, 107], "emotiv": 11, "neuroheadset": 11, "detect": 11, "camera": 11, "dure": [11, 13, 107], "ad": [11, 13, 14, 23, 31, 53, 54, 77, 81, 82, 107], "manual": [11, 15, 22, 36, 54, 107], "spars": [11, 15, 18, 23, 33, 107], "control": 11, "v2": 11, "v3": 11, "v13": 11, "v14": 11, "4329": 11, "229980": 11, "4009": 11, "4289": 11, "4635": 11, "899902": 11, "4393": 11, "850098": 11, "4324": 11, "620117": 11, "4004": 11, "4293": 11, "4632": 11, "819824": 11, "4384": 11, "100098": 11, "4327": 11, "689941": 11, "4006": 11, "669922": 11, "4295": 11, "379883": 11, "4628": 11, "720215": 11, "4389": 11, "4328": [11, 23], "4011": 11, "790039": 11, "4296": 11, "410156": 11, "310059": 11, "4396": [11, 23], "4326": 11, "149902": 11, "4292": 11, "4398": 11, "459961": 11, "4321": 11, "029785": 11, "4284": 11, "209961": 11, "740234": 11, "4319": 11, "490234": 11, "4001": 11, "030029": 11, "4280": 11, "509766": 11, "4625": 11, "129883": 11, "4378": 11, "4325": 11, "640137": 11, "4278": 11, "4622": 11, "049805": 11, "4380": 11, "4010": 11, "770020": 11, "4276": 11, "4627": 11, "180176": 11, "280029": 11, "919922": 11, "4637": 11, "439941": 11, "330078": 11, "request": [11, 42, 45, 62, 106, 107], "correct": [11, 54, 60, 107], "v4": 11, "v11": 11, "v12": 11, "4148": 11, "4211": 11, "51": 11, "62": [11, 12, 20, 23], "4207": 11, "4279": 11, "82": [11, 13], "4156": 11, "41": [11, 20, 21, 23], "4206": 11, "4282": 11, "79": 11, "4155": 11, "4210": 11, "77": 11, "4287": 11, "4151": 11, "4212": 11, "4288": [11, 23], "14980": [11, 23], "14979": 11, "v5": 11, "v6": 11, "v7": 11, "v8": 11, "v9": 11, "v10": 11, "sometim": [11, 22, 26], "metadata": [11, 40, 41, 107, 108], "normal": [11, 22, 108], "whenev": 11, "ani": [11, 13, 15, 18, 20, 21, 23, 26, 31, 33, 49, 51, 53, 65, 66, 70, 74, 108], "download_data": [11, 40, 41, 103, 104], "visual": [11, 23], "plot": [11, 12, 13, 16, 19, 25, 26, 27, 30, 107], "scatter_matrix": 11, "iloc": [11, 22, 27], "figsiz": 11, "marker": 11, "hist_kwd": 11, "bin": [11, 12], "alpha": [11, 27], "cmap": [11, 17], "plasma": 11, "avoid": [11, 107], "critic": [11, 38, 39], "desc": [11, 12, 47, 48], "consist": [11, 26, 31, 36, 82, 107, 108], "iris": 11, "setosa": 11, "versicolour": 11, "virginica": 11, "petal": 11, "sepal": 11, "length": [11, 53, 60], "150x4": 11, "ndarrai": [11, 33, 36, 93, 94, 95, 96, 98], "data_id": [11, 15, 17, 23, 25, 38, 39, 42, 44, 45, 105], "1937": 11, "taxonom": 11, "edited_dataset": 11, "owner": [11, 37, 38, 39, 54, 77, 78], "cannot": [11, 13, 107], "associ": [11, 13, 38, 57, 60, 71, 77, 78, 81, 82, 93, 94, 95, 96, 98, 99, 102, 105], "fill_in_openml_api_kei": 11, "failur": 11, "except": [11, 23, 26, 31, 40, 50, 51, 53, 107], "openmlserverexcept": [11, 23, 66], "1065": [11, 107], "copi": [11, 18], "19350": 11, "449": [11, 13, 19], "datasets_tutori": [11, 19], "concis": 12, "appli": [12, 13, 17, 23, 25, 26, 108], "effici": [12, 22, 24, 107], "transpar": 12, "reus": 12, "previou": [12, 13], "similar": [12, 13, 23, 31, 108], "shall": [12, 13, 27], "pertain": 12, "specif": [12, 13, 18, 23, 26, 31, 34, 36, 39, 107, 108], "sort": [12, 13, 21, 23, 24, 25, 31, 47, 48, 107], "descend": [12, 47, 48], "cumul": [12, 13], "filter": [12, 23, 26, 27, 42, 47, 48, 59, 67, 75, 89, 90, 105, 107, 108], "small": [12, 22, 107], "list_evalu": [12, 20, 25, 27, 107], "predictive_accuraci": [12, 13, 17, 20, 23, 25, 26, 47, 48], "precis": [12, 45], "eval": [12, 26], "98": 12, "array_data": [12, 17, 20, 45], "714286": 12, "992658": 12, "985294": 12, "904762": 12, "237": [12, 13], "942857": 12, "991215": 12, "413": 12, "980198": 12, "994152": 12, "948718": 12, "997059": 12, "863636": 12, "briefli": 12, "displai": [12, 26, 107], "supervis": [12, 23, 69, 70, 98], "decreas": 12, "ascend": [12, 47, 48], "ndisplai": 12, "setup_id": [12, 17, 18, 20, 45, 60, 68, 72, 73, 74, 76], "9199772": 12, "7130140": 12, "938481": 12, "9199845": 12, "7130139": 12, "623352": 12, "9202086": 12, "7131884": 12, "918393": 12, "9202092": 12, "7131890": 12, "962335": 12, "9202096": 12, "7131894": 12, "961707": 12, "9202099": 12, "7131897": 12, "519146": 12, "9202125": 12, "7131923": 12, "957313": 12, "9202139": 12, "7131937": 12, "9202159": 12, "7131957": 12, "628060": 12, "9202254": 12, "7132052": 12, "610483": 12, "2788": 12, "10279797": 12, "8166877": 12, "968613": 12, "2789": 12, "10279798": 12, "2246": 12, "10232158": 12, "8157180": 12, "967671": 12, "2263": 12, "10232987": 12, "8157961": 12, "2314": 12, "10271558": 12, "8154506": 12, "967043": 12, "analys": [12, 26], "variou": [12, 13, 25, 31, 33, 107], "been": [12, 15, 31, 40, 49, 53, 60, 107], "likelihood": 12, "plot_cdf": 12, "max_val": 12, "max": [12, 17, 21, 27], "patch": 12, "hist": 12, "densiti": 12, "histtyp": 12, "linewidth": 12, "set_xi": 12, "get_xi": 12, "xlim": [12, 17], "min": [12, 17, 24], "titl": [12, 13, 17, 21, 27, 106, 107], "xlabel": [12, 13, 17, 27], "ylabel": [12, 13, 17, 27], "grid": [12, 13, 25, 31, 107], "visibl": [12, 33], "linestyl": [12, 25], "minorticks_on": 12, "axvlin": 12, "grai": 12, "3f": [12, 13], "fontsiz": 12, "almost": 12, "certain": [12, 13, 31], "achiev": 12, "52": 12, "zero": [12, 22], "maximum": [12, 13, 27, 42, 47, 48, 59, 67, 89, 90, 105], "seen": 12, "till": 12, "plot_flow_compar": 12, "top_n": 12, "assum": [12, 26, 53, 60], "flow_valu": 12, "ignore_index": [12, 14, 21, 23], "fig": [12, 17, 26], "ax": [12, 17, 26], "subplot": [12, 17, 25, 26], "boxplot": [12, 26], "set_titl": [12, 17, 25], "set_ylabel": [12, 25, 26], "set_xlabel": [12, 25, 26], "set_xticklabel": [12, 26], "flow_freq": 12, "numeric_onli": 12, "nanmin": 12, "str": [12, 27, 32, 33, 34, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 57, 59, 60, 67, 69, 70, 71, 75, 77, 78, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 105], "nrun": 12, "green": 12, "horizont": 12, "median": [12, 15, 18], "denot": [12, 49, 53], "bottom": 12, "higher": [12, 107], "hand": [12, 25], "higest": 12, "flow_nam": [12, 17, 45, 60, 71], "12736": 12, "simpleimput": [12, 15, 18, 27, 53, 106], "imput": [12, 15, 17, 18, 27, 53, 106], "_base": [12, 15], "histgradientboostingclassifi": 12, "_hist_gradient_boost": 12, "gradient_boost": 12, "8399": 12, "model_select": [12, 13, 53], "_search": 12, "randomizedsearchcv": [12, 13], "hyperimp": [12, 17], "conditionalimput": 12, "hotencod": [12, 17], "onehotencod": [12, 15, 17, 18, 27, 53], "standardscal": [12, 17, 53], "variencethreshold": [12, 17], "feature_select": [12, 17, 53], "variance_threshold": [12, 17, 53], "variancethreshold": [12, 17, 53], "svm": [12, 17, 25, 26, 27, 53, 107], "svc": [12, 17, 26, 53], "8353": [12, 17], "conditionalimputer2": [12, 17], "12127": 12, "16347": 12, "_encod": [12, 15, 18, 53], "17373": 12, "_search_successive_halv": 12, "halvingrandomsearchcv": 12, "8317": 12, "17369": 12, "17374": 12, "17371": 12, "evals_setup": 12, "list_evaluations_setup": [12, 17, 26, 27, 107], "sort_ord": [12, 47, 48], "parameters_in_separate_column": [12, 17, 27, 48], "6767": [12, 27], "6725054": 12, "mlr": [12, 31], "ranger": 12, "_num": 12, "tree": [12, 13, 14, 15, 21, 25, 26, 54, 106], "48": [12, 20], "2083190": 12, "3962979": 12, "42": [12, 27], "2083596": 12, "6162649": 12, "715": [12, 24, 107], "xgboost": [12, 27], "_nthread": 12, "2420531": 12, "2420532": 12, "2420533": 12, "2420534": 12, "2420535": 12, "2420536": 12, "2420537": 12, "2431903": 12, "2432142": 12, "2432377": 12, "598": [12, 19], "fetch_evaluations_tutori": [12, 19], "decid": [13, 42, 47, 48, 59, 67, 75, 89, 90, 105], "factor": 13, "choic": [13, 21, 27, 31], "especi": [13, 31], "comparison": [13, 20, 21], "cpu": 13, "clock": 13, "wallclock": 13, "incur": 13, "potenti": [13, 18, 31], "interpret": 13, "occur": [13, 107], "At": [13, 101], "outermost": 13, "thu": 13, "n_job": [13, 69, 70], "run_flow_on_task": [13, 15, 107, 108], "support": [13, 18, 23, 25, 26, 31, 33, 42, 47, 59, 67, 107], "nest": 13, "train": [13, 22, 23, 24, 27, 31, 49, 53, 108], "monitor": 13, "randomsearchcv": 13, "gridsearchcv": 13, "global": 13, "lock": 13, "joblib": [13, 15, 107], "parallel_backend": 13, "naive_bay": 13, "gaussiannb": 13, "decisiontreeclassifi": [13, 14, 15, 106], "neural_network": 13, "mlpclassifi": 13, "n_sampl": [13, 22, 33, 34, 36], "print_compare_runtim": 13, "val1": 13, "usercpu_time_millis_train": 13, "item": [13, 26, 35, 45], "val2": 13, "wall": 13, "wall_clock_time_millis_train": 13, "record": [13, 25, 27, 31], "per": [13, 22, 23, 26, 45], "n_estim": [13, 15, 27], "run1": 13, "upload_flow": [13, 15, 69, 70], "fold_evalu": [13, 60], "4f": 13, "usercpu_time_millis_test": 13, "usercpu_time_milli": 13, "wall_clock_time_millis_test": 13, "wall_clock_time_milli": 13, "7715": 13, "7731": 13, "7778": 13, "7787": 13, "7773": 13, "7820": 13, "7666": 13, "7753": 13, "7726": 13, "7728": 13, "remain": 13, "relat": [13, 15, 25, 36, 40, 60, 82, 101, 107], "_millis_train": 13, "usercpu_time_": 13, "process_tim": 13, "convert": [13, 14, 15, 23, 107], "millisecond": 13, "similarli": 13, "wall_clock_time_": 13, "_millis_test": 13, "taken": 13, "332": 13, "309": 13, "379": 13, "338": 13, "752": [13, 24, 107], "759": 13, "334": 13, "682": [13, 107], "903": [13, 24], "373": 13, "333": [13, 23], "178": 13, "335": 13, "514": 13, "914": [13, 24], "325": 13, "395": [13, 24], "324": [13, 27], "833": [13, 24], "331": 13, "536": [13, 107], "318": 13, "215": [13, 27], "735": [13, 24], "246": [13, 24], "311": 13, "648": 13, "091": 13, "redefin": [13, 31], "run2": 13, "905": [13, 26, 29], "1076": 13, "187": 13, "710": 13, "227": 13, "267": [13, 23], "89": 13, "666": [13, 107], "238": 13, "985": [13, 107], "221": 13, "073": 13, "664": 13, "224": 13, "552": [13, 18, 19], "806": [13, 24], "494": 13, "760": 13, "195": 13, "84": 13, "469": 13, "232": [13, 23], "156": 13, "974": 13, "231": [13, 27], "984": [13, 107], "235": 13, "391": [13, 24], "run3": 13, "pronounc": 13, "larger": [13, 21], "044": 13, "374": 13, "674": 13, "970": 13, "726": [13, 107], "225": [13, 21], "528": [13, 107], "894": [13, 107], "228": 13, "936": [13, 107], "024": 13, "87": 13, "524": 13, "253": [13, 21, 24], "021": 13, "124": 13, "827": 13, "234": 13, "530": 13, "spawn": 13, "subprocess": 13, "workload": [13, 107], "track": [13, 27], "knowledg": [13, 26], "backend": 13, "loki": 13, "multiprocess": [13, 40], "dask": 13, "thread": [13, 40, 69, 70], "sequenti": [13, 69, 70], "context": 13, "manag": 13, "job": [13, 69, 70, 108], "too": [13, 107], "run3_": 13, "869": [13, 21], "386": 13, "153": 13, "864": 13, "991": [13, 24], "343": 13, "881": [13, 24, 107], "347": 13, "701": 13, "292": 13, "596": [13, 107], "339": 13, "498": 13, "322": 13, "768": 13, "172": 13, "323": 13, "158": 13, "736": [13, 107], "030": [13, 19, 23, 25], "328": 13, "125": 13, "327": 13, "016": 13, "460": 13, "becom": 13, "ambigu": 13, "unknown": [13, 31, 71, 107], "imposs": 13, "captur": 13, "eventu": 13, "utilis": 13, "aris": 13, "left": [13, 23, 60], "optim": [13, 18, 26, 31, 49, 53, 63, 66, 108], "randomforest": 13, "earlier": [13, 26, 107], "refit_time_": 13, "n_iter": 13, "grid_pip": 13, "param_grid": 13, "linspac": 13, "stop": [13, 107], "num": [13, 27], "tolist": 13, "cv": 13, "run4": 13, "5942": 13, "466": 13, "5977": 13, "804": [13, 107], "6629": 13, "829": [13, 107], "6652": 13, "922": 13, "5888": 13, "173": 13, "5903": 13, "912": [13, 24, 107], "6569": 13, "251": [13, 24], "6593": 13, "584": 13, "6566": 13, "382": 13, "6530": 13, "730": 13, "6576": 13, "230": 13, "6693": 13, "506": 13, "6559": 13, "803": [13, 24, 107], "6546": 13, "5841": 13, "168": 13, "5839": 13, "116": 13, "6471": 13, "026": 13, "6470": 13, "456": 13, "6489": 13, "490": 13, "6184": 13, "optimis": 13, "sequenc": 13, "throughout": [13, 108], "trace": [13, 31, 60, 63, 66, 107], "openmlruntrac": [13, 60, 63, 66], "impli": 13, "outer": 13, "search": [13, 18, 23, 27, 31, 49, 53, 66, 107, 108], "inner": [13, 25], "parameter": 13, "sinc": [13, 23, 87], "subsum": 13, "803707122803": 13, "st": 13, "th": 13, "fetch": [13, 16, 19, 30, 33, 62, 64, 107], "_repeat": 13, "_fold": 13, "trace_iter": [13, 49, 53], "score": [13, 17, 27, 45, 60, 107], "parameter_n_estim": 13, "583584": 13, "799": [13, 24], "25": [13, 14, 17, 19, 21], "802": 13, "come": 13, "refit": 13, "meant": 13, "retrain": 13, "extra": 13, "refit_tim": 13, "manner": [13, 23], "extract_refit_tim": 13, "747": 13, "5524": 13, "1438": 13, "1411": 13, "756": 13, "3703": 13, "1439": 13, "5320": 13, "1449": 13, "2798": 13, "1455": 13, "5614": 13, "1440": 13, "5851": 13, "0426": 13, "1444": 13, "6709": 13, "1067": [13, 24, 107], "5538": 13, "along": [13, 15, 103, 104, 107], "applic": [13, 18], "rs_pipe": 13, "param_distribut": 13, "run5": 13, "its": [13, 15, 18, 23, 26, 27, 28, 30, 31, 33, 49, 53, 54, 60, 77, 78, 93, 94, 95, 96, 98, 99, 107, 108], "henc": 13, "agnost": 13, "being": [13, 31, 103, 107], "complet": [13, 23, 26, 107, 108], "notion": 13, "moreov": 13, "against": 13, "extract_trace_data": 13, "els": [13, 15, 24, 25, 26, 27, 33, 54, 60, 77, 78, 93, 94, 95, 96, 98, 99, 103], "i_r": 13, "i_f": 13, "i_i": 13, "get_incumbent_trac": 13, "best_scor": 13, "inc_trac": 13, "enumer": [13, 26, 100], "grid_data": 13, "rs_data": 13, "cumsum": 13, "xscale": 13, "yscale": 13, "legend": [13, 25], "implement": [13, 14, 28, 30, 31, 49, 54, 66, 87], "decis": [13, 15, 21, 25, 54], "implicitli": [13, 18], "dt": [13, 25], "run6": 13, "112": 13, "539": [13, 19, 20], "113": [13, 21, 23], "110": 13, "257": 13, "111": 13, "375": 13, "418": 13, "108": 13, "969": 13, "109": 13, "055": 13, "542": [13, 107], "771": [13, 15, 19], "817": 13, "967": [13, 17, 19], "695": [13, 107], "818": 13, "574": 13, "200": 13, "149": 13, "114": 13, "046": 13, "432": 13, "although": [13, 18, 31], "surpris": 13, "run7": 13, "207": 13, "122": 13, "342": 13, "053": 13, "155": 13, "902": 13, "229": 13, "162": [13, 23], "028": 13, "163": 13, "510": [13, 107], "348": 13, "035": 13, "588": 13, "078": 13, "977": [13, 24, 107], "115": [13, 15, 20], "577": 13, "545": [13, 107], "neural": [13, 24, 25, 27], "network": [13, 25], "independ": [13, 21, 54], "mkl": 13, "openbla": 13, "bli": 13, "mlp": [13, 107], "max_it": 13, "run8": 13, "opt": [13, 15, 18], "hostedtoolcach": [13, 15, 18], "x64": [13, 15, 18], "lib": [13, 15, 18], "site": [13, 15, 18], "_multilayer_perceptron": 13, "686": [13, 107], "convergencewarn": 13, "stochast": 13, "reach": [13, 54], "hasn": 13, "converg": 13, "1400": 13, "642": [13, 107], "1516": 13, "295": 13, "1404": 13, "512": [13, 22], "1549": 13, "608": [13, 107], "1436": 13, "1565": 13, "458": 13, "1452": 13, "594": 13, "1428": 13, "308": 13, "1322": 13, "126": 13, "830": 13, "1378": 13, "838": [13, 107], "1459": 13, "1345": 13, "1496": 13, "1382": 13, "017": 13, "1324": 13, "798": 13, "1465": 13, "383": 13, "1351": 13, "568": 13, "bla": 13, "trustworthi": 13, "veri": [13, 14, 40], "naiv": 13, "bay": 13, "kind": [13, 20, 21, 108], "run9": 13, "60": [13, 23, 24], "467": 13, "566": 13, "63": [13, 23], "047": 13, "441": 13, "521": 13, "58": 13, "749": [13, 20], "074": 13, "194": 13, "582": 13, "66": [13, 23], "789": [13, 107], "913": [13, 24, 27], "019": 13, "359": 13, "summar": 13, "whole": 13, "comput": [13, 14, 23, 27, 43, 107], "respons": 13, "parallelis": 13, "highlight": 13, "wherea": [13, 26], "insid": 13, "difficult": 13, "underli": 13, "cython": 13, "undergo": 13, "ow": 13, "involv": [13, 14], "linear": [13, 20, 25, 27, 107], "algebra": 13, "mention": 13, "crucial": 13, "trigger": [13, 103, 104], "503": [13, 19], "fetch_runtimes_tutori": [13, 19], "analysi": [14, 23, 25], "get_extension_by_model": [14, 15, 52], "model_to_flow": [14, 15, 31, 49, 53], "90855": [14, 15], "piec": 14, "rather": [14, 26], "regist": [14, 50, 51, 52, 107], "handl": [14, 15, 27, 31, 49, 50, 51, 107], "sklearnextens": [14, 31], "otherwis": [14, 17, 37, 56, 57, 60, 61, 66, 76, 83, 84, 102], "updat": [14, 44, 54, 91, 92, 107], "obvious": [14, 22, 26], "helper": [14, 15, 54, 107], "get_flow_id": [14, 107], "schema": 14, "noqa": [14, 26], "e501": 14, "pretti": [14, 107], "obviou": 14, "why": [14, 21], "immedi": [14, 15], "softwar": [14, 21, 54, 107], "necessari": [14, 22, 23, 24, 31, 33, 54, 107, 108], "renam": [14, 15, 18, 107], "drop": [14, 26, 107], "_class": [14, 15], "flow_exist": [14, 107], "286": [14, 21, 23], "futurewarn": [14, 15, 18, 21, 23], "deprec": [14, 21, 23, 31, 107], "remov": [14, 15, 18, 21, 23, 25, 33, 49, 53, 54, 60, 77, 78, 93, 94, 95, 96, 98, 99, 107], "futur": [14, 21, 23, 49, 53], "new_batch": [14, 21, 23], "360": 14, "364": 14, "762": 14, "5070": 14, "17465": 14, "17634": 14, "17652": 14, "19065": 14, "28068": 14, "30075": 14, "30090": 14, "30116": 14, "32949": 14, "33381": 14, "36940": 14, "44237": 14, "84683": 14, "84690": 14, "85007": 14, "90589": 14, "90597": 14, "90611": 14, "91177": 14, "exact_vers": 14, "deactiv": [14, 24, 42, 44, 77, 78, 89, 90, 91, 92, 107], "535": [14, 19, 107], "flow_id_tutori": [14, 19], "compos": [15, 18, 27, 53], "ask": 15, "encod": [15, 21, 27, 31], "transform": [15, 17, 18, 26, 27, 49, 53, 107], "columntransform": [15, 18, 27, 53, 107], "one_hot_encod": 15, "fit_transform": 15, "8435": 15, "0119": 15, "192": 15, "8117": 15, "8619": 15, "far": [15, 108], "sent": [15, 107], "pollut": 15, "33524": 15, "inspect": 15, "2023": 15, "03": [15, 20, 29], "threadpoolctl": 15, "dirti": 15, "credit": [15, 106], "miss": [15, 23, 27, 67, 107], "plug": 15, "complic": [15, 26, 31], "cat": [15, 18, 27], "cont": [15, 18], "pipe": 15, "handle_unknown": [15, 18, 27], "intern": [15, 25, 26, 53, 60, 107], "deal": 15, "categorical_feature_indic": 15, "numeric_feature_indic": 15, "target_nam": [15, 23, 24, 33, 93, 94, 95, 96, 98, 101], "nomin": [15, 32, 33, 53], "868": [15, 18], "sparse_output": [15, 18], "unless": [15, 18], "33525": 15, "33526": 15, "internet": [15, 69, 70], "to_filesystem": [15, 60], "from_filesystem": [15, 60], "1788": [15, 18], "9047": 15, "33528": 15, "91119": 15, "_column_transform": [15, 53], "extratreeclassifi": 15, "brows": 15, "14951": [15, 23, 27], "volcano": 15, "venu": 15, "10103": 15, "walk": 15, "1509": 15, "9945": 15, "150k": 15, "covertyp": 15, "satellit": 15, "218": [15, 21], "500k": 15, "higg": 15, "physic": 15, "23512": 15, "52950": 15, "100k": 15, "easi": [15, 18, 31, 107], "disclaim": 15, "33529": 15, "flows_and_runs_tutori": [15, 19], "extend": [16, 30, 106], "surfac": [16, 19, 30, 107], "custom": [16, 19, 30, 54, 55, 107], "choos": [17, 25], "websit": [17, 23, 24], "join": [17, 25], "conduct": [17, 20, 22, 25, 26], "flag": [17, 35, 49, 53], "incorpor": 17, "would": [17, 18, 22, 53, 106, 107], "paramat": 17, "unpars": 17, "dictionari": [17, 23, 33, 35, 36, 42, 59, 89, 90, 105], "_memori": 17, "9154533": 17, "9154536": 17, "9154539": 17, "9154544": 17, "9154546": 17, "9154558": 17, "9154563": 17, "9154569": 17, "9154572": 17, "9154576": 17, "data_nam": [17, 42, 45, 105], "upload_tim": [17, 45], "uploader_nam": [17, 45, 60], "_categorical_featur": 17, "_dtype": 17, "_handle_unknown": 17, "_n_valu": 17, "_spars": 17, "_threshold": 17, "_copi": 17, "_with_mean": 17, "_with_std": 17, "_c": 17, "_cache_s": 17, "_class_weight": 17, "_coef0": 17, "_decision_function_shap": 17, "_degre": 17, "_gamma": 17, "_kernel": [17, 26], "_max_it": 17, "_probabl": 17, "_random_st": 17, "_shrink": 17, "_tol": 17, "_verbos": 17, "_axi": 17, "_fill_empti": 17, "_missing_valu": 17, "_strategi": 17, "_strategy_nomin": 17, "cast": [17, 26, 54], "gamma": [17, 27], "float": [17, 26, 45, 60], "log10": 17, "hexbin": 17, "reduce_c_funct": 17, "gridsiz": 17, "landscap": 17, "center": 17, "ko": 17, "contour": 17, "cntr": 17, "tricontourf": 17, "rdbu_r": 17, "adjust": 17, "colorbar": 17, "limit": [17, 23], "ylim": 17, "plot_svm_hyperparameters_tutori": [17, 19], "jan": [18, 21, 25, 26, 106], "van": [18, 21, 25, 28, 29, 30, 106], "rijn": [18, 21, 25, 28, 29, 30, 106], "reinstanti": [18, 31, 49, 53, 58, 107], "concept": [18, 77, 78], "within": 18, "ran": [18, 78, 82], "met": [18, 107], "make_pipelin": 18, "functiontransform": 18, "decomposit": 18, "truncatedsvd": 18, "fairli": 18, "complex": [18, 26], "Of": 18, "cours": 18, "want": [18, 21, 24, 26, 108], "cat_imp": 18, "cont_imp": 18, "ct": [18, 27], "model_origin": 18, "good": [18, 31], "tune": 18, "bayesian": 18, "hyperparameters_origin": 18, "estimator__criterion": 18, "gini": 18, "estimator__n_estim": 18, "estimator__max_depth": 18, "estimator__min_samples_leaf": 18, "set_param": 18, "run_origin": 18, "run_download": 18, "get_run": [18, 107], "model_dupl": 18, "initialize_model": 18, "run_dupl": 18, "content": [18, 21, 26, 33], "assert_array_equ": 18, "run_setup_tutori": [18, 19], "40": [19, 21], "examples_30_extend": 19, "tasks_tutori": [19, 23], "suites_tutori": [19, 21], "55": [19, 20, 21], "313": [19, 21], "study_tutori": [19, 20], "task_manual_iteration_tutori": [19, 22], "971": [19, 22, 24], "04": [19, 20, 21, 29, 107], "contrast": [20, 107], "hold": 20, "uuid": [20, 21], "easier": [20, 21, 23], "structur": [20, 21, 31, 53, 54, 73, 93, 94, 95, 96, 98, 107], "list_studi": 20, "alia": [20, 21, 77, 78, 81, 82, 87, 88, 89, 90], "main_entity_typ": [20, 77, 90], "creation_d": [20, 21, 77, 78, 89, 90], "study_1": 20, "in_prepar": [20, 42, 89, 90], "2015": [20, 28, 29, 30, 107], "27": 20, "study_2": 20, "44": [20, 24], "study_3": 20, "34": 20, "study_5": 20, "study_7": 20, "2016": 20, "36": [20, 22, 24], "study_8": 20, "1135": 20, "study_10": 20, "08": [20, 21], "507": 20, "study_11": 20, "study_12": 20, "1195": 20, "study_13": 20, "get_studi": 20, "123": [20, 25], "299": 20, "1693": 20, "30": [20, 21, 24], "janvanrijn": [20, 26], "9199877": 20, "9199878": 20, "9199879": 20, "9199880": 20, "9199881": 20, "9199882": 20, "9199883": 20, "9199884": 20, "9199885": 20, "9199886": 20, "9199887": 20, "9199888": 20, "9199889": 20, "9199890": 20, "9199891": 20, "9199892": 20, "9199893": 20, "9199894": 20, "9199895": 20, "9199897": 20, "9199898": 20, "9199899": 20, "9199900": 20, "9199901": 20, "9199902": 20, "9199903": 20, "9199904": 20, "9199905": 20, "9199906": 20, "9199907": 20, "9199908": 20, "9199909": 20, "9199910": 20, "9199911": 20, "9199912": 20, "9199913": 20, "9199914": 20, "9199915": 20, "9199916": 20, "9199917": 20, "9199918": 20, "9199919": 20, "9199920": 20, "9199921": 20, "9199922": 20, "9199923": 20, "9199924": 20, "9199925": 20, "9199926": 20, "9199927": 20, "9199928": 20, "9199929": 20, "9199930": 20, "9199931": 20, "9199932": 20, "9199933": 20, "9199934": 20, "9199935": 20, "9199936": 20, "9199937": 20, "9199938": 20, "9199939": 20, "9199940": 20, "9199941": 20, "9199942": 20, "9199943": 20, "9199944": 20, "9199945": 20, "9199946": 20, "9199947": 20, "9199948": 20, "9199950": 20, "9199951": 20, "9199952": 20, "9199953": 20, "9199954": 20, "9199955": 20, "9199956": 20, "9199957": 20, "9199958": 20, "9199959": 20, "9199960": 20, "9199961": 20, "9199963": 20, "9199964": 20, "9199965": 20, "9199966": 20, "9199967": 20, "9199968": 20, "9199969": 20, "9199970": 20, "9199971": 20, "9199972": 20, "9199973": 20, "9199974": 20, "9199975": 20, "9199976": 20, "9199977": 20, "9199978": 20, "9199979": 20, "9199981": 20, "9199982": 20, "9199983": 20, "9199984": 20, "9199985": 20, "9199986": 20, "9199987": 20, "9199988": 20, "9199989": 20, "9199990": 20, "9199991": 20, "9199992": 20, "9199993": 20, "9199994": 20, "9199995": 20, "9199996": 20, "9199997": 20, "9199998": 20, "9199999": 20, "9200000": 20, "9200001": 20, "9200002": 20, "9200003": 20, "9200004": 20, "9200006": 20, "9200007": 20, "9200008": 20, "9200009": 20, "9200010": 20, "9200011": 20, "9200012": 20, "9200013": 20, "9200014": 20, "9200015": 20, "9200016": 20, "9200017": 20, "9200018": 20, "9200019": 20, "9200020": 20, "9200021": 20, "9200022": 20, "9200023": 20, "9200024": 20, "9200025": 20, "9200026": 20, "9200027": 20, "9200028": 20, "9200029": 20, "9200030": 20, "9200031": 20, "9200032": 20, "9200033": 20, "9200034": 20, "9200035": 20, "9200036": 20, "9200037": 20, "9200038": 20, "9200039": 20, "9200040": 20, "9200041": 20, "9200042": 20, "9200043": 20, "9200044": 20, "9200045": 20, "9200046": 20, "9200047": 20, "9200048": 20, "9200049": 20, "9200050": 20, "9200051": 20, "9200052": 20, "9200053": 20, "9200054": 20, "9200055": 20, "9200056": 20, "9200057": 20, "9200058": 20, "9200059": 20, "9200060": 20, "9200061": 20, "9200062": 20, "9200063": 20, "9200064": 20, "9200065": 20, "9200066": 20, "9200067": 20, "9200068": 20, "9200069": 20, "9200070": 20, "9200071": 20, "9200072": 20, "9200073": 20, "9200074": 20, "9200075": 20, "9200076": 20, "9200077": 20, "9200078": 20, "9200079": 20, "9200080": 20, "9200081": 20, "9200082": 20, "9200083": 20, "9200084": 20, "9200085": 20, "9200086": 20, "9200087": 20, "9200088": 20, "9200089": 20, "9200090": 20, "9200091": 20, "9200092": 20, "9200093": 20, "9200094": 20, "9200095": 20, "9200096": 20, "9200097": 20, "9200098": 20, "9200099": 20, "9200100": 20, "9200101": 20, "9200102": 20, "9200103": 20, "9200104": 20, "9200105": 20, "9200106": 20, "9200107": 20, "9200108": 20, "9200109": 20, "9200110": 20, "9200111": 20, "9200112": 20, "9200113": 20, "9200114": 20, "9200115": 20, "9200116": 20, "9200117": 20, "9200118": 20, "9200119": 20, "9200120": 20, "9200121": 20, "9200122": 20, "9200123": 20, "9200124": 20, "9200125": 20, "9200126": 20, "9200127": 20, "9200128": 20, "9200129": 20, "9200130": 20, "9200131": 20, "9200132": 20, "9200133": 20, "9200134": 20, "9200135": 20, "9200136": 20, "9200137": 20, "9200138": 20, "9200139": 20, "9200140": 20, "9200141": 20, "9200142": 20, "9200143": 20, "9200144": 20, "9200145": 20, "9200146": 20, "9200147": 20, "9200148": 20, "9200149": 20, "9200150": 20, "9200151": 20, "9200152": 20, "9200153": 20, "9200154": 20, "9200155": 20, "9200156": 20, "9200157": 20, "9200158": 20, "9200159": 20, "9200160": 20, "9200161": 20, "9200162": 20, "9200163": 20, "9200164": 20, "9200165": 20, "9200166": 20, "9200167": 20, "9200168": 20, "9200169": 20, "9200171": 20, "9200173": 20, "9200174": 20, "9200175": 20, "9200176": 20, "9200177": 20, "9200178": 20, "9200180": 20, "9200181": 20, "9200182": 20, "9200183": 20, "9200184": 20, "9200185": 20, "9200186": 20, "9200187": 20, "9200188": 20, "9200189": 20, "9200190": 20, "9200191": 20, "9200192": 20, "9200193": 20, "9200194": 20, "9200195": 20, "9200196": 20, "9200197": 20, "9200198": 20, "9200199": 20, "9200200": 20, "9200201": 20, "9200202": 20, "9200203": 20, "9200204": 20, "9200205": 20, "9200206": 20, "9200207": 20, "9200208": 20, "9200209": 20, "9200210": 20, "9200211": 20, "9200212": 20, "9200213": 20, "9200214": 20, "9200215": 20, "9200216": 20, "9200217": 20, "9200218": 20, "9200219": 20, "9200220": 20, "9200221": 20, "9200222": 20, "9200223": 20, "9200224": 20, "9200225": 20, "9200226": 20, "9200227": 20, "9200228": 20, "9200229": 20, "9200230": 20, "9200231": 20, "9200232": 20, "9200233": 20, "9200234": 20, "9200235": 20, "9200236": 20, "9200237": 20, "9200238": 20, "9200239": 20, "9200240": 20, "9200241": 20, "9200242": 20, "9200243": 20, "9200244": 20, "9200245": 20, "9200246": 20, "9200247": 20, "9200248": 20, "9200249": 20, "9200250": 20, "9200251": 20, "9200252": 20, "9200253": 20, "9200254": 20, "9200255": 20, "9200256": 20, "9200257": 20, "9200258": 20, "9200259": 20, "9200260": 20, "9200261": 20, "9200262": 20, "9200263": 20, "9200264": 20, "9200265": 20, "9200266": 20, "9200267": 20, "9200268": 20, "9200269": 20, "9200270": 20, "9200271": 20, "9200272": 20, "9200273": 20, "9200274": 20, "9200275": 20, "9200276": 20, "9200277": 20, "9200278": 20, "9200279": 20, "9200280": 20, "9200281": 20, "9200282": 20, "9200283": 20, "9200284": 20, "9200285": 20, "9200286": 20, "9200287": 20, "9200288": 20, "9200289": 20, "9200290": 20, "9200291": 20, "9200292": 20, "9200293": 20, "9200294": 20, "9200295": 20, "9200296": 20, "9200297": 20, "9200298": 20, "9200299": 20, "9200300": 20, "9200301": 20, "9200302": 20, "9200303": 20, "9200304": 20, "9200305": 20, "9200306": 20, "9200307": 20, "9200308": 20, "9200310": 20, "9200311": 20, "9200312": 20, "9200313": 20, "9200314": 20, "9200315": 20, "9200316": 20, "9200317": 20, "9200318": 20, "9200319": 20, "9200320": 20, "9200321": 20, "9200322": 20, "9200324": 20, "9200325": 20, "9200326": 20, "9200327": 20, "9200328": 20, "9200329": 20, "9200330": 20, "9200331": 20, "9200332": 20, "9200333": 20, "9200334": 20, "9200335": 20, "9200336": 20, "9200337": 20, "9200338": 20, "9200339": 20, "9200340": 20, "9200341": 20, "9200342": 20, "9200343": 20, "9200344": 20, "9200345": 20, "9200346": 20, "9200347": 20, "9200348": 20, "9200349": 20, "9200350": 20, "9200351": 20, "9200352": 20, "9200353": 20, "9200354": 20, "9200355": 20, "9200356": 20, "9200357": 20, "9200358": 20, "9200359": 20, "9200361": 20, "9200362": 20, "9200364": 20, "9200365": 20, "9200366": 20, "9200367": 20, "9200368": 20, "9200369": 20, "9200370": 20, "9200371": 20, "9200372": 20, "9200373": 20, "9200374": 20, "9200375": 20, "9200376": 20, "9200377": 20, "9200378": 20, "9200379": 20, "9200380": 20, "9200382": 20, "9200383": 20, "9200384": 20, "9200385": 20, "9200386": 20, "9200387": 20, "9200388": 20, "9200389": 20, "9200390": 20, "9200391": 20, "9200392": 20, "9200393": 20, "9200394": 20, "9200395": 20, "9200396": 20, "9200397": 20, "9200398": 20, "9200399": 20, "9200400": 20, "9200401": 20, "9200402": 20, "9200403": 20, "9200404": 20, "9200405": 20, "9200406": 20, "9200407": 20, "9200408": 20, "9200409": 20, "9200410": 20, "9200411": 20, "9200412": 20, "9200413": 20, "9200414": 20, "9200415": 20, "9200416": 20, "9200417": 20, "9200418": 20, "9200419": 20, "9200420": 20, "9200421": 20, "9200422": 20, "9200424": 20, "9200425": 20, "9200426": 20, "9200427": 20, "9200428": 20, "9200429": 20, "9200430": 20, "9200431": 20, "9200432": 20, "9200433": 20, "9200434": 20, "9200435": 20, "9200436": 20, "9200437": 20, "9200438": 20, "9200439": 20, "9200440": 20, "9200441": 20, "9200442": 20, "9200443": 20, "9200444": 20, "9200445": 20, "9200446": 20, "9200447": 20, "9200448": 20, "9200449": 20, "9200450": 20, "9200451": 20, "9200452": 20, "9200453": 20, "9200454": 20, "9200455": 20, "9200456": 20, "9200457": 20, "9200458": 20, "9200459": 20, "9200460": 20, "9200461": 20, "9200462": 20, "9200463": 20, "9200464": 20, "9200465": 20, "9200466": 20, "9200467": 20, "9200468": 20, "9200469": 20, "9200470": 20, "9200471": 20, "9200472": 20, "9200473": 20, "9200474": 20, "9200475": 20, "9200476": 20, "9200477": 20, "9200478": 20, "9200479": 20, "9200480": 20, "9200481": 20, "9200482": 20, "9200483": 20, "9200484": 20, "9200485": 20, "9200486": 20, "9200487": 20, "9200488": 20, "9200489": 20, "9200490": 20, "9200491": 20, "9200492": 20, "9200493": 20, "9200494": 20, "9200495": 20, "9200496": 20, "9200497": 20, "9200498": 20, "9200499": 20, "9200500": 20, "9200501": 20, "9200502": 20, "9200503": 20, "9200504": 20, "9200505": 20, "9200506": 20, "9200507": 20, "9200508": 20, "9200509": 20, "9200510": 20, "9200511": 20, "9200512": 20, "9200513": 20, "9200514": 20, "9200515": 20, "9200516": 20, "9200517": 20, "9200518": 20, "9200519": 20, "9200520": 20, "9200521": 20, "9200522": 20, "9200523": 20, "9200524": 20, "9200525": 20, "9200526": 20, "9200527": 20, "9200528": 20, "9200529": 20, "9200530": 20, "9200531": 20, "9200532": 20, "9200533": 20, "9200534": 20, "9200535": 20, "9200536": 20, "9200537": 20, "9200538": 20, "9200539": 20, "9200540": 20, "9200541": 20, "9200542": 20, "9200543": 20, "9200544": 20, "9200545": 20, "9200546": 20, "9200547": 20, "9200548": 20, "9200549": 20, "9200550": 20, "9200551": 20, "9200552": 20, "9200553": 20, "9200554": 20, "9200555": 20, "9200556": 20, "9200557": 20, "9200558": 20, "9200559": 20, "9200560": 20, "9200561": 20, "9200562": 20, "9200563": 20, "9200564": 20, "9200565": 20, "9200566": 20, "9200567": 20, "9200568": 20, "9200569": 20, "9200570": 20, "9200571": 20, "9200572": 20, "9200573": 20, "9200574": 20, "9200575": 20, "9200576": 20, "9200577": 20, "9200578": 20, "9200579": 20, "9200580": 20, "9200581": 20, "9200582": 20, "9200583": 20, "9200584": 20, "9200585": 20, "9200586": 20, "9200587": 20, "9200588": 20, "9200589": 20, "9200590": 20, "9200591": 20, "9200592": 20, "9200593": 20, "9200594": 20, "9200595": 20, "9200596": 20, "9200597": 20, "9200598": 20, "9200599": 20, "9200600": 20, "9200601": 20, "9200602": 20, "9200603": 20, "9200604": 20, "9200605": 20, "9200606": 20, "9200607": 20, "9200608": 20, "9200609": 20, "9200610": 20, "9200611": 20, "9200612": 20, "9200613": 20, "9200614": 20, "9200615": 20, "9200616": 20, "9200617": 20, "9200618": 20, "9200619": 20, "9200620": 20, "9200621": 20, "9200622": 20, "9200623": 20, "9200624": 20, "9200625": 20, "9200626": 20, "9200627": 20, "9200628": 20, "9200629": 20, "9200630": 20, "9200631": 20, "9200632": 20, "9200633": 20, "9200634": 20, "9200635": 20, "9200636": 20, "9200637": 20, "9200638": 20, "9200639": 20, "9200640": 20, "9200641": 20, "9200642": 20, "9200643": 20, "9200644": 20, "9200645": 20, "9200646": 20, "9200647": 20, "9200648": 20, "9200649": 20, "9200650": 20, "9200651": 20, "9200652": 20, "9200653": 20, "9200654": 20, "9200655": 20, "9200656": 20, "9200657": 20, "9200658": 20, "9200659": 20, "9200660": 20, "9200661": 20, "9200662": 20, "9200663": 20, "9200664": 20, "9200665": 20, "9200666": 20, "9200667": 20, "9200668": 20, "9200669": 20, "9200670": 20, "9200671": 20, "9200672": 20, "9200673": 20, "9200674": 20, "9200675": 20, "9200676": 20, "9200677": 20, "9200678": 20, "9200679": 20, "9200680": 20, "9200681": 20, "9200682": 20, "9200683": 20, "9200684": 20, "9200685": 20, "9200686": 20, "9200687": 20, "9200688": 20, "9200689": 20, "9200690": 20, "9200691": 20, "9200692": 20, "9200693": 20, "9200694": 20, "9200695": 20, "9200696": 20, "9200697": 20, "9200698": 20, "9200699": 20, "9200700": 20, "9200701": 20, "9200702": 20, "9200703": 20, "9200704": 20, "9200705": 20, "9200706": 20, "9200707": 20, "9200708": 20, "9200709": 20, "9200710": 20, "9200711": 20, "9200712": 20, "9200713": 20, "9200714": 20, "9200715": 20, "9200716": 20, "9200717": 20, "9200719": 20, "9200720": 20, "9200721": 20, "9200722": 20, "9200723": 20, "9200724": 20, "9200725": 20, "9200726": 20, "9200727": 20, "9200728": 20, "9200729": 20, "9200730": 20, "9200731": 20, "9200732": 20, "9200733": 20, "9200734": 20, "9200735": 20, "9200736": 20, "9200737": 20, "9200738": 20, "9200739": 20, "9200740": 20, "9200741": 20, "9200742": 20, "9200743": 20, "9200744": 20, "9200745": 20, "9200746": 20, "9200747": 20, "9200748": 20, "9200749": 20, "9200750": 20, "9200751": 20, "9200752": 20, "9200753": 20, "9200754": 20, "9200755": 20, "9200756": 20, "9200757": 20, "9200758": 20, "9200759": 20, "9200760": 20, "9200761": 20, "9200762": 20, "9200763": 20, "9200764": 20, "9200765": 20, "9200766": 20, "9200767": 20, "9200768": 20, "9200769": 20, "9200770": 20, "9200771": 20, "9200772": 20, "9200773": 20, "9200774": 20, "9200775": 20, "9200776": 20, "9200778": 20, "9200779": 20, "9200780": 20, "9200781": 20, "9200782": 20, "9200783": 20, "9200784": 20, "9200785": 20, "9200786": 20, "9200787": 20, "9200788": 20, "9200789": 20, "9200790": 20, "9200791": 20, "9200792": 20, "9200793": 20, "9200794": 20, "9200795": 20, "9200796": 20, "9200797": 20, "9200798": 20, "9200799": 20, "9200800": 20, "9200801": 20, "9200802": 20, "9200803": 20, "9200804": 20, "9200806": 20, "9200807": 20, "9200808": 20, "9200809": 20, "9200810": 20, "9200811": 20, "9200812": 20, "9200813": 20, "9200814": 20, "9200815": 20, "9200816": 20, "9200817": 20, "9200818": 20, "9200819": 20, "9200820": 20, "9200821": 20, "9200822": 20, "9200823": 20, "9200824": 20, "9200825": 20, "9200826": 20, "9200827": 20, "9200828": 20, "9200829": 20, "9200830": 20, "9200831": 20, "9200832": 20, "9200833": 20, "9200834": 20, "9200835": 20, "9200836": 20, "9200837": 20, "9200838": 20, "9200839": 20, "9200840": 20, "9200841": 20, "9200842": 20, "9200843": 20, "9200844": 20, "9200845": 20, "9200846": 20, "9200847": 20, "9200848": 20, "9200849": 20, "9200850": 20, "9200851": 20, "9200852": 20, "9200853": 20, "9200854": 20, "9200855": 20, "9200856": 20, "9200857": 20, "9200858": 20, "9200859": 20, "9200860": 20, "9200861": 20, "9200862": 20, "9200863": 20, "9200864": 20, "9200865": 20, "9200866": 20, "9200867": 20, "9200868": 20, "9200869": 20, "9200870": 20, "9200871": 20, "9200872": 20, "9200873": 20, "9200874": 20, "9200875": 20, "9200876": 20, "9200877": 20, "9200878": 20, "9200879": 20, "9200880": 20, "9200881": 20, "9200882": 20, "9200883": 20, "9200884": 20, "9200885": 20, "9200886": 20, "9200887": 20, "9200888": 20, "9200889": 20, "9200890": 20, "9200891": 20, "9200892": 20, "9200893": 20, "9200894": 20, "9200895": 20, "9200896": 20, "9200897": 20, "9200898": 20, "9200899": 20, "9200900": 20, "9200901": 20, "9200902": 20, "9200903": 20, "9200904": 20, "9200905": 20, "9200906": 20, "9200907": 20, "9200908": 20, "9200909": 20, "9200910": 20, "9200911": 20, "9200912": 20, "9200913": 20, "9200914": 20, "9200915": 20, "9200916": 20, "9200917": 20, "9200918": 20, "9200919": 20, "9200920": 20, "9200921": 20, "9200922": 20, "9200923": 20, "9200924": 20, "9200925": 20, "9200926": 20, "9200927": 20, "9200928": 20, "9200929": 20, "9200930": 20, "9200931": 20, "9200932": 20, "9200933": 20, "9200934": 20, "9200935": 20, "9200936": 20, "9200937": 20, "9200938": 20, "9200939": 20, "9200940": 20, "9200941": 20, "9200942": 20, "9200943": 20, "9200944": 20, "9200945": 20, "9200946": 20, "9200947": 20, "9200948": 20, "9200949": 20, "9200950": 20, "9200951": 20, "9200952": 20, "9200953": 20, "9200954": 20, "9200955": 20, "9200956": 20, "9200957": 20, "9200958": 20, "9200959": 20, "9200960": 20, "9200961": 20, "9200962": 20, "9200963": 20, "9200964": 20, "9200965": 20, "9200966": 20, "9200967": 20, "9200968": 20, "9200969": 20, "9200970": 20, "9200971": 20, "9200972": 20, "9200973": 20, "9200974": 20, "9200975": 20, "9200976": 20, "9200977": 20, "9200978": 20, "9200979": 20, "9200980": 20, "9200981": 20, "9200982": 20, "9200983": 20, "9200984": 20, "9200985": 20, "9200986": 20, "9200987": 20, "9200988": 20, "9200989": 20, "9200990": 20, "9200991": 20, "9200993": 20, "9200994": 20, "9200995": 20, "9200996": 20, "9200997": 20, "9200998": 20, "9200999": 20, "9201000": 20, "9201001": 20, "9201002": 20, "9201003": 20, "9201004": 20, "9201005": 20, "9201006": 20, "9201007": 20, "9201008": 20, "9201009": 20, "9201010": 20, "9201011": 20, "9201012": 20, "9201013": 20, "9201014": 20, "9201015": 20, "9201016": 20, "9201017": 20, "9201018": 20, "9201019": 20, "9201020": 20, "9201021": 20, "9201022": 20, "9201023": 20, "9201024": 20, "9201025": 20, "9201026": 20, "9201027": 20, "9201028": 20, "9201029": 20, "9201030": 20, "9201031": 20, "9201032": 20, "9201033": 20, "9201034": 20, "9201035": 20, "9201036": 20, "9201037": 20, "9201038": 20, "9201039": 20, "9201040": 20, "9201041": 20, "9201042": 20, "9201043": 20, "9201044": 20, "9201045": 20, "9201046": 20, "9201047": 20, "9201048": 20, "9201049": 20, "9201050": 20, "9201051": 20, "9201052": 20, "9201053": 20, "9201054": 20, "9201055": 20, "9201056": 20, "9201057": 20, "9201058": 20, "9201059": 20, "9201060": 20, "9201061": 20, "9201062": 20, "9201063": 20, "9201064": 20, "9201065": 20, "9201066": 20, "9201067": 20, "9201068": 20, "9201069": 20, "9201070": 20, "9201071": 20, "9201072": 20, "9201073": 20, "9201074": 20, "9201075": 20, "9201076": 20, "9201077": 20, "9201078": 20, "9201079": 20, "9201080": 20, "9201081": 20, "9201082": 20, "9201083": 20, "9201084": 20, "9201085": 20, "9201086": 20, "9201087": 20, "9201088": 20, "9201089": 20, "9201090": 20, "9201091": 20, "9201092": 20, "9201093": 20, "9201094": 20, "9201095": 20, "9201096": 20, "9201097": 20, "9201098": 20, "9201099": 20, "9201100": 20, "9201101": 20, "9201102": 20, "9201103": 20, "9201104": 20, "9201105": 20, "9201106": 20, "9201107": 20, "9201108": 20, "9201109": 20, "9201110": 20, "9201111": 20, "9201112": 20, "9201113": 20, "9201114": 20, "9201115": 20, "9201116": 20, "9201117": 20, "9201118": 20, "9201119": 20, "9201120": 20, "9201121": 20, "9201122": 20, "9201124": 20, "9201125": 20, "9201126": 20, "9201127": 20, "9201128": 20, "9201129": 20, "9201130": 20, "9201131": 20, "9201132": 20, "9201133": 20, "9201134": 20, "9201135": 20, "9201136": 20, "9201137": 20, "9201138": 20, "9201139": 20, "9201140": 20, "9201141": 20, "9201142": 20, "9201143": 20, "9201144": 20, "9201145": 20, "9201146": 20, "9201147": 20, "9201148": 20, "9201149": 20, "9201150": 20, "9201151": 20, "9201152": 20, "9201153": 20, "9201154": 20, "9201155": 20, "9201156": 20, "9201157": 20, "9201158": 20, "9201159": 20, "9201160": 20, "9201161": 20, "9201162": 20, "9201163": 20, "9201164": 20, "9201165": 20, "9201166": 20, "9201167": 20, "9201168": 20, "9201169": 20, "9201170": 20, "9201171": 20, "9201172": 20, "9201173": 20, "9201174": 20, "9201175": 20, "9201176": 20, "9201177": 20, "9201178": 20, "9201179": 20, "9201180": 20, "9201181": 20, "9201182": 20, "9201183": 20, "9201184": 20, "9201185": 20, "9201186": 20, "9201187": 20, "9201188": 20, "9201189": 20, "9201190": 20, "9201191": 20, "9201192": 20, "9201193": 20, "9201194": 20, "9201195": 20, "9201196": 20, "9201197": 20, "9201198": 20, "9201199": 20, "9201200": 20, "9201201": 20, "9201202": 20, "9201203": 20, "9201204": 20, "9201205": 20, "9201206": 20, "9201207": 20, "9201208": 20, "9201209": 20, "9201210": 20, "9201211": 20, "9201212": 20, "9201213": 20, "9201214": 20, "9201215": 20, "9201216": 20, "9201217": 20, "9201218": 20, "9201219": 20, "9201220": 20, "9201221": 20, "9201222": 20, "9201223": 20, "9201224": 20, "9201225": 20, "9201226": 20, "9201227": 20, "9201228": 20, "9201229": 20, "9201230": 20, "9201231": 20, "9201232": 20, "9201233": 20, "9201234": 20, "9201235": 20, "9201236": 20, "9201237": 20, "9201238": 20, "9201239": 20, "9201240": 20, "9201241": 20, "9201242": 20, "9201243": 20, "9201244": 20, "9201245": 20, "9201246": 20, "9201247": 20, "9201248": 20, "9201249": 20, "9201250": 20, "9201251": 20, "9201252": 20, "9201253": 20, "9201254": 20, "9201255": 20, "9201256": 20, "9201257": 20, "9201258": 20, "9201259": 20, "9201260": 20, "9201261": 20, "9201262": 20, "9201263": 20, "9201264": 20, "9201265": 20, "9201266": 20, "9201267": 20, "9201268": 20, "9201269": 20, "9201270": 20, "9201271": 20, "9201272": 20, "9201273": 20, "9201274": 20, "9201275": 20, "9201276": 20, "9201277": 20, "9201278": 20, "9201279": 20, "9201280": 20, "9201281": 20, "9201282": 20, "9201283": 20, "9201284": 20, "9201285": 20, "9201286": 20, "9201287": 20, "9201288": 20, "9201289": 20, "9201290": 20, "9201291": 20, "9201292": 20, "9201293": 20, "9201294": 20, "9201295": 20, "9201296": 20, "9201297": 20, "9201298": 20, "9201299": 20, "9201300": 20, "9201301": 20, "9201302": 20, "9201303": 20, "9201304": 20, "9201305": 20, "9201306": 20, "9201307": 20, "9201308": 20, "9201309": 20, "9201310": 20, "9201311": 20, "9201312": 20, "9201313": 20, "9201314": 20, "9201315": 20, "9201316": 20, "9201317": 20, "9201318": 20, "9201319": 20, "9201320": 20, "9201321": 20, "9201322": 20, "9201323": 20, "9201324": 20, "9201325": 20, "9201326": 20, "9201327": 20, "9201328": 20, "9201329": 20, "9201330": 20, "9201331": 20, "9201332": 20, "9201333": 20, "9201334": 20, "9201335": 20, "9201336": 20, "9201337": 20, "9201338": 20, "9201339": 20, "9201340": 20, "9201341": 20, "9201342": 20, "9201343": 20, "9201344": 20, "9201345": 20, "9201346": 20, "9201347": 20, "9201348": 20, "9201349": 20, "9201350": 20, "9201351": 20, "9201352": 20, "9201353": 20, "9201354": 20, "9201355": 20, "9201356": 20, "9201357": 20, "9201358": 20, "9201359": 20, "9201360": 20, "9201361": 20, "9201362": 20, "9201363": 20, "9201364": 20, "9201365": 20, "9201366": 20, "9201367": 20, "9201368": 20, "9201369": 20, "9201370": 20, "9201371": 20, "9201372": 20, "9201373": 20, "9201374": 20, "9201375": 20, "9201376": 20, "9201377": 20, "9201378": 20, "9201379": 20, "9201380": 20, "9201381": 20, "9201382": 20, "9201384": 20, "9201385": 20, "9201386": 20, "9201387": 20, "9201388": 20, "9201389": 20, "9201390": 20, "9201391": 20, "9201392": 20, "9201393": 20, "9201394": 20, "9201395": 20, "9201396": 20, "9201397": 20, "9201398": 20, "9201399": 20, "9201400": 20, "9201401": 20, "9201402": 20, "9201403": 20, "9201404": 20, "9201405": 20, "9201406": 20, "9201407": 20, "9201408": 20, "9201409": 20, "9201410": 20, "9201411": 20, "9201412": 20, "9201413": 20, "9201414": 20, "9201415": 20, "9201416": 20, "9201417": 20, "9201418": 20, "9201419": 20, "9201420": 20, "9201422": 20, "9201423": 20, "9201424": 20, "9201425": 20, "9201426": 20, "9201427": 20, "9201428": 20, "9201429": 20, "9201430": 20, "9201431": 20, "9201432": 20, "9201433": 20, "9201434": 20, "9201435": 20, "9201436": 20, "9201437": 20, "9201438": 20, "9201439": 20, "9201440": 20, "9201441": 20, "9201442": 20, "9201443": 20, "9201444": 20, "9201445": 20, "9201446": 20, "9201447": 20, "9201448": 20, "9201449": 20, "9201450": 20, "9201451": 20, "9201452": 20, "9201453": 20, "9201454": 20, "9201455": 20, "9201456": 20, "9201457": 20, "9201458": 20, "9201459": 20, "9201460": 20, "9201461": 20, "9201462": 20, "9201463": 20, "9201464": 20, "9201465": 20, "9201466": 20, "9201467": 20, "9201468": 20, "9201469": 20, "9201470": 20, "9201471": 20, "9201472": 20, "9201473": 20, "9201474": 20, "9201475": 20, "9201476": 20, "9201477": 20, "9201478": 20, "9201479": 20, "9201480": 20, "9201481": 20, "9201482": 20, "9201483": 20, "9201484": 20, "9201485": 20, "9201486": 20, "9201487": 20, "9201488": 20, "9201489": 20, "9201490": 20, "9201491": 20, "9201492": 20, "9201493": 20, "9201494": 20, "9201495": 20, "9201496": 20, "9201497": 20, "9201498": 20, "9201499": 20, "9201500": 20, "9201501": 20, "9201502": 20, "9201503": 20, "9201504": 20, "9201505": 20, "9201506": 20, "9201507": 20, "9201508": 20, "9201509": 20, "9201510": 20, "9201511": 20, "9201512": 20, "9201514": 20, "9201515": 20, "9201516": 20, "9201517": 20, "9201518": 20, "9201519": 20, "9201520": 20, "9201521": 20, "9201522": 20, "9201523": 20, "9201524": 20, "9201525": 20, "9201526": 20, "9201527": 20, "9201528": 20, "9201529": 20, "9201530": 20, "9201531": 20, "9201532": 20, "9201533": 20, "9201534": 20, "9201535": 20, "9201536": 20, "9201537": 20, "9201538": 20, "9201539": 20, "9201540": 20, "9201541": 20, "9201542": 20, "9201543": 20, "9201544": 20, "9201545": 20, "9201546": 20, "9201547": 20, "9201548": 20, "9201549": 20, "9201550": 20, "9201551": 20, "9201552": 20, "9201553": 20, "9201554": 20, "9201555": 20, "9201556": 20, "9201557": 20, "9201558": 20, "9201559": 20, "9201560": 20, "9201561": 20, "9201562": 20, "9201563": 20, "9201564": 20, "9201565": 20, "9201566": 20, "9201567": 20, "9201568": 20, "9201569": 20, "9201570": 20, "9201571": 20, "9201572": 20, "9201573": 20, "9201574": 20, "9201575": 20, "9201576": 20, "9201577": 20, "9201578": 20, "9201579": 20, "9201580": 20, "9201581": 20, "9201582": 20, "9201583": 20, "9201584": 20, "9201585": 20, "9201586": 20, "9201587": 20, "9201588": 20, "9201589": 20, "9201590": 20, "9201591": 20, "And": [20, 21, 22, 23, 27], "study_id": [20, 25, 78, 79, 83, 85, 87, 91], "7130157": 20, "974969": 20, "7130158": 20, "716500": 20, "7130159": 20, "967200": 20, "886400": 20, "976000": 20, "259": [20, 23], "307": 20, "verifi": [20, 69, 70], "t_id": 20, "readabl": [20, 21, 53, 54, 107], "simpli": [20, 21, 23, 31], "uuid4": [20, 21], "hex": [20, 21], "new_studi": 20, "create_studi": [20, 107], "benchmark_suit": [20, 78, 82, 89], "5332": 20, "introductori": 21, "list_suit": 21, "openml100": [21, 23, 26, 108], "cc18": 21, "35": 21, "forex": 21, "friendli": [21, 77, 78, 81, 82], "236": [21, 24], "a9ee1f0b2a4b48b6b6da1653fe92890": 21, "2020": 21, "239": 21, "c638a5d3d31241179f9b4853951fdb79": 21, "e5e7f56c8655433eb2418c240ec8b8c0": 21, "2902": 21, "testecc18": 21, "54": 21, "8598": 21, "258": [21, 24], "advoc": 21, "comprehens": 21, "back": [21, 31], "complementari": 21, "toolkit": 21, "eas": 21, "client": [21, 106, 107], "ii": 21, "iii": 21, "enabl": 21, "propos": 21, "thousand": 21, "inclus": 21, "criteria": [21, 40, 66], "equal": [21, 25, 26, 55], "100000": 21, "hot": [21, 27, 31], "5000": [21, 22], "artifici": 21, "subset": 21, "nor": 21, "binar": 21, "perfectli": 21, "bernd": 21, "giusepp": 21, "casalicchio": 21, "matthia": [21, 24, 27, 106], "feurer": [21, 28, 29, 30, 106, 107], "hutter": [21, 24, 25, 28, 29, 30, 106], "michel": 21, "lang": 21, "rafael": 21, "mantovani": 21, "joaquin": [21, 106], "vanschoren": [21, 106], "arxiv": [21, 87, 106], "1708": [21, 87], "03731v2": 21, "articl": [21, 106], "year": [21, 106], "journal": [21, 106], "list_task": [21, 23, 24, 107], "pydata": 21, "stabl": [21, 69, 70], "outsid": [21, 22], "tid": [21, 23, 24], "transpos": 21, "41849": 21, "305556": 21, "42707": 21, "10472": 21, "263889": 21, "10594": 21, "41027": 21, "4820": 21, "166667": 21, "2796": 21, "48658": 21, "718310": 21, "2199": 21, "777778": 21, "1326": 21, "47662": 21, "680556": 21, "597222": 21, "12148": 21, "972222": 21, "6771": 21, "96320": 21, "121": 21, "347222": 21, "3772": 21, "6465": 21, "166": [21, 27], "875000": 21, "3072": 21, "722222": 21, "1556": 21, "target_feature_left": [21, 23], "much": 21, "ten": 21, "all_task": 21, "task_ids_for_suit": 21, "new_suit": 21, "create_benchmark_suit": 21, "runtimewarn": [21, 23], "due": [21, 23, 26], "error": [21, 23, 26, 35, 40, 60, 67, 69, 70, 107], "256": [21, 22, 23, 24], "5331": 21, "input": [22, 23, 31, 71], "hpobench": 22, "famou": 22, "king": 22, "rook": 22, "versu": 22, "pawn": 22, "a7": 22, "233": [22, 24], "repetit": 22, "qualiti": [22, 23, 25, 33, 40, 41, 42, 43, 89, 103, 104, 105, 107], "point": [22, 25, 31, 33], "curv": [22, 23, 27, 95], "loop": [22, 26], "neglect": 22, "train_indic": 22, "test_indic": 22, "2142": 22, "int32": 22, "1054": 22, "x_train": 22, "y_train": 22, "x_test": 22, "y_test": 22, "aforement": 22, "repeat_idx": 22, "fold_idx": 22, "sample_idx": 22, "2876": 22, "320": 22, "2877": 22, "319": 22, "1767": 22, "again": [22, 107], "1598": 22, "1702": 22, "181": [22, 24], "362": 22, "724": 22, "1024": [22, 107], "1448": 22, "2048": 22, "task_typ": [23, 24, 60, 67, 93, 94, 95, 96, 98, 99, 101, 105], "capabl": [23, 31], "convers": [23, 107], "common": 23, "tasks_df": 23, "ttid": 23, "estimation_procedur": [23, 24], "evaluation_measur": [23, 26, 93, 94, 95, 96, 98, 99, 101], "source_data": 23, "target_featur": 23, "cost_matrix": [23, 93, 95], "3962": 23, "filtered_task": 23, "241": 23, "271": 23, "279": 23, "283": 23, "1766": 23, "1775": 23, "1779": 23, "1793": 23, "1801": 23, "1805": 23, "1813": 23, "1817": 23, "1882": 23, "1891": 23, "1895": 23, "1909": 23, "1917": 23, "1921": 23, "1929": 23, "1933": 23, "1945": 23, "1952": 23, "1956": 23, "1967": 23, "1973": 23, "1977": 23, "1983": 23, "1987": 23, "2125": 23, "2944": 23, "3034": 23, "3047": 23, "3049": 23, "3053": 23, "3054": 23, "3055": 23, "3484": 23, "3486": 23, "3492": [23, 27], "3493": [23, 27], "3494": [23, 27], "3512": 23, "3518": 23, "3520": 23, "3521": 23, "3529": 23, "3535": 23, "3561": 23, "3583": 23, "3623": 23, "3636": 23, "3640": 23, "3660": 23, "3690": 23, "3691": 23, "3692": 23, "3704": 23, "3706": 23, "3718": 23, "3794": 23, "3803": 23, "3810": 23, "3812": 23, "3813": 23, "3814": 23, "3817": 23, "3833": 23, "3852": 23, "3853": 23, "3857": 23, "3860": 23, "3867": 23, "3877": 23, "3879": 23, "3886": 23, "3971": 23, "3979": 23, "3992": 23, "3999": 23, "4189": 23, "4191": 23, "4197": 23, "4198": 23, "4199": 23, "4217": 23, "4223": 23, "4225": 23, "4226": 23, "4234": 23, "4240": 23, "4254": 23, "4265": 23, "4266": 23, "4341": 23, "4345": 23, "4365": 23, "4395": 23, "4397": 23, "4409": 23, "4411": 23, "4423": 23, "4499": 23, "4508": 23, "4515": 23, "4517": 23, "4518": 23, "4519": 23, "4522": 23, "4538": 23, "4557": 23, "4558": 23, "4562": 23, "4565": 23, "4572": 23, "4582": 23, "4584": 23, "4591": 23, "4618": 23, "4676": 23, "4684": 23, "4697": 23, "4704": 23, "7286": 23, "7307": 23, "7543": 23, "7548": 23, "7558": 23, "9904": 23, "9905": 23, "9950": 23, "9980": [23, 27], "9989": 23, "9990": 23, "10097": 23, "10098": 23, "12738": 23, "12739": 23, "14968": 23, "145682": 23, "145800": 23, "145804": 23, "145805": 23, "145825": 23, "145836": 23, "145839": 23, "145848": 23, "145878": [23, 27], "145882": 23, "145914": 23, "145917": 23, "145952": 23, "145959": 23, "145970": 23, "145976": [23, 27], "145978": 23, "146062": 23, "146064": [23, 27], "146065": 23, "146066": 23, "146069": 23, "146092": 23, "146156": 23, "146216": 23, "146219": 23, "146231": 23, "146574": 23, "146576": 23, "146577": 23, "146578": 23, "146583": 23, "146587": 23, "146588": 23, "146593": 23, "146596": 23, "146597": 23, "146600": 23, "146818": 23, "166859": 23, "166875": 23, "166882": 23, "166884": 23, "166893": 23, "166905": 23, "166906": 23, "166907": 23, "166913": 23, "166915": 23, "166919": 23, "166947": 23, "166953": 23, "166956": 23, "166957": 23, "166958": 23, "166959": 23, "166960": 23, "166967": 23, "166976": 23, "166977": 23, "166978": 23, "166980": 23, "166983": 23, "166988": 23, "166989": 23, "166992": 23, "167016": 23, "167020": 23, "167031": 23, "167037": 23, "167062": 23, "167067": 23, "167068": 23, "167095": 23, "167096": 23, "167100": 23, "167104": 23, "167106": 23, "167151": 23, "167154": 23, "167160": 23, "167163": 23, "167167": 23, "167168": 23, "167171": 23, "167173": 23, "167174": 23, "167175": 23, "167180": 23, "167184": 23, "167187": 23, "167194": 23, "167198": 23, "168300": 23, "168783": 23, "168819": 23, "168820": 23, "168821": 23, "168822": 23, "168823": 23, "168824": 23, "168825": 23, "168907": 23, "189786": 23, "189859": 23, "189899": 23, "189900": 23, "189932": 23, "189937": 23, "189941": 23, "190136": 23, "190138": 23, "190139": 23, "190140": 23, "190143": 23, "190146": 23, "233090": 23, "233094": 23, "233109": 23, "233115": 23, "233171": 23, "233206": 23, "359953": 23, "359954": 23, "359955": 23, "360857": 23, "360865": 23, "360868": 23, "360869": 23, "360951": 23, "360953": 23, "360964": 23, "361107": 23, "361109": 23, "361146": 23, "361147": 23, "361148": 23, "361149": 23, "361150": 23, "361151": 23, "361152": 23, "361153": 23, "361154": 23, "361155": 23, "361156": 23, "361157": 23, "361158": 23, "361159": 23, "361160": 23, "361161": 23, "361163": 23, "361164": 23, "361165": 23, "361166": 23, "361167": 23, "361168": 23, "361169": 23, "361170": 23, "361171": 23, "361172": 23, "361173": 23, "361174": 23, "361175": 23, "361176": 23, "361183": 23, "361185": 23, "361190": 23, "361305": 23, "361338": 23, "361340": 23, "restrict": 23, "resampl": [23, 24], "number_sampl": 23, "9983": [23, 27], "56483": 23, "56484": 23, "56485": 23, "offset": [23, 42, 47, 48, 59, 67, 75, 89, 90, 105], "simultan": 23, "50000": 23, "thing": 23, "unbalanc": 23, "46802": 23, "source_data_label": 23, "target_feature_ev": 23, "target_feature_right": 23, "quality_measur": 23, "target_valu": 23, "3511": 23, "8257": 23, "6723": 23, "4692": 23, "8032": 23, "subgroup_discoveri": 23, "subgroup": 23, "discoveri": [23, 26], "cortana": 23, "8033": 23, "gain": 23, "8034": 23, "binomi": 23, "8035": 23, "56486": 23, "jaccard": 23, "8036": 23, "56487": 23, "8037": 23, "56488": 23, "8038": 23, "56489": 23, "8039": 23, "56490": 23, "8581": 23, "75219": 23, "8663": 23, "125901": 23, "learning_curv": 23, "9864": 23, "127251": 23, "cluster": [23, 94, 101, 107, 108], "11920": 23, "146761": 23, "13204": 23, "148117": 23, "17309": 23, "170139": 23, "20760": 23, "191646": 23, "24446": 23, "213320": 23, "27655": 23, "234435": 23, "31979": 23, "256739": 23, "31989": 23, "256750": 23, "37166": 23, "297708": 23, "40370": 23, "318835": 23, "43587": 23, "339990": 23, "member": 23, "aim": [23, 26], "estimation_procedure_id": [23, 93, 94, 95, 96, 98, 99, 101], "strong": 23, "prerequisit": 23, "appropri": [23, 26, 31], "favourit": 23, "afterward": 23, "sens": 23, "scatter": [23, 25], "predefin": 23, "my_task": 23, "create_task": [23, 107], "614": 23, "lookup": [23, 108], "loc": [23, 27], "revert": 23, "prod": 23, "3496": 23, "io": [24, 107], "robust": [24, 107], "aaron": 24, "klein": 24, "katharina": 24, "eggensperg": 24, "jost": 24, "springenberg": 24, "manuel": 24, "blum": 24, "advanc": [24, 25, 27, 106, 107], "nip": [24, 27], "cc": [24, 27], "5872": 24, "supplementari": 24, "materi": 24, "supplement": 24, "fmt": [24, 27], "off": [24, 27, 31, 107], "179": 24, "180": 24, "182": 24, "185": 24, "273": 24, "293": 24, "300": 24, "351": 24, "354": 24, "357": 24, "389": 24, "390": 24, "392": 24, "393": 24, "396": 24, "398": 24, "399": 24, "401": 24, "554": [24, 107], "679": 24, "718": 24, "720": 24, "722": [24, 107], "723": 24, "727": 24, "728": 24, "737": [24, 107], "740": 24, "741": 24, "743": 24, "751": 24, "772": 24, "797": 24, "807": 24, "816": 24, "819": [24, 107], "821": 24, "822": 24, "823": 24, "837": [24, 107], "843": 24, "845": 24, "846": 24, "847": [24, 107], "849": [24, 107], "866": [24, 107], "871": 24, "897": [24, 107], "901": [24, 107], "904": 24, "910": 24, "917": 24, "923": 24, "930": 24, "934": [24, 27], "953": 24, "958": 24, "959": 24, "962": 24, "966": 24, "976": 24, "978": 24, "979": [24, 107], "980": [24, 107], "993": 24, "995": [24, 27], "1002": 24, "1018": [24, 107], "1019": 24, "1020": [24, 107], "1021": [24, 107], "1036": 24, "1040": 24, "1041": 24, "1049": [24, 107], "1050": [24, 107], "1053": [24, 107], "1056": 24, "1068": [24, 107], "1069": [24, 27, 107], "1111": 24, "1112": 24, "1114": 24, "1116": 24, "1119": 24, "1120": 24, "1128": 24, "1130": 24, "1134": 24, "1138": 24, "1139": 24, "1142": 24, "1146": [24, 107], "1161": 24, "1166": 24, "respect": [24, 54, 59], "discourag": 24, "unclear": 24, "basi": 24, "inact": [24, 26], "becam": 24, "startegi": 24, "tasks_": 24, "lowest": 24, "oldest": 24, "rais": [24, 31, 35, 40, 50, 51, 53, 54, 66, 107], "valueerror": 24, "disabl": 24, "fast": 24, "assert": 24, "140": 24, "242": 24, "244": 24, "248": 24, "252": 24, "254": 24, "260": 24, "261": [24, 107], "262": 24, "266": 24, "275": 24, "2117": 24, "2118": 24, "2119": 24, "2120": 24, "2122": 24, "2123": 24, "2350": 24, "3043": 24, "3044": 24, "75090": 24, "75092": 24, "75093": 24, "75098": 24, "75099": 24, "75100": 24, "75103": 24, "75104": 24, "75105": 24, "75106": 24, "75107": 24, "75108": 24, "75111": 24, "75112": 24, "75113": 24, "75114": 24, "75115": 24, "75116": 24, "75117": 24, "75119": 24, "75120": 24, "75121": 24, "75122": 24, "75125": 24, "75126": 24, "75129": 24, "75131": 24, "75133": 24, "75136": 24, "75137": 24, "75138": 24, "75139": 24, "75140": 24, "75142": 24, "75143": 24, "75146": 24, "75147": 24, "75148": 24, "75149": 24, "75150": 24, "75151": 24, "75152": 24, "75153": 24, "75155": 24, "75157": 24, "75159": 24, "75160": 24, "75161": 24, "75162": 24, "75163": 24, "75164": 24, "75165": 24, "75166": 24, "75168": 24, "75169": 24, "75170": 24, "75171": 24, "75172": 24, "75173": 24, "75174": 24, "75175": 24, "75176": 24, "75179": 24, "75180": 24, "75182": 24, "75183": 24, "75184": 24, "75185": 24, "75186": 24, "75188": 24, "75189": 24, "75190": 24, "75191": 24, "75192": 24, "75194": 24, "75195": 24, "75196": 24, "75197": 24, "75198": 24, "75199": 24, "75200": 24, "75201": 24, "75202": 24, "75203": 24, "75204": 24, "75205": 24, "75206": 24, "75207": 24, "75208": 24, "75209": 24, "75210": 24, "75212": 24, "75213": 24, "75216": 24, "75218": 24, "75220": 24, "75224": 24, "75226": 24, "75228": 24, "75229": 24, "75233": 24, "75238": 24, "75240": 24, "75244": 24, "75245": 24, "75246": 24, "75247": 24, "75248": 24, "75249": 24, "75251": 24, "190400": 24, "337": [24, 29], "2015_neurips_feurer_exampl": [24, 29], "rule": [25, 107], "prematur": [25, 107], "benjamin": [25, 107], "peter": 25, "der": 25, "putten": 25, "intellig": 25, "xvii": 25, "17th": 25, "symposium": 25, "springer": 25, "chapter": 25, "1007": 25, "2f978": 25, "01768": 25, "2_25": 25, "investig": 25, "outperform": 25, "accompani": 25, "vector": [25, 26, 107], "nn": 25, "7754": 25, "7756": 25, "7722": 25, "7729": 25, "7725": 25, "differenti": 25, "hyper": 25, "classifier_famili": 25, "meta_featur": 25, "class_valu": 25, "flow1_valu": 25, "flow2_valu": 25, "pivot": 25, "dropna": 25, "data_qu": 25, "irrelev": [25, 26], "meta_feature_1": 25, "meta_feature_2": 25, "diff": 25, "fig_splot": 25, "ax_splot": 25, "determine_class": 25, "val_lin": 25, "val_nonlin": 25, "elif": [25, 27], "lambda": [25, 27], "fig_scatt": 25, "ax_scatt": 25, "class_val": 25, "df_class": 25, "set_xscal": 25, "set_yscal": 25, "fig_diagplot": 25, "ax_diagplot": 25, "l": 25, "black": [25, 107], "025": [25, 29], "2018_ida_strang_exampl": [25, 29], "unix": 26, "window": [26, 107], "untest": 26, "proceed": 26, "24th": 26, "acm": 26, "sigkdd": 26, "confer": 26, "dl": 26, "doi": 26, "1145": 26, "3219819": 26, "3220058": 26, "sy": 26, "win32": 26, "pyrfr": 26, "fanova": 26, "instal": [26, 31, 106, 107], "exit": 26, "json": 26, "advent": 26, "routin": 26, "progress": [26, 107], "match": [26, 40, 47, 48, 49, 53, 54, 55, 67, 75, 107], "yield": 26, "beyond": 26, "answer": 26, "question": [26, 31], "carri": 26, "7707": 26, "kernel": [26, 27, 54], "post": 26, "experiment": [26, 40, 107, 108], "anova": 26, "fun": 26, "begin": 26, "consid": [26, 52], "realiti": 26, "degre": [26, 27], "random_st": 26, "uniform": [26, 27], "conclus": 26, "simplif": 26, "insignific": 26, "quit": 26, "put": [26, 27], "address": 26, "configspac": 26, "elabor": 26, "pimp": 26, "d0a14f3eb480f2a90008889f00041bdccc7b9265": 26, "plot_fanova_aggreg": 26, "f401": 26, "parameter_filt": 26, "sigmoid": [26, 27], "limit_per_task": 26, "limit_nr_task": 26, "n_tree": 26, "fanova_result": 26, "bottleneck": 26, "commun": [26, 31], "idx": 26, "performance_column": 26, "b": 26, "legaci": 26, "violat": 26, "embed": 26, "setups_ev": 26, "iterrow": 26, "decod": 26, "jsondecodeerror": 26, "compli": 26, "filter_kei": 26, "filter_valu": 26, "select_dtyp": 26, "parameter_nam": [26, 71], "pname": 26, "to_numpi": 26, "quantify_import": 26, "individu": [26, 101], "runtimeerror": 26, "crash": [26, 107], "constant": [26, 27], "varianc": 26, "skip": [26, 41, 42, 47, 48, 59, 67, 89, 90, 105], "nemenyi": 26, "reli": 26, "orang": 26, "orange3": 26, "reader": 26, "get_xticklabel": 26, "rotat": 26, "tight_layout": 26, "2018_kdd_rijn_exampl": [26, 29], "scalabl": [27, 107], "transfer": [27, 107], "valerio": [27, 107], "rodolph": 27, "jenatton": 27, "seeger": 27, "cedric": 27, "archambeau": 27, "7917": 27, "tabular": 27, "area": 27, "mean_squared_error": 27, "randomforestregressor": 27, "flow_typ": 27, "smaller": 27, "subsequ": 27, "fetch_evalu": 27, "run_ful": 27, "area_under_roc_curv": 27, "smallest": 27, "eval_df": 27, "34537": 27, "3485": 27, "3889": 27, "3891": 27, "3899": 27, "3950": 27, "9889": 27, "9914": 27, "9967": 27, "125923": 27, "145847": 27, "145857": 27, "145862": 27, "145872": 27, "145953": 27, "145972": 27, "145979": 27, "3896": 27, "5891": 27, "2702": 27, "create_table_from_evalu": 27, "run_count": 27, "iinfo": 27, "ground": [27, 107], "retain": 27, "eval_t": 27, "isin": 27, "colnam": 27, "booster": 27, "colsample_bylevel": 27, "colsample_bytre": 27, "eta": 27, "max_depth": 27, "min_child_weight": 27, "nround": 27, "subsampl": 27, "frac": 27, "shuffl": 27, "list_categorical_attribut": 27, "read": [27, 33, 108], "collat": 27, "4496": 27, "79191671899954": 27, "0277202381261179": 27, "421": 27, "8973478229798": 27, "polynomi": 27, "7190897828721": 27, "2832": 27, "141297656781024": 27, "00602325661939196": 27, "4448": 27, "4307583820024": 27, "169": 27, "408370330347": 27, "995838": 27, "905147": 27, "906592": 27, "713471": 27, "493572": 27, "primari": 27, "secondli": 27, "cat_col": 27, "num_col": 27, "num_imput": 27, "missing_valu": 27, "fill_valu": 27, "enc": 27, "singular": 27, "quick": [27, 108], "rmse": 27, "9303e": 27, "built": [27, 31, 101, 107], "trivial": 27, "action": [27, 107], "randomli": 27, "trajectori": 27, "auc": 27, "ve": 27, "exclus": 27, "random_sample_configur": 27, "num_sampl": 27, "000986": 27, "998": 27, "492437": 27, "000988": 27, "373845": 27, "radial": 27, "col_val": 27, "high": [27, 40, 108], "703": 27, "547463": 27, "124285": 27, "400": 27, "424860": 27, "220": 27, "168827": 27, "855083": 27, "939735": 27, "611": 27, "259417": 27, "669106": 27, "294": 27, "340486": 27, "662": [27, 107], "367022": 27, "220873": 27, "380": 27, "480008": 27, "203": 27, "968762": 27, "422637": 27, "227621": 27, "695785": 27, "940245": 27, "026111": 27, "996": 27, "652": [27, 107], "586571": 27, "636055": 27, "717232": 27, "997": 27, "775": 27, "505728": 27, "288518": 27, "884": [27, 107], "844300": 27, "165": 27, "529699": 27, "717633": 27, "145383": 27, "999": 27, "395075": 27, "826799": 27, "167333": 27, "pred": 27, "accumul": 27, "regret": 27, "predicted_auc": 27, "numb": 27, "722222222222214": 27, "826": [27, 29], "2018_neurips_perrone_exampl": [27, 29], "re": [28, 30, 60, 107, 108], "recent": [28, 30, 40, 41], "perron": [28, 29, 30, 107], "093": 29, "examples_40_pap": 29, "examples_python": 30, "examples_jupyt": 30, "maintain": [31, 53, 106], "pytorch": 31, "tensorflow": 31, "leverag": 31, "tap": 31, "popular": 31, "essenti": 31, "regardless": 31, "team": 31, "capac": 31, "templat": 31, "abl": 31, "inherit": 31, "overload": 31, "adequ": 31, "docstr": [31, 107], "onc": 31, "register_extens": 31, "lead": [31, 60], "rel": 31, "can_handle_flow": [31, 49, 53], "workbench": 31, "weka": 31, "deseri": [31, 53, 107], "typic": [31, 33, 49], "can_handle_model": [31, 49, 53], "adher": [31, 107], "serial": [31, 33, 53, 60, 107], "de": 31, "flow_to_model": [31, 49, 53], "inde": 31, "interplai": 31, "success": [31, 37, 56, 61, 83, 84, 102, 108], "unit": [31, 107], "seem": 31, "daunt": 31, "design": [31, 107], "invers": [31, 60], "preserv": 31, "tunabl": 31, "get_version_inform": [31, 49, 53], "tupl": [31, 33, 36, 48, 70, 93, 94, 95, 96, 98], "create_setup_str": [31, 49, 53], "No": 31, "soon": 31, "is_estim": [31, 49, 53], "seed_model": [31, 49, 53], "seed": [31, 49, 53, 69, 70], "_run_model_on_fold": 31, "just": [31, 108], "addition": 31, "obtain_parameter_valu": [31, 49, 53], "budget": 31, "etc": [31, 82, 108], "chosen": 31, "check_if_model_fit": [31, 49, 53], "instantiate_model_from_hpo_class": [31, 49, 53], "logic": [31, 107], "notimplementederror": 31, "stand": 31, "alon": 31, "shelf": 31, "repo": 31, "__init__": 31, "upstream": 31, "pr": 31, "happi": 31, "nominal_valu": 32, "number_missing_valu": [32, 42, 105], "k": [32, 72], "data_format": 33, "cache_format": [33, 40], "upload_d": [33, 54, 55], "update_com": [33, 36], "md5_checksum": 33, "data_fil": 33, "features_fil": 33, "qualities_fil": 33, "minio_url": 33, "parquet_fil": 33, "sparse_arff": 33, "feather": [33, 40, 107], "autogener": 33, "increment": 33, "hash": [33, 36], "everyon": 33, "my": 33, "friend": 33, "me": 33, "circl": [33, 107], "deriv": [33, 36, 38, 107], "explan": [33, 36, 108], "md5": [33, 54], "checksum": [33, 54, 107], "corrupt": [33, 107], "locat": [33, 54], "openmldatafeatur": 33, "minio": [33, 107], "bucket": [33, 107], "parquet": [33, 107], "include_row_id": 33, "include_ignore_attribut": 33, "csr_matrix": 33, "matric": 33, "mark": 33, "n_column": 33, "seri": [33, 93, 95, 96, 98, 107], "mask": 33, "get_features_by_typ": 33, "exclude_ignore_attribut": 33, "exclude_row_id_attribut": 33, "ontologi": 33, "adapt": 33, "open_in_brows": [33, 54, 60, 77, 78, 93, 94, 95, 96, 98, 99], "browser": [33, 54, 60, 77, 78, 93, 94, 95, 96, 98, 99], "push_tag": [33, 54, 60, 77, 78, 93, 94, 95, 96, 98, 99], "annot": [33, 54, 60, 77, 78, 93, 94, 95, 96, 98, 99], "attach": [33, 37, 54, 60, 77, 78, 79, 80, 93, 94, 95, 96, 98, 99, 107], "remove_tag": [33, 54, 60, 77, 78, 93, 94, 95, 96, 98, 99], "retrieve_class_label": 33, "classnam": 33, "classmethod": [33, 49, 53, 54, 60, 77, 78, 93, 94, 95, 96, 98, 99], "url_for_id": [33, 54, 60, 77, 78, 93, 94, 95, 96, 98, 99], "id_": [33, 54, 60, 77, 78, 93, 94, 95, 96, 98, 99], "n_featur": [34, 36], "attributes_arff": 34, "raise_error_if_not_exist": 35, "openmldataset": [36, 38, 40, 41, 93, 94, 95, 96, 98, 99], "discard": [36, 38], "authent": [38, 39], "fork": [39, 107], "distinct": 39, "intend": 39, "Not": 39, "error_if_multipl": 40, "download_qu": [40, 41, 103, 104, 107], "download_all_fil": [40, 107], "safe": 40, "disk": [40, 107], "earliest": 40, "exception_if_multipl": 40, "bewar": [40, 41], "notic": [40, 41, 107], "slower": [40, 41], "popul": [40, 41, 107], "minim": [40, 103, 104], "resid": [40, 108], "auxiliari": 40, "album": 40, "kwarg": [42, 59, 60, 67, 101, 105], "legal": [42, 44, 59, 67, 105], "data_vers": 42, "number_inst": [42, 105], "number_featur": [42, 105], "number_class": [42, 105], "everi": [42, 59, 89, 90, 105], "calcul": [42, 60, 69, 70, 89, 105, 108], "transit": 44, "upload_nam": 45, "auroc": 45, "recal": 45, "per_fold": [47, 48], "pair": [47, 48, 108], "asc": [47, 48], "openmlevalu": 47, "bootstrap": 49, "abstract": 49, "pars": [49, 53], "initialize_with_default": [49, 53], "strict_vers": [49, 53, 58], "instanti": [49, 53, 60, 76], "fail": [49, 53, 58, 107], "fulfil": [49, 53, 58], "openmltraceiter": [49, 53, 107], "explicit": [49, 53], "signatur": [49, 53], "mix": [49, 53], "unseed": [49, 53], "raise_if_no_extens": [50, 51], "get_extension_by_flow": 52, "subclass": 53, "baseestim": 53, "accept": [53, 60], "base_estim": 53, "randomst": 53, "subcompon": 53, "trim_flow_nam": 53, "long_nam": 53, "extra_trim_length": 53, "_outer": 53, "shorten": 53, "max_length": 53, "white": 53, "newlin": [53, 108], "trim": [53, 107], "short": [53, 107, 108], "produc": 53, "guarante": 53, "recurs": 53, "class_nam": 54, "custom_nam": [54, 55], "binary_url": 54, "binary_format": 54, "binary_md5": 54, "create_flow_from_model": 54, "ensur": 54, "fill": 54, "human": [54, 108], "subfunct": 54, "learner": 54, "adaboost": 54, "block": 54, "toolbox": 54, "plugin": 54, "natur": 54, "program": 54, "binari": 54, "Will": [54, 89, 90], "aren": 54, "correctli": [54, 107], "get_structur": 54, "key_item": 54, "sub": 54, "travers": 54, "fullnam": 54, "prefix": 54, "get_subflow": 54, "raise_error_if_exist": 54, "pyopenmlerror": 54, "self": 54, "flow1": 55, "flow2": 55, "ignore_parameter_values_on_older_children": 55, "ignore_parameter_valu": 55, "ignore_custom_name_if_non": 55, "check_descript": 55, "child": 55, "predat": 55, "parent": 55, "iff": [57, 76, 83, 84], "api_doc": 57, "get_flow_exists_name_vers": 57, "overview": 59, "output_fil": 60, "sample_evalu": 60, "task_evaluation_measur": 60, "predictions_url": 60, "run_detail": [60, 107], "untrain": 60, "openmltask": [60, 69, 70, 103, 104], "expect_model": 60, "folder": [60, 107], "thrown": 60, "get_metric_fn": 60, "sklearn_fn": 60, "run_data": 60, "pointer": 60, "num_fold": 60, "num_repeat": 60, "store_model": 60, "filesystem": 60, "empti": [60, 68, 107], "storag": [60, 107], "expens": 60, "often": [60, 108], "ignore_cach": 62, "overwrit": 62, "openmltrac": 63, "nr": 66, "slow": 66, "get_selected_iter": 66, "display_error": 67, "wasn": 68, "flow_tag": [69, 70], "add_local_measur": [69, 70], "wrap": 69, "statistical_infer": [69, 70], "supervised_learn": [69, 70], "throw": [69, 70], "creation": [69, 70, 77, 78], "asynchron": [69, 70], "treat": [69, 70], "synchron": [69, 70], "return_flow": 70, "input_id": 71, "full_nam": 71, "default_valu": 71, "datatyp": [71, 107], "unus": 71, "arbitrarili": 71, "upon": [72, 78, 82], "openmlsetup": [73, 75], "suite_id": [77, 80, 84, 86, 88, 92], "prepar": [77, 78, 107], "window_start": [77, 78], "write_access": [77, 78], "term": [79, 80, 85, 86], "openmlbenchmarksuit": [81, 88], "attach_to_suit": 81, "openmlstudi": [81, 82, 87], "attach_to_studi": 82, "detach": [85, 86], "unlink": [85, 86], "arg_for_backwards_compat": 87, "03731": 87, "older": 87, "openmlsuit": 88, "task_type_id": [93, 94, 95, 96, 98, 99], "data_set_id": [93, 94, 95, 96, 98, 99], "estimation_procedure_typ": [93, 94, 95, 96, 98, 99], "estimation_paramet": [93, 94, 95, 96, 98, 99], "data_splits_url": [93, 94, 95, 96, 98, 99], "download_split": [93, 94, 95, 96, 98, 99], "openmlsplit": [93, 94, 95, 96, 98, 99], "spmatrix": [93, 94, 95, 96, 98], "get_x": 94, "openmlregressiontask": 101, "openmllearningcurvetask": 101, "openmlclusteringtask": 101, "moment": 101, "mandatori": 101, "data_tag": 105, "welcom": [106, 107], "german": 106, "card": 106, "changelog": 106, "contact": 106, "blog": 106, "twitter": 106, "posit": 106, "help": 106, "1911": 106, "02490": 106, "bibtex": 106, "arxiv19a": 106, "arlind": 106, "kadra": 106, "pieter": 106, "gijsber": 106, "neeratyoi": 106, "mallik": 106, "sahithya": 106, "ravi": 106, "andrea": 106, "m\u00fcller": 106, "1028": 107, "delete_dataset": 107, "1144": 107, "1180": 107, "1201": 107, "dataclass": 107, "1197": 107, "559": 107, "1131": 107, "1198": 107, "1216": 107, "maint": 107, "1155": 107, "dependabot": 107, "1199": 107, "pre": 107, "commit": 107, "flake8": 107, "gitlab": 107, "1215": 107, "latest": [107, 108], "1218": 107, "ubuntu": 107, "1221": 107, "1212": 107, "1206": 107, "1211": 107, "1030": 107, "hook": 107, "1058": 107, "1100": 107, "nonetyp": 107, "1110": 107, "create_suit": 107, "1147": 107, "1184": 107, "resolv": 107, "proxi": 107, "turn": 107, "no_proxi": 107, "1088": 107, "appveyor": 107, "1104": 107, "outdat": 107, "1103": 107, "1188": 107, "retry_polici": [107, 108], "frequenc": 107, "attempt": [107, 108], "retri": [107, 108], "1075": 107, "docker": 107, "imag": 107, "push": 107, "isol": 107, "broken": 107, "1061": 107, "dedic": 107, "brach": 107, "branch": 107, "895": 107, "1038": 107, "parallel": 107, "webpag": 107, "1051": 107, "besid": 107, "ship": [107, 108], "1035": 107, "command": [107, 108], "1042": 107, "rare": 107, "concurr": 107, "caus": 107, "worker": 107, "pool": 107, "964": 107, "982": 107, "989": 107, "1009": 107, "1016": 107, "1022": 107, "minimum": 107, "accur": 107, "1023": 107, "admin": 107, "topic": 107, "1029": 107, "1031": 107, "unsupport": 107, "basesearchcv": 107, "671": 107, "check_datasets_act": 107, "modifi": 107, "891": 107, "255": 107, "uint8": 107, "975": 107, "988": 107, "long": 107, "stabil": 107, "refactor": 107, "compress": 107, "flaki": 107, "decor": 107, "883": 107, "906": 107, "972": 107, "mechan": 107, "encount": 107, "1004": 107, "1013": 107, "1037": 107, "753": 107, "777": 107, "888": 107, "929": 107, "943": 107, "passthrough": 107, "879": 107, "layer_s": 107, "945": 107, "pep": 107, "561": 107, "complianc": 107, "660": 107, "nonexist": 107, "954": 107, "todo": 107, "960": 107, "873": 107, "incorrect": 107, "885": 107, "logger": 107, "890": 107, "371": 107, "10_000": 107, "767": 107, "781": 107, "836": 107, "865": 107, "bundl": 107, "uri": 107, "916": 107, "920": 107, "921": 107, "hangl": 107, "925": 107, "928": 107, "restructur": 107, "pep562": 107, "compliant": 107, "951": 107, "enum": 107, "857": 107, "list_run": 107, "862": 107, "175": 107, "744": 107, "783": 107, "790": 107, "792": 107, "861": 107, "778": 107, "instruct": 107, "785": 107, "788": 107, "791": 107, "808": 107, "810": 107, "832": 107, "834": 107, "loss": 107, "305": 107, "old": 107, "streamhandl": 107, "root": 107, "758": 107, "779": 107, "782": 107, "820": 107, "__repr__": 107, "796": 107, "811": 107, "828": 107, "831": 107, "move": 107, "850": 107, "447": 107, "persist": 107, "589": 107, "successfulli": 107, "639": 107, "719": 107, "687": 107, "412": 107, "clearer": 107, "560": 107, "620": 107, "628": 107, "632": 107, "649": 107, "607": 107, "647": 107, "673": 107, "548": 107, "646": 107, "676": 107, "sparsedatafram": 107, "672": 107, "661": 107, "644": 107, "lazili": 107, "659": 107, "lazi": 107, "516": 107, "680": 107, "resp": 107, "653": 107, "304": 107, "636": 107, "651": 107, "693": 107, "liac": 107, "678": 107, "scheme": 107, "681": 107, "688": 107, "691": 107, "draft": 107, "692": 107, "python2": 107, "fewer": 107, "regular": 107, "655": 107, "prefer": 107, "667": 107, "typeerror": 107, "668": 107, "hint": 107, "677": 107, "behavior": 107, "mypi": 107, "629": 107, "630": 107, "pep8": 107, "440": 107, "583": 107, "523": 107, "459": 107, "enhanc": 107, "564": 107, "618": 107, "538": 107, "464": 107, "580": 107, "properli": 107, "571": 107, "504": 107, "hierarch": 107, "569": 107, "strict": 107, "431": 107, "540": 107, "doubl": 107, "613": 107, "482": 107, "cleaner": 107, "557": 107, "527": 107, "nose": 107, "pytest": 107, "travi": 107, "462": 107, "477": 107, "479": 107, "2nd": 107, "pyopenml": 107, "pagin": 107, "xdgb": 108, "react": 108, "unavail": 108, "experienc": 108, "reconnect": 108, "quickli": 108, "increas": 108, "interact": 108, "fashion": 108, "robot": 108, "connection_n_retri": 108, "shareabl": 108, "examin": 108, "think": 108, "protocol": 108, "solv": 108, "disjoint": 108, "simpler": 108, "runabl": 108}, "objects": {"openml": [[0, 0, 0, "-", "datasets"], [0, 0, 0, "-", "evaluations"], [0, 0, 0, "-", "extensions"], [0, 0, 0, "-", "flows"], [0, 0, 0, "-", "runs"], [0, 0, 0, "-", "setups"], [0, 0, 0, "-", "study"], [0, 0, 0, "-", "tasks"]], "openml.datasets": [[32, 1, 1, "", "OpenMLDataFeature"], [33, 1, 1, "", "OpenMLDataset"], [34, 4, 1, "", "attributes_arff_from_df"], [35, 4, 1, "", "check_datasets_active"], [36, 4, 1, "", "create_dataset"], [37, 4, 1, "", "delete_dataset"], [38, 4, 1, "", "edit_dataset"], [39, 4, 1, "", "fork_dataset"], [40, 4, 1, "", "get_dataset"], [41, 4, 1, "", "get_datasets"], [42, 4, 1, "", "list_datasets"], [43, 4, 1, "", "list_qualities"], [44, 4, 1, "", "status_update"]], "openml.datasets.OpenMLDataset": [[33, 2, 1, "", "get_data"], [33, 2, 1, "", "get_features_by_type"], [33, 3, 1, "", "id"], [33, 2, 1, "", "open_in_browser"], [33, 3, 1, "", "openml_url"], [33, 2, 1, "", "push_tag"], [33, 2, 1, "", "remove_tag"], [33, 2, 1, "", "retrieve_class_labels"], [33, 2, 1, "", "url_for_id"]], "openml.evaluations": [[45, 1, 1, "", "OpenMLEvaluation"], [46, 4, 1, "", "list_evaluation_measures"], [47, 4, 1, "", "list_evaluations"], [48, 4, 1, "", "list_evaluations_setups"]], "openml.extensions": [[49, 1, 1, "", "Extension"], [50, 4, 1, "", "get_extension_by_flow"], [51, 4, 1, "", "get_extension_by_model"], [52, 4, 1, "", "register_extension"]], "openml.extensions.Extension": [[49, 2, 1, "", "can_handle_flow"], [49, 2, 1, "", "can_handle_model"], [49, 2, 1, "", "check_if_model_fitted"], [49, 2, 1, "", "create_setup_string"], [49, 2, 1, "", "flow_to_model"], [49, 2, 1, "", "get_version_information"], [49, 2, 1, "", "instantiate_model_from_hpo_class"], [49, 2, 1, "", "is_estimator"], [49, 2, 1, "", "model_to_flow"], [49, 2, 1, "", "obtain_parameter_values"], [49, 2, 1, "", "seed_model"]], "openml.extensions.sklearn": [[53, 1, 1, "", "SklearnExtension"]], "openml.extensions.sklearn.SklearnExtension": [[53, 2, 1, "", "can_handle_flow"], [53, 2, 1, "", "can_handle_model"], [53, 2, 1, "", "check_if_model_fitted"], [53, 2, 1, "", "create_setup_string"], [53, 2, 1, "", "flow_to_model"], [53, 2, 1, "", "get_version_information"], [53, 2, 1, "", "instantiate_model_from_hpo_class"], [53, 2, 1, "", "is_estimator"], [53, 2, 1, "", "model_to_flow"], [53, 2, 1, "", "obtain_parameter_values"], [53, 2, 1, "", "seed_model"], [53, 2, 1, "", "trim_flow_name"]], "openml.flows": [[54, 1, 1, "", "OpenMLFlow"], [55, 4, 1, "", "assert_flows_equal"], [56, 4, 1, "", "delete_flow"], [57, 4, 1, "", "flow_exists"], [58, 4, 1, "", "get_flow"], [59, 4, 1, "", "list_flows"]], "openml.flows.OpenMLFlow": [[54, 2, 1, "", "get_structure"], [54, 2, 1, "", "get_subflow"], [54, 3, 1, "", "id"], [54, 2, 1, "", "open_in_browser"], [54, 3, 1, "", "openml_url"], [54, 2, 1, "", "publish"], [54, 2, 1, "", "push_tag"], [54, 2, 1, "", "remove_tag"], [54, 2, 1, "", "url_for_id"]], "openml.runs": [[60, 1, 1, "", "OpenMLRun"], [61, 4, 1, "", "delete_run"], [62, 4, 1, "", "get_run"], [63, 4, 1, "", "get_run_trace"], [64, 4, 1, "", "get_runs"], [65, 4, 1, "", "initialize_model_from_run"], [66, 4, 1, "", "initialize_model_from_trace"], [67, 4, 1, "", "list_runs"], [68, 4, 1, "", "run_exists"], [69, 4, 1, "", "run_flow_on_task"], [70, 4, 1, "", "run_model_on_task"]], "openml.runs.OpenMLRun": [[60, 2, 1, "", "from_filesystem"], [60, 2, 1, "", "get_metric_fn"], [60, 3, 1, "", "id"], [60, 2, 1, "", "open_in_browser"], [60, 3, 1, "", "openml_url"], [60, 3, 1, "", "predictions"], [60, 2, 1, "", "push_tag"], [60, 2, 1, "", "remove_tag"], [60, 2, 1, "", "to_filesystem"], [60, 2, 1, "", "url_for_id"]], "openml.setups": [[71, 1, 1, "", "OpenMLParameter"], [72, 1, 1, "", "OpenMLSetup"], [73, 4, 1, "", "get_setup"], [74, 4, 1, "", "initialize_model"], [75, 4, 1, "", "list_setups"], [76, 4, 1, "", "setup_exists"]], "openml.study": [[77, 1, 1, "", "OpenMLBenchmarkSuite"], [78, 1, 1, "", "OpenMLStudy"], [79, 4, 1, "", "attach_to_study"], [80, 4, 1, "", "attach_to_suite"], [81, 4, 1, "", "create_benchmark_suite"], [82, 4, 1, "", "create_study"], [83, 4, 1, "", "delete_study"], [84, 4, 1, "", "delete_suite"], [85, 4, 1, "", "detach_from_study"], [86, 4, 1, "", "detach_from_suite"], [87, 4, 1, "", "get_study"], [88, 4, 1, "", "get_suite"], [89, 4, 1, "", "list_studies"], [90, 4, 1, "", "list_suites"], [91, 4, 1, "", "update_study_status"], [92, 4, 1, "", "update_suite_status"]], "openml.study.OpenMLBenchmarkSuite": [[77, 3, 1, "", "id"], [77, 2, 1, "", "open_in_browser"], [77, 3, 1, "", "openml_url"], [77, 2, 1, "", "push_tag"], [77, 2, 1, "", "remove_tag"], [77, 2, 1, "", "url_for_id"]], "openml.study.OpenMLStudy": [[78, 3, 1, "", "id"], [78, 2, 1, "", "open_in_browser"], [78, 3, 1, "", "openml_url"], [78, 2, 1, "", "push_tag"], [78, 2, 1, "", "remove_tag"], [78, 2, 1, "", "url_for_id"]], "openml.tasks": [[93, 1, 1, "", "OpenMLClassificationTask"], [94, 1, 1, "", "OpenMLClusteringTask"], [95, 1, 1, "", "OpenMLLearningCurveTask"], [96, 1, 1, "", "OpenMLRegressionTask"], [97, 1, 1, "", "OpenMLSplit"], [98, 1, 1, "", "OpenMLSupervisedTask"], [99, 1, 1, "", "OpenMLTask"], [100, 1, 1, "", "TaskType"], [101, 4, 1, "", "create_task"], [102, 4, 1, "", "delete_task"], [103, 4, 1, "", "get_task"], [104, 4, 1, "", "get_tasks"], [105, 4, 1, "", "list_tasks"]], "openml.tasks.OpenMLClassificationTask": [[93, 2, 1, "", "download_split"], [93, 2, 1, "", "get_X_and_y"], [93, 2, 1, "", "get_dataset"], [93, 3, 1, "", "id"], [93, 2, 1, "", "open_in_browser"], [93, 3, 1, "", "openml_url"], [93, 2, 1, "", "push_tag"], [93, 2, 1, "", "remove_tag"], [93, 2, 1, "", "url_for_id"]], "openml.tasks.OpenMLClusteringTask": [[94, 2, 1, "", "download_split"], [94, 2, 1, "", "get_X"], [94, 2, 1, "", "get_dataset"], [94, 3, 1, "", "id"], [94, 2, 1, "", "open_in_browser"], [94, 3, 1, "", "openml_url"], [94, 2, 1, "", "push_tag"], [94, 2, 1, "", "remove_tag"], [94, 2, 1, "", "url_for_id"]], "openml.tasks.OpenMLLearningCurveTask": [[95, 2, 1, "", "download_split"], [95, 2, 1, "", "get_X_and_y"], [95, 2, 1, "", "get_dataset"], [95, 3, 1, "", "id"], [95, 2, 1, "", "open_in_browser"], [95, 3, 1, "", "openml_url"], [95, 2, 1, "", "push_tag"], [95, 2, 1, "", "remove_tag"], [95, 2, 1, "", "url_for_id"]], "openml.tasks.OpenMLRegressionTask": [[96, 2, 1, "", "download_split"], [96, 2, 1, "", "get_X_and_y"], [96, 2, 1, "", "get_dataset"], [96, 3, 1, "", "id"], [96, 2, 1, "", "open_in_browser"], [96, 3, 1, "", "openml_url"], [96, 2, 1, "", "push_tag"], [96, 2, 1, "", "remove_tag"], [96, 2, 1, "", "url_for_id"]], "openml.tasks.OpenMLSupervisedTask": [[98, 2, 1, "", "download_split"], [98, 2, 1, "", "get_X_and_y"], [98, 2, 1, "", "get_dataset"], [98, 3, 1, "", "id"], [98, 2, 1, "", "open_in_browser"], [98, 3, 1, "", "openml_url"], [98, 2, 1, "", "push_tag"], [98, 2, 1, "", "remove_tag"], [98, 2, 1, "", "url_for_id"]], "openml.tasks.OpenMLTask": [[99, 2, 1, "", "download_split"], [99, 2, 1, "", "get_dataset"], [99, 3, 1, "", "id"], [99, 2, 1, "", "open_in_browser"], [99, 3, 1, "", "openml_url"], [99, 2, 1, "", "push_tag"], [99, 2, 1, "", "remove_tag"], [99, 2, 1, "", "url_for_id"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"api": [0, 31], "modul": 0, "openml": [0, 7, 13, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108], "dataset": [0, 5, 9, 11, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 108], "class": 0, "function": [0, 17], "evalu": [0, 12, 27, 45, 46, 47, 48], "flow": [0, 6, 10, 12, 14, 15, 18, 54, 55, 56, 57, 58, 59], "run": [0, 6, 13, 15, 18, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 108], "setup": [0, 3, 18, 71, 72, 73, 74, 75, 76], "studi": [0, 20, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92], "task": [0, 6, 12, 13, 15, 18, 22, 23, 27, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108], "extens": [0, 31, 49, 50, 51, 52, 53], "contribut": [1, 106], "introductori": [2, 30], "exampl": [2, 3, 7, 16, 23, 30, 106], "introduct": 3, "tutori": [3, 9], "instal": [3, 108], "authent": 3, "cach": 3, "simpl": 3, "comput": [4, 19, 29], "time": [4, 19, 29], "list": [5, 9, 12, 20, 21, 23, 31], "download": [5, 7, 11, 18, 20, 21, 23], "load": 5, "visual": 5, "train": [6, 15], "machin": [6, 15, 31, 108], "learn": [6, 13, 15, 31, 108], "model": [6, 13, 15, 27], "publish": 6, "benchmark": [7, 13, 20, 21], "suit": [7, 21], "cc18": 7, "further": [7, 106], "log": 8, "upload": [9, 15, 20, 21, 108], "i": 9, "numpi": 9, "arrai": 9, "prepar": [9, 13], "creat": [9, 10, 11, 18, 23, 27], "object": 9, "panda": [9, 17], "datafram": 9, "spars": 9, "matrix": 9, "column": 9, "us": [10, 18], "custom": 10, "1": [10, 11, 13, 14, 17, 18, 107], "defin": 10, "2": [10, 11, 13, 14, 17, 18, 107], "exercis": [11, 23], "0": [11, 107], "edit": 11, "fork": 11, "fetch": [12, 27], "view": 12, "sampl": 12, "obtain": [12, 14, 17, 18], "all": 12, "cdf": 12, "metric": 12, "chosen": 12, "compar": 12, "top": 12, "10": [12, 107], "perform": 12, "hyperparamet": [12, 17], "set": [12, 108], "measur": 13, "runtim": 13, "scikit": 13, "case": 13, "random": 13, "forest": 13, "an": 13, "parallel": 13, "3": [13, 18, 107], "hpo": 13, "algorithm": [13, 108], "4": [13, 107], "doesn": 13, "t": 13, "5": 13, "don": 13, "releas": 13, "gil": 13, "summmari": 13, "id": 14, "given": 14, "classifi": 14, "its": 14, "name": 14, "easili": 15, "explor": 15, "It": 15, "also": 15, "work": [15, 108], "pipelin": [15, 27], "offlin": 15, "later": 15, "challeng": 15, "In": [16, 30], "depth": [16, 30], "plot": 17, "surfac": 17, "first": 17, "step": 17, "data": [17, 27], "option": 17, "via": 17, "helper": 17, "matplotlib": 17, "solv": 18, "same": 18, "again": 18, "we": 18, "verifi": 18, "result": [18, 108], "ar": 18, "exactli": 18, "retriev": 22, "split": 22, "feurer": 24, "et": [24, 25, 27], "al": [24, 25, 27], "2015": 24, "public": [24, 25, 26, 27], "strang": 25, "2018": [25, 26, 27], "van": 26, "rijn": 26, "hutter": 26, "perron": 27, "from": 27, "pre": 27, "process": 27, "build": 27, "surrog": 27, "": 27, "usag": [28, 30], "research": [28, 30], "paper": [28, 30], "galleri": 30, "connect": 31, "new": 31, "librari": 31, "content": [31, 106], "interfac": 31, "python": [31, 106, 108], "host": 31, "recommend": 31, "openmldatafeatur": 32, "openmldataset": 33, "attributes_arff_from_df": 34, "check_datasets_act": 35, "create_dataset": 36, "delete_dataset": 37, "edit_dataset": 38, "fork_dataset": 39, "get_dataset": [40, 41], "list_dataset": 42, "list_qual": 43, "status_upd": 44, "openmlevalu": 45, "list_evaluation_measur": 46, "list_evalu": 47, "list_evaluations_setup": 48, "get_extension_by_flow": 50, "get_extension_by_model": 51, "register_extens": 52, "sklearn": 53, "sklearnextens": 53, "openmlflow": 54, "assert_flows_equ": 55, "delete_flow": 56, "flow_exist": 57, "get_flow": 58, "list_flow": 59, "openmlrun": 60, "delete_run": 61, "get_run": [62, 64], "get_run_trac": 63, "initialize_model_from_run": 65, "initialize_model_from_trac": 66, "list_run": 67, "run_exist": 68, "run_flow_on_task": 69, "run_model_on_task": 70, "openmlparamet": 71, "openmlsetup": 72, "get_setup": 73, "initialize_model": 74, "list_setup": 75, "setup_exist": 76, "openmlbenchmarksuit": 77, "openmlstudi": 78, "attach_to_studi": 79, "attach_to_suit": 80, "create_benchmark_suit": 81, "create_studi": 82, "delete_studi": 83, "delete_suit": 84, "detach_from_studi": 85, "detach_from_suit": 86, "get_studi": 87, "get_suit": 88, "list_studi": 89, "list_suit": 90, "update_study_statu": 91, "update_suite_statu": 92, "openmlclassificationtask": 93, "openmlclusteringtask": 94, "openmllearningcurvetask": 95, "openmlregressiontask": 96, "openmlsplit": 97, "openmlsupervisedtask": 98, "openmltask": 99, "tasktyp": 100, "create_task": 101, "delete_task": 102, "get_task": [103, 104], "list_task": 105, "how": 106, "get": 106, "inform": 106, "cite": 106, "changelog": 107, "13": 107, "12": 107, "11": 107, "9": 107, "8": 107, "7": 107, "prior": 107, "user": 108, "guid": 108, "up": 108, "configur": 108, "docker": 108, "kei": 108, "concept": 108, "extend": 108}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"API": [[0, "api"], [31, "api"]], "Modules": [[0, "modules"]], "openml.datasets": [[0, "module-openml.datasets"]], "Dataset Classes": [[0, "dataset-classes"]], "Dataset Functions": [[0, "dataset-functions"]], "openml.evaluations": [[0, "module-openml.evaluations"]], "Evaluations Classes": [[0, "evaluations-classes"]], "Evaluations Functions": [[0, "evaluations-functions"]], "openml.flows: Flow Functions": [[0, "module-openml.flows"]], "Flow Classes": [[0, "flow-classes"]], "Flow Functions": [[0, "flow-functions"]], "openml.runs: Run Functions": [[0, "module-openml.runs"]], "Run Classes": [[0, "run-classes"]], "Run Functions": [[0, "run-functions"]], "openml.setups: Setup Functions": [[0, "module-openml.setups"]], "Setup Classes": [[0, "setup-classes"]], "Setup Functions": [[0, "setup-functions"]], "openml.study: Study Functions": [[0, "module-openml.study"]], "Study Classes": [[0, "study-classes"]], "Study Functions": [[0, "study-functions"]], "openml.tasks: Task Functions": [[0, "module-openml.tasks"]], "Task Classes": [[0, "task-classes"]], "Task Functions": [[0, "task-functions"]], "Extensions": [[0, "module-openml.extensions"], [31, "extensions"]], "Extension Classes": [[0, "extension-classes"]], "Extension Functions": [[0, "extension-functions"]], "Contributing": [[1, "contributing"], [106, "contributing"]], "Introductory Examples": [[2, "introductory-examples"], [30, "introductory-examples"]], "Introduction tutorial & Setup": [[3, "introduction-tutorial-setup"]], "Installation": [[3, "installation"]], "Authentication": [[3, "authentication"]], "Caching": [[3, "caching"]], "Simple Example": [[3, "simple-example"]], "Computation times": [[4, "computation-times"], [19, "computation-times"], [29, "computation-times"]], "Datasets": [[5, "datasets"], [11, "datasets"], [108, "datasets"]], "List datasets": [[5, "list-datasets"]], "Download a dataset": [[5, "download-a-dataset"]], "Load a dataset": [[5, "load-a-dataset"]], "Visualize the dataset": [[5, "visualize-the-dataset"]], "Flows and Runs": [[6, "flows-and-runs"], [15, "flows-and-runs"]], "Train a machine learning model": [[6, "train-a-machine-learning-model"]], "Running a model on a task": [[6, "running-a-model-on-a-task"]], "Publishing the run": [[6, "publishing-the-run"]], "Benchmark suites": [[7, "benchmark-suites"], [21, "benchmark-suites"]], "OpenML-CC18": [[7, "openml-cc18"]], "Downloading benchmark suites": [[7, "downloading-benchmark-suites"]], "Further examples": [[7, "further-examples"]], "Logging": [[8, "logging"]], "Dataset upload tutorial": [[9, "dataset-upload-tutorial"]], "Dataset is a numpy array": [[9, "dataset-is-a-numpy-array"]], "Prepare dataset": [[9, "prepare-dataset"]], "Create the dataset object": [[9, "create-the-dataset-object"]], "Dataset is a list": [[9, "dataset-is-a-list"]], "Dataset is a pandas DataFrame": [[9, "dataset-is-a-pandas-dataframe"]], "Dataset is a sparse matrix": [[9, "dataset-is-a-sparse-matrix"]], "Dataset is a pandas dataframe with sparse columns": [[9, "dataset-is-a-pandas-dataframe-with-sparse-columns"]], "Creating and Using a Custom Flow": [[10, "creating-and-using-a-custom-flow"]], "1. Defining the flow": [[10, "defining-the-flow"]], "2. Using the flow": [[10, "using-the-flow"]], "Exercise 0": [[11, "exercise-0"]], "Exercise 1": [[11, "exercise-1"]], "Download datasets": [[11, "download-datasets"]], "Exercise 2": [[11, "exercise-2"]], "Edit a created dataset": [[11, "edit-a-created-dataset"]], "Fork dataset": [[11, "fork-dataset"]], "Fetching Evaluations": [[12, "fetching-evaluations"]], "Listing evaluations": [[12, "listing-evaluations"]], "Viewing a sample task": [[12, "viewing-a-sample-task"]], "Obtaining all the evaluations for the task": [[12, "obtaining-all-the-evaluations-for-the-task"]], "Obtaining CDF of metric for chosen task": [[12, "obtaining-cdf-of-metric-for-chosen-task"]], "Comparing top 10 performing flows": [[12, "comparing-top-10-performing-flows"]], "Obtaining evaluations with hyperparameter settings": [[12, "obtaining-evaluations-with-hyperparameter-settings"]], "Measuring runtimes for Scikit-learn models": [[13, "measuring-runtimes-for-scikit-learn-models"]], "Preparing tasks and scikit-learn models": [[13, "preparing-tasks-and-scikit-learn-models"]], "Case 1: Running a Random Forest model on an OpenML task": [[13, "case-1-running-a-random-forest-model-on-an-openml-task"]], "Case 2: Running Scikit-learn model on an OpenML task in parallel": [[13, "case-2-running-scikit-learn-model-on-an-openml-task-in-parallel"]], "Case 3: Running and benchmarking HPO algorithms with their runtimes": [[13, "case-3-running-and-benchmarking-hpo-algorithms-with-their-runtimes"]], "Case 4: Running models that scikit-learn doesn\u2019t parallelize": [[13, "case-4-running-models-that-scikit-learn-doesn-t-parallelize"]], "Case 5: Running Scikit-learn models that don\u2019t release GIL": [[13, "case-5-running-scikit-learn-models-that-don-t-release-gil"]], "Summmary": [[13, "summmary"]], "Obtaining Flow IDs": [[14, "obtaining-flow-ids"]], "1. Obtaining a flow given a classifier": [[14, "obtaining-a-flow-given-a-classifier"]], "2. Obtaining a flow given its name": [[14, "obtaining-a-flow-given-its-name"]], "Train machine learning models": [[15, "train-machine-learning-models"]], "Runs: Easily explore models": [[15, "runs-easily-explore-models"]], "It also works with pipelines": [[15, "it-also-works-with-pipelines"]], "Running flows on tasks offline for later upload": [[15, "running-flows-on-tasks-offline-for-later-upload"]], "Challenge": [[15, "challenge"]], "In-Depth Examples": [[16, "in-depth-examples"], [30, "in-depth-examples"]], "Plotting hyperparameter surfaces": [[17, "plotting-hyperparameter-surfaces"]], "First step - obtaining the data": [[17, "first-step-obtaining-the-data"]], "Option 1 - plotting via the pandas helper functions": [[17, "option-1-plotting-via-the-pandas-helper-functions"]], "Option 2 - plotting via matplotlib": [[17, "option-2-plotting-via-matplotlib"]], "Run Setup": [[18, "run-setup"]], "1) Create a flow and use it to solve a task": [[18, "create-a-flow-and-use-it-to-solve-a-task"]], "2) Download the flow and solve the same task again.": [[18, "download-the-flow-and-solve-the-same-task-again"]], "3) We will verify that the obtained results are exactly the same.": [[18, "we-will-verify-that-the-obtained-results-are-exactly-the-same"]], "Benchmark studies": [[20, "benchmark-studies"]], "Listing studies": [[20, "listing-studies"]], "Downloading studies": [[20, "downloading-studies"]], "Uploading studies": [[20, "uploading-studies"]], "Listing suites": [[21, "listing-suites"]], "Downloading suites": [[21, "downloading-suites"]], "Uploading suites": [[21, "uploading-suites"]], "Tasks: retrieving splits": [[22, "tasks-retrieving-splits"]], "Tasks": [[23, "tasks"]], "Listing tasks": [[23, "listing-tasks"]], "Exercise": [[23, "exercise"]], "Downloading tasks": [[23, "downloading-tasks"]], "Creating tasks": [[23, "creating-tasks"]], "Example": [[23, "example"], [106, "example"]], "Feurer et al. (2015)": [[24, "feurer-et-al-2015"]], "Publication": [[24, "publication"], [25, "publication"], [26, "publication"], [27, "publication"]], "Strang et al. (2018)": [[25, "strang-et-al-2018"]], "van Rijn and Hutter (2018)": [[26, "van-rijn-and-hutter-2018"]], "Perrone et al. (2018)": [[27, "perrone-et-al-2018"]], "Fetching the data from OpenML": [[27, "fetching-the-data-from-openml"]], "Creating pre-processing and modelling pipelines": [[27, "creating-pre-processing-and-modelling-pipelines"]], "Building a surrogate model on a task\u2019s evaluation": [[27, "building-a-surrogate-model-on-a-task-s-evaluation"]], "Evaluating the surrogate model": [[27, "evaluating-the-surrogate-model"]], "Usage in research papers": [[28, "usage-in-research-papers"], [30, "usage-in-research-papers"]], "Examples Gallery": [[30, "examples-gallery"]], "List of extensions": [[31, "list-of-extensions"]], "Connecting new machine learning libraries": [[31, "connecting-new-machine-learning-libraries"]], "Content of the Library": [[31, "content-of-the-library"]], "Interfacing with OpenML-Python": [[31, "interfacing-with-openml-python"]], "Hosting the library": [[31, "hosting-the-library"]], "Recommended": [[31, "recommended"]], "openml.datasets.OpenMLDataFeature": [[32, "openml-datasets-openmldatafeature"]], "openml.datasets.OpenMLDataset": [[33, "openml-datasets-openmldataset"]], "openml.datasets.attributes_arff_from_df": [[34, "openml-datasets-attributes-arff-from-df"]], "openml.datasets.check_datasets_active": [[35, "openml-datasets-check-datasets-active"]], "openml.datasets.create_dataset": [[36, "openml-datasets-create-dataset"]], "openml.datasets.delete_dataset": [[37, "openml-datasets-delete-dataset"]], "openml.datasets.edit_dataset": [[38, "openml-datasets-edit-dataset"]], "openml.datasets.fork_dataset": [[39, "openml-datasets-fork-dataset"]], "openml.datasets.get_dataset": [[40, "openml-datasets-get-dataset"]], "openml.datasets.get_datasets": [[41, "openml-datasets-get-datasets"]], "openml.datasets.list_datasets": [[42, "openml-datasets-list-datasets"]], "openml.datasets.list_qualities": [[43, "openml-datasets-list-qualities"]], "openml.datasets.status_update": [[44, "openml-datasets-status-update"]], "openml.evaluations.OpenMLEvaluation": [[45, "openml-evaluations-openmlevaluation"]], "openml.evaluations.list_evaluation_measures": [[46, "openml-evaluations-list-evaluation-measures"]], "openml.evaluations.list_evaluations": [[47, "openml-evaluations-list-evaluations"]], "openml.evaluations.list_evaluations_setups": [[48, "openml-evaluations-list-evaluations-setups"]], "openml.extensions.Extension": [[49, "openml-extensions-extension"]], "openml.extensions.get_extension_by_flow": [[50, "openml-extensions-get-extension-by-flow"]], "openml.extensions.get_extension_by_model": [[51, "openml-extensions-get-extension-by-model"]], "openml.extensions.register_extension": [[52, "openml-extensions-register-extension"]], "openml.extensions.sklearn.SklearnExtension": [[53, "openml-extensions-sklearn-sklearnextension"]], "openml.flows.OpenMLFlow": [[54, "openml-flows-openmlflow"]], "openml.flows.assert_flows_equal": [[55, "openml-flows-assert-flows-equal"]], "openml.flows.delete_flow": [[56, "openml-flows-delete-flow"]], "openml.flows.flow_exists": [[57, "openml-flows-flow-exists"]], "openml.flows.get_flow": [[58, "openml-flows-get-flow"]], "openml.flows.list_flows": [[59, "openml-flows-list-flows"]], "openml.runs.OpenMLRun": [[60, "openml-runs-openmlrun"]], "openml.runs.delete_run": [[61, "openml-runs-delete-run"]], "openml.runs.get_run": [[62, "openml-runs-get-run"]], "openml.runs.get_run_trace": [[63, "openml-runs-get-run-trace"]], "openml.runs.get_runs": [[64, "openml-runs-get-runs"]], "openml.runs.initialize_model_from_run": [[65, "openml-runs-initialize-model-from-run"]], "openml.runs.initialize_model_from_trace": [[66, "openml-runs-initialize-model-from-trace"]], "openml.runs.list_runs": [[67, "openml-runs-list-runs"]], "openml.runs.run_exists": [[68, "openml-runs-run-exists"]], "openml.runs.run_flow_on_task": [[69, "openml-runs-run-flow-on-task"]], "openml.runs.run_model_on_task": [[70, "openml-runs-run-model-on-task"]], "openml.setups.OpenMLParameter": [[71, "openml-setups-openmlparameter"]], "openml.setups.OpenMLSetup": [[72, "openml-setups-openmlsetup"]], "openml.setups.get_setup": [[73, "openml-setups-get-setup"]], "openml.setups.initialize_model": [[74, "openml-setups-initialize-model"]], "openml.setups.list_setups": [[75, "openml-setups-list-setups"]], "openml.setups.setup_exists": [[76, "openml-setups-setup-exists"]], "openml.study.OpenMLBenchmarkSuite": [[77, "openml-study-openmlbenchmarksuite"]], "openml.study.OpenMLStudy": [[78, "openml-study-openmlstudy"]], "openml.study.attach_to_study": [[79, "openml-study-attach-to-study"]], "openml.study.attach_to_suite": [[80, "openml-study-attach-to-suite"]], "openml.study.create_benchmark_suite": [[81, "openml-study-create-benchmark-suite"]], "openml.study.create_study": [[82, "openml-study-create-study"]], "openml.study.delete_study": [[83, "openml-study-delete-study"]], "openml.study.delete_suite": [[84, "openml-study-delete-suite"]], "openml.study.detach_from_study": [[85, "openml-study-detach-from-study"]], "openml.study.detach_from_suite": [[86, "openml-study-detach-from-suite"]], "openml.study.get_study": [[87, "openml-study-get-study"]], "openml.study.get_suite": [[88, "openml-study-get-suite"]], "openml.study.list_studies": [[89, "openml-study-list-studies"]], "openml.study.list_suites": [[90, "openml-study-list-suites"]], "openml.study.update_study_status": [[91, "openml-study-update-study-status"]], "openml.study.update_suite_status": [[92, "openml-study-update-suite-status"]], "openml.tasks.OpenMLClassificationTask": [[93, "openml-tasks-openmlclassificationtask"]], "openml.tasks.OpenMLClusteringTask": [[94, "openml-tasks-openmlclusteringtask"]], "openml.tasks.OpenMLLearningCurveTask": [[95, "openml-tasks-openmllearningcurvetask"]], "openml.tasks.OpenMLRegressionTask": [[96, "openml-tasks-openmlregressiontask"]], "openml.tasks.OpenMLSplit": [[97, "openml-tasks-openmlsplit"]], "openml.tasks.OpenMLSupervisedTask": [[98, "openml-tasks-openmlsupervisedtask"]], "openml.tasks.OpenMLTask": [[99, "openml-tasks-openmltask"]], "openml.tasks.TaskType": [[100, "openml-tasks-tasktype"]], "openml.tasks.create_task": [[101, "openml-tasks-create-task"]], "openml.tasks.delete_task": [[102, "openml-tasks-delete-task"]], "openml.tasks.get_task": [[103, "openml-tasks-get-task"]], "openml.tasks.get_tasks": [[104, "openml-tasks-get-tasks"]], "openml.tasks.list_tasks": [[105, "openml-tasks-list-tasks"]], "OpenML": [[106, "openml"]], "How to get OpenML for python": [[106, "how-to-get-openml-for-python"]], "Content": [[106, "content"]], "Further information": [[106, "further-information"]], "Citing OpenML-Python": [[106, "citing-openml-python"]], "Changelog": [[107, "changelog"]], "0.13.1": [[107, "id1"]], "0.13.0": [[107, "id2"]], "0.12.2": [[107, "id3"]], "0.12.1": [[107, "id4"]], "0.12.0": [[107, "id5"]], "0.11.0": [[107, "id6"]], "0.10.2": [[107, "id7"]], "0.10.1": [[107, "id8"]], "0.10.0": [[107, "id9"]], "0.9.0": [[107, "id10"]], "0.8.0": [[107, "id11"]], "0.4.-0.7": [[107, "id13"]], "0.3.0": [[107, "id14"]], "Prior": [[107, "prior"]], "User Guide": [[108, "user-guide"]], "Installation & Set up": [[108, "installation-set-up"]], "Configuration": [[108, "configuration"]], "Docker": [[108, "docker"]], "Key concepts": [[108, "key-concepts"]], "Working with tasks": [[108, "working-with-tasks"]], "Running machine learning algorithms and uploading results": [[108, "running-machine-learning-algorithms-and-uploading-results"]], "Extending OpenML-Python": [[108, "extending-openml-python"]]}, "indexentries": {"module": [[0, "module-openml.datasets"], [0, "module-openml.evaluations"], [0, "module-openml.extensions"], [0, "module-openml.flows"], [0, "module-openml.runs"], [0, "module-openml.setups"], [0, "module-openml.study"], [0, "module-openml.tasks"]], "openml.datasets": [[0, "module-openml.datasets"]], "openml.evaluations": [[0, "module-openml.evaluations"]], "openml.extensions": [[0, "module-openml.extensions"]], "openml.flows": [[0, "module-openml.flows"]], "openml.runs": [[0, "module-openml.runs"]], "openml.setups": [[0, "module-openml.setups"]], "openml.study": [[0, "module-openml.study"]], "openml.tasks": [[0, "module-openml.tasks"]], "openmldatafeature (class in openml.datasets)": [[32, "openml.datasets.OpenMLDataFeature"]], "openmldataset (class in openml.datasets)": [[33, "openml.datasets.OpenMLDataset"]], "get_data() (openml.datasets.openmldataset method)": [[33, "openml.datasets.OpenMLDataset.get_data"]], "get_features_by_type() (openml.datasets.openmldataset method)": [[33, "openml.datasets.OpenMLDataset.get_features_by_type"]], "id (openml.datasets.openmldataset property)": [[33, "openml.datasets.OpenMLDataset.id"]], "open_in_browser() (openml.datasets.openmldataset method)": [[33, "openml.datasets.OpenMLDataset.open_in_browser"]], "openml_url (openml.datasets.openmldataset property)": [[33, "openml.datasets.OpenMLDataset.openml_url"]], "push_tag() (openml.datasets.openmldataset method)": [[33, "openml.datasets.OpenMLDataset.push_tag"]], "remove_tag() (openml.datasets.openmldataset method)": [[33, "openml.datasets.OpenMLDataset.remove_tag"]], "retrieve_class_labels() (openml.datasets.openmldataset method)": [[33, "openml.datasets.OpenMLDataset.retrieve_class_labels"]], "url_for_id() (openml.datasets.openmldataset class method)": [[33, "openml.datasets.OpenMLDataset.url_for_id"]], "attributes_arff_from_df() (in module openml.datasets)": [[34, "openml.datasets.attributes_arff_from_df"]], "check_datasets_active() (in module openml.datasets)": [[35, "openml.datasets.check_datasets_active"]], "create_dataset() (in module openml.datasets)": [[36, "openml.datasets.create_dataset"]], "delete_dataset() (in module openml.datasets)": [[37, "openml.datasets.delete_dataset"]], "edit_dataset() (in module openml.datasets)": [[38, "openml.datasets.edit_dataset"]], "fork_dataset() (in module openml.datasets)": [[39, "openml.datasets.fork_dataset"]], "get_dataset() (in module openml.datasets)": [[40, "openml.datasets.get_dataset"]], "get_datasets() (in module openml.datasets)": [[41, "openml.datasets.get_datasets"]], "list_datasets() (in module openml.datasets)": [[42, "openml.datasets.list_datasets"]], "list_qualities() (in module openml.datasets)": [[43, "openml.datasets.list_qualities"]], "status_update() (in module openml.datasets)": [[44, "openml.datasets.status_update"]], "openmlevaluation (class in openml.evaluations)": [[45, "openml.evaluations.OpenMLEvaluation"]], "list_evaluation_measures() (in module openml.evaluations)": [[46, "openml.evaluations.list_evaluation_measures"]], "list_evaluations() (in module openml.evaluations)": [[47, "openml.evaluations.list_evaluations"]], "list_evaluations_setups() (in module openml.evaluations)": [[48, "openml.evaluations.list_evaluations_setups"]], "extension (class in openml.extensions)": [[49, "openml.extensions.Extension"]], "can_handle_flow() (openml.extensions.extension class method)": [[49, "openml.extensions.Extension.can_handle_flow"]], "can_handle_model() (openml.extensions.extension class method)": [[49, "openml.extensions.Extension.can_handle_model"]], "check_if_model_fitted() (openml.extensions.extension method)": [[49, "openml.extensions.Extension.check_if_model_fitted"]], "create_setup_string() (openml.extensions.extension method)": [[49, "openml.extensions.Extension.create_setup_string"]], "flow_to_model() (openml.extensions.extension method)": [[49, "openml.extensions.Extension.flow_to_model"]], "get_version_information() (openml.extensions.extension method)": [[49, "openml.extensions.Extension.get_version_information"]], "instantiate_model_from_hpo_class() (openml.extensions.extension method)": [[49, "openml.extensions.Extension.instantiate_model_from_hpo_class"]], "is_estimator() (openml.extensions.extension method)": [[49, "openml.extensions.Extension.is_estimator"]], "model_to_flow() (openml.extensions.extension method)": [[49, "openml.extensions.Extension.model_to_flow"]], "obtain_parameter_values() (openml.extensions.extension method)": [[49, "openml.extensions.Extension.obtain_parameter_values"]], "seed_model() (openml.extensions.extension method)": [[49, "openml.extensions.Extension.seed_model"]], "get_extension_by_flow() (in module openml.extensions)": [[50, "openml.extensions.get_extension_by_flow"]], "get_extension_by_model() (in module openml.extensions)": [[51, "openml.extensions.get_extension_by_model"]], "register_extension() (in module openml.extensions)": [[52, "openml.extensions.register_extension"]], "sklearnextension (class in openml.extensions.sklearn)": [[53, "openml.extensions.sklearn.SklearnExtension"]], "can_handle_flow() (openml.extensions.sklearn.sklearnextension class method)": [[53, "openml.extensions.sklearn.SklearnExtension.can_handle_flow"]], "can_handle_model() (openml.extensions.sklearn.sklearnextension class method)": [[53, "openml.extensions.sklearn.SklearnExtension.can_handle_model"]], "check_if_model_fitted() (openml.extensions.sklearn.sklearnextension method)": [[53, "openml.extensions.sklearn.SklearnExtension.check_if_model_fitted"]], "create_setup_string() (openml.extensions.sklearn.sklearnextension method)": [[53, "openml.extensions.sklearn.SklearnExtension.create_setup_string"]], "flow_to_model() (openml.extensions.sklearn.sklearnextension method)": [[53, "openml.extensions.sklearn.SklearnExtension.flow_to_model"]], "get_version_information() (openml.extensions.sklearn.sklearnextension method)": [[53, "openml.extensions.sklearn.SklearnExtension.get_version_information"]], "instantiate_model_from_hpo_class() (openml.extensions.sklearn.sklearnextension method)": [[53, "openml.extensions.sklearn.SklearnExtension.instantiate_model_from_hpo_class"]], "is_estimator() (openml.extensions.sklearn.sklearnextension method)": [[53, "openml.extensions.sklearn.SklearnExtension.is_estimator"]], "model_to_flow() (openml.extensions.sklearn.sklearnextension method)": [[53, "openml.extensions.sklearn.SklearnExtension.model_to_flow"]], "obtain_parameter_values() (openml.extensions.sklearn.sklearnextension method)": [[53, "openml.extensions.sklearn.SklearnExtension.obtain_parameter_values"]], "seed_model() (openml.extensions.sklearn.sklearnextension method)": [[53, "openml.extensions.sklearn.SklearnExtension.seed_model"]], "trim_flow_name() (openml.extensions.sklearn.sklearnextension class method)": [[53, "openml.extensions.sklearn.SklearnExtension.trim_flow_name"]], "openmlflow (class in openml.flows)": [[54, "openml.flows.OpenMLFlow"]], "get_structure() (openml.flows.openmlflow method)": [[54, "openml.flows.OpenMLFlow.get_structure"]], "get_subflow() (openml.flows.openmlflow method)": [[54, "openml.flows.OpenMLFlow.get_subflow"]], "id (openml.flows.openmlflow property)": [[54, "openml.flows.OpenMLFlow.id"]], "open_in_browser() (openml.flows.openmlflow method)": [[54, "openml.flows.OpenMLFlow.open_in_browser"]], "openml_url (openml.flows.openmlflow property)": [[54, "openml.flows.OpenMLFlow.openml_url"]], "publish() (openml.flows.openmlflow method)": [[54, "openml.flows.OpenMLFlow.publish"]], "push_tag() (openml.flows.openmlflow method)": [[54, "openml.flows.OpenMLFlow.push_tag"]], "remove_tag() (openml.flows.openmlflow method)": [[54, "openml.flows.OpenMLFlow.remove_tag"]], "url_for_id() (openml.flows.openmlflow class method)": [[54, "openml.flows.OpenMLFlow.url_for_id"]], "assert_flows_equal() (in module openml.flows)": [[55, "openml.flows.assert_flows_equal"]], "delete_flow() (in module openml.flows)": [[56, "openml.flows.delete_flow"]], "flow_exists() (in module openml.flows)": [[57, "openml.flows.flow_exists"]], "get_flow() (in module openml.flows)": [[58, "openml.flows.get_flow"]], "list_flows() (in module openml.flows)": [[59, "openml.flows.list_flows"]], "openmlrun (class in openml.runs)": [[60, "openml.runs.OpenMLRun"]], "from_filesystem() (openml.runs.openmlrun class method)": [[60, "openml.runs.OpenMLRun.from_filesystem"]], "get_metric_fn() (openml.runs.openmlrun method)": [[60, "openml.runs.OpenMLRun.get_metric_fn"]], "id (openml.runs.openmlrun property)": [[60, "openml.runs.OpenMLRun.id"]], "open_in_browser() (openml.runs.openmlrun method)": [[60, "openml.runs.OpenMLRun.open_in_browser"]], "openml_url (openml.runs.openmlrun property)": [[60, "openml.runs.OpenMLRun.openml_url"]], "predictions (openml.runs.openmlrun property)": [[60, "openml.runs.OpenMLRun.predictions"]], "push_tag() (openml.runs.openmlrun method)": [[60, "openml.runs.OpenMLRun.push_tag"]], "remove_tag() (openml.runs.openmlrun method)": [[60, "openml.runs.OpenMLRun.remove_tag"]], "to_filesystem() (openml.runs.openmlrun method)": [[60, "openml.runs.OpenMLRun.to_filesystem"]], "url_for_id() (openml.runs.openmlrun class method)": [[60, "openml.runs.OpenMLRun.url_for_id"]], "delete_run() (in module openml.runs)": [[61, "openml.runs.delete_run"]], "get_run() (in module openml.runs)": [[62, "openml.runs.get_run"]], "get_run_trace() (in module openml.runs)": [[63, "openml.runs.get_run_trace"]], "get_runs() (in module openml.runs)": [[64, "openml.runs.get_runs"]], "initialize_model_from_run() (in module openml.runs)": [[65, "openml.runs.initialize_model_from_run"]], "initialize_model_from_trace() (in module openml.runs)": [[66, "openml.runs.initialize_model_from_trace"]], "list_runs() (in module openml.runs)": [[67, "openml.runs.list_runs"]], "run_exists() (in module openml.runs)": [[68, "openml.runs.run_exists"]], "run_flow_on_task() (in module openml.runs)": [[69, "openml.runs.run_flow_on_task"]], "run_model_on_task() (in module openml.runs)": [[70, "openml.runs.run_model_on_task"]], "openmlparameter (class in openml.setups)": [[71, "openml.setups.OpenMLParameter"]], "openmlsetup (class in openml.setups)": [[72, "openml.setups.OpenMLSetup"]], "get_setup() (in module openml.setups)": [[73, "openml.setups.get_setup"]], "initialize_model() (in module openml.setups)": [[74, "openml.setups.initialize_model"]], "list_setups() (in module openml.setups)": [[75, "openml.setups.list_setups"]], "setup_exists() (in module openml.setups)": [[76, "openml.setups.setup_exists"]], "openmlbenchmarksuite (class in openml.study)": [[77, "openml.study.OpenMLBenchmarkSuite"]], "id (openml.study.openmlbenchmarksuite property)": [[77, "openml.study.OpenMLBenchmarkSuite.id"]], "open_in_browser() (openml.study.openmlbenchmarksuite method)": [[77, "openml.study.OpenMLBenchmarkSuite.open_in_browser"]], "openml_url (openml.study.openmlbenchmarksuite property)": [[77, "openml.study.OpenMLBenchmarkSuite.openml_url"]], "push_tag() (openml.study.openmlbenchmarksuite method)": [[77, "openml.study.OpenMLBenchmarkSuite.push_tag"]], "remove_tag() (openml.study.openmlbenchmarksuite method)": [[77, "openml.study.OpenMLBenchmarkSuite.remove_tag"]], "url_for_id() (openml.study.openmlbenchmarksuite class method)": [[77, "openml.study.OpenMLBenchmarkSuite.url_for_id"]], "openmlstudy (class in openml.study)": [[78, "openml.study.OpenMLStudy"]], "id (openml.study.openmlstudy property)": [[78, "openml.study.OpenMLStudy.id"]], "open_in_browser() (openml.study.openmlstudy method)": [[78, "openml.study.OpenMLStudy.open_in_browser"]], "openml_url (openml.study.openmlstudy property)": [[78, "openml.study.OpenMLStudy.openml_url"]], "push_tag() (openml.study.openmlstudy method)": [[78, "openml.study.OpenMLStudy.push_tag"]], "remove_tag() (openml.study.openmlstudy method)": [[78, "openml.study.OpenMLStudy.remove_tag"]], "url_for_id() (openml.study.openmlstudy class method)": [[78, "openml.study.OpenMLStudy.url_for_id"]], "attach_to_study() (in module openml.study)": [[79, "openml.study.attach_to_study"]], "attach_to_suite() (in module openml.study)": [[80, "openml.study.attach_to_suite"]], "create_benchmark_suite() (in module openml.study)": [[81, "openml.study.create_benchmark_suite"]], "create_study() (in module openml.study)": [[82, "openml.study.create_study"]], "delete_study() (in module openml.study)": [[83, "openml.study.delete_study"]], "delete_suite() (in module openml.study)": [[84, "openml.study.delete_suite"]], "detach_from_study() (in module openml.study)": [[85, "openml.study.detach_from_study"]], "detach_from_suite() (in module openml.study)": [[86, "openml.study.detach_from_suite"]], "get_study() (in module openml.study)": [[87, "openml.study.get_study"]], "get_suite() (in module openml.study)": [[88, "openml.study.get_suite"]], "list_studies() (in module openml.study)": [[89, "openml.study.list_studies"]], "list_suites() (in module openml.study)": [[90, "openml.study.list_suites"]], "update_study_status() (in module openml.study)": [[91, "openml.study.update_study_status"]], "update_suite_status() (in module openml.study)": [[92, "openml.study.update_suite_status"]], "openmlclassificationtask (class in openml.tasks)": [[93, "openml.tasks.OpenMLClassificationTask"]], "download_split() (openml.tasks.openmlclassificationtask method)": [[93, "openml.tasks.OpenMLClassificationTask.download_split"]], "get_x_and_y() (openml.tasks.openmlclassificationtask method)": [[93, "openml.tasks.OpenMLClassificationTask.get_X_and_y"]], "get_dataset() (openml.tasks.openmlclassificationtask method)": [[93, "openml.tasks.OpenMLClassificationTask.get_dataset"]], "id (openml.tasks.openmlclassificationtask property)": [[93, "openml.tasks.OpenMLClassificationTask.id"]], "open_in_browser() (openml.tasks.openmlclassificationtask method)": [[93, "openml.tasks.OpenMLClassificationTask.open_in_browser"]], "openml_url (openml.tasks.openmlclassificationtask property)": [[93, "openml.tasks.OpenMLClassificationTask.openml_url"]], "push_tag() (openml.tasks.openmlclassificationtask method)": [[93, "openml.tasks.OpenMLClassificationTask.push_tag"]], "remove_tag() (openml.tasks.openmlclassificationtask method)": [[93, "openml.tasks.OpenMLClassificationTask.remove_tag"]], "url_for_id() (openml.tasks.openmlclassificationtask class method)": [[93, "openml.tasks.OpenMLClassificationTask.url_for_id"]], "openmlclusteringtask (class in openml.tasks)": [[94, "openml.tasks.OpenMLClusteringTask"]], "download_split() (openml.tasks.openmlclusteringtask method)": [[94, "openml.tasks.OpenMLClusteringTask.download_split"]], "get_x() (openml.tasks.openmlclusteringtask method)": [[94, "openml.tasks.OpenMLClusteringTask.get_X"]], "get_dataset() (openml.tasks.openmlclusteringtask method)": [[94, "openml.tasks.OpenMLClusteringTask.get_dataset"]], "id (openml.tasks.openmlclusteringtask property)": [[94, "openml.tasks.OpenMLClusteringTask.id"]], "open_in_browser() (openml.tasks.openmlclusteringtask method)": [[94, "openml.tasks.OpenMLClusteringTask.open_in_browser"]], "openml_url (openml.tasks.openmlclusteringtask property)": [[94, "openml.tasks.OpenMLClusteringTask.openml_url"]], "push_tag() (openml.tasks.openmlclusteringtask method)": [[94, "openml.tasks.OpenMLClusteringTask.push_tag"]], "remove_tag() (openml.tasks.openmlclusteringtask method)": [[94, "openml.tasks.OpenMLClusteringTask.remove_tag"]], "url_for_id() (openml.tasks.openmlclusteringtask class method)": [[94, "openml.tasks.OpenMLClusteringTask.url_for_id"]], "openmllearningcurvetask (class in openml.tasks)": [[95, "openml.tasks.OpenMLLearningCurveTask"]], "download_split() (openml.tasks.openmllearningcurvetask method)": [[95, "openml.tasks.OpenMLLearningCurveTask.download_split"]], "get_x_and_y() (openml.tasks.openmllearningcurvetask method)": [[95, "openml.tasks.OpenMLLearningCurveTask.get_X_and_y"]], "get_dataset() (openml.tasks.openmllearningcurvetask method)": [[95, "openml.tasks.OpenMLLearningCurveTask.get_dataset"]], "id (openml.tasks.openmllearningcurvetask property)": [[95, "openml.tasks.OpenMLLearningCurveTask.id"]], "open_in_browser() (openml.tasks.openmllearningcurvetask method)": [[95, "openml.tasks.OpenMLLearningCurveTask.open_in_browser"]], "openml_url (openml.tasks.openmllearningcurvetask property)": [[95, "openml.tasks.OpenMLLearningCurveTask.openml_url"]], "push_tag() (openml.tasks.openmllearningcurvetask method)": [[95, "openml.tasks.OpenMLLearningCurveTask.push_tag"]], "remove_tag() (openml.tasks.openmllearningcurvetask method)": [[95, "openml.tasks.OpenMLLearningCurveTask.remove_tag"]], "url_for_id() (openml.tasks.openmllearningcurvetask class method)": [[95, "openml.tasks.OpenMLLearningCurveTask.url_for_id"]], "openmlregressiontask (class in openml.tasks)": [[96, "openml.tasks.OpenMLRegressionTask"]], "download_split() (openml.tasks.openmlregressiontask method)": [[96, "openml.tasks.OpenMLRegressionTask.download_split"]], "get_x_and_y() (openml.tasks.openmlregressiontask method)": [[96, "openml.tasks.OpenMLRegressionTask.get_X_and_y"]], "get_dataset() (openml.tasks.openmlregressiontask method)": [[96, "openml.tasks.OpenMLRegressionTask.get_dataset"]], "id (openml.tasks.openmlregressiontask property)": [[96, "openml.tasks.OpenMLRegressionTask.id"]], "open_in_browser() (openml.tasks.openmlregressiontask method)": [[96, "openml.tasks.OpenMLRegressionTask.open_in_browser"]], "openml_url (openml.tasks.openmlregressiontask property)": [[96, "openml.tasks.OpenMLRegressionTask.openml_url"]], "push_tag() (openml.tasks.openmlregressiontask method)": [[96, "openml.tasks.OpenMLRegressionTask.push_tag"]], "remove_tag() (openml.tasks.openmlregressiontask method)": [[96, "openml.tasks.OpenMLRegressionTask.remove_tag"]], "url_for_id() (openml.tasks.openmlregressiontask class method)": [[96, "openml.tasks.OpenMLRegressionTask.url_for_id"]], "openmlsplit (class in openml.tasks)": [[97, "openml.tasks.OpenMLSplit"]], "openmlsupervisedtask (class in openml.tasks)": [[98, "openml.tasks.OpenMLSupervisedTask"]], "download_split() (openml.tasks.openmlsupervisedtask method)": [[98, "openml.tasks.OpenMLSupervisedTask.download_split"]], "get_x_and_y() (openml.tasks.openmlsupervisedtask method)": [[98, "openml.tasks.OpenMLSupervisedTask.get_X_and_y"]], "get_dataset() (openml.tasks.openmlsupervisedtask method)": [[98, "openml.tasks.OpenMLSupervisedTask.get_dataset"]], "id (openml.tasks.openmlsupervisedtask property)": [[98, "openml.tasks.OpenMLSupervisedTask.id"]], "open_in_browser() (openml.tasks.openmlsupervisedtask method)": [[98, "openml.tasks.OpenMLSupervisedTask.open_in_browser"]], "openml_url (openml.tasks.openmlsupervisedtask property)": [[98, "openml.tasks.OpenMLSupervisedTask.openml_url"]], "push_tag() (openml.tasks.openmlsupervisedtask method)": [[98, "openml.tasks.OpenMLSupervisedTask.push_tag"]], "remove_tag() (openml.tasks.openmlsupervisedtask method)": [[98, "openml.tasks.OpenMLSupervisedTask.remove_tag"]], "url_for_id() (openml.tasks.openmlsupervisedtask class method)": [[98, "openml.tasks.OpenMLSupervisedTask.url_for_id"]], "openmltask (class in openml.tasks)": [[99, "openml.tasks.OpenMLTask"]], "download_split() (openml.tasks.openmltask method)": [[99, "openml.tasks.OpenMLTask.download_split"]], "get_dataset() (openml.tasks.openmltask method)": [[99, "openml.tasks.OpenMLTask.get_dataset"]], "id (openml.tasks.openmltask property)": [[99, "openml.tasks.OpenMLTask.id"]], "open_in_browser() (openml.tasks.openmltask method)": [[99, "openml.tasks.OpenMLTask.open_in_browser"]], "openml_url (openml.tasks.openmltask property)": [[99, "openml.tasks.OpenMLTask.openml_url"]], "push_tag() (openml.tasks.openmltask method)": [[99, "openml.tasks.OpenMLTask.push_tag"]], "remove_tag() (openml.tasks.openmltask method)": [[99, "openml.tasks.OpenMLTask.remove_tag"]], "url_for_id() (openml.tasks.openmltask class method)": [[99, "openml.tasks.OpenMLTask.url_for_id"]], "tasktype (class in openml.tasks)": [[100, "openml.tasks.TaskType"]], "create_task() (in module openml.tasks)": [[101, "openml.tasks.create_task"]], "delete_task() (in module openml.tasks)": [[102, "openml.tasks.delete_task"]], "get_task() (in module openml.tasks)": [[103, "openml.tasks.get_task"]], "get_tasks() (in module openml.tasks)": [[104, "openml.tasks.get_tasks"]], "list_tasks() (in module openml.tasks)": [[105, "openml.tasks.list_tasks"]]}})